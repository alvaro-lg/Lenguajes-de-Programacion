Grammar:

Rule 0     S' -> program
Rule 1     program -> clases
Rule 2     clases -> clases clase ;
Rule 3     clases -> clase ;
Rule 4     clase -> CLASS TYPEID INHERITS TYPEID { error }
Rule 5     clase -> CLASS TYPEID INHERITS TYPEID { caracteristicas }
Rule 6     clase -> CLASS TYPEID { error }
Rule 7     clase -> CLASS TYPEID { caracteristicas }
Rule 8     clase -> CLASS TYPEID INHERITS TYPEID { }
Rule 9     clase -> CLASS TYPEID { }
Rule 10    caracteristicas -> caracteristicas caracteristica ;
Rule 11    caracteristicas -> caracteristica ;
Rule 12    caracteristica -> OBJECTID : TYPEID ASSIGN error
Rule 13    caracteristica -> OBJECTID : TYPEID ASSIGN expr
Rule 14    caracteristica -> OBJECTID : TYPEID
Rule 15    caracteristica -> OBJECTID ( error ) : TYPEID { expr }
Rule 16    caracteristica -> OBJECTID ( formales ) : TYPEID { error }
Rule 17    caracteristica -> OBJECTID ( formales ) : TYPEID { expr }
Rule 18    caracteristica -> OBJECTID ( ) : TYPEID { error }
Rule 19    caracteristica -> OBJECTID ( ) : TYPEID { expr }
Rule 20    formales -> formales formal ,
Rule 21    formales -> formal
Rule 22    formal -> OBJECTID : TYPEID
Rule 23    expr -> BOOL_CONST
Rule 24    expr -> error INT_CONST
Rule 25    expr -> STR_CONST
Rule 26    expr -> INT_CONST
Rule 27    expr -> OBJECTID
Rule 28    expr -> ( expr )
Rule 29    expr -> NOT error
Rule 30    expr -> NOT expr  [precedence=left, level=2]
Rule 31    expr -> expr = expr  [precedence=nonassoc, level=3]
Rule 32    expr -> expr LE expr  [precedence=nonassoc, level=3]
Rule 33    expr -> expr < expr  [precedence=nonassoc, level=3]
Rule 34    expr -> ~ expr  [precedence=left, level=7]
Rule 35    expr -> expr / expr  [precedence=left, level=5]
Rule 36    expr -> expr * expr  [precedence=left, level=5]
Rule 37    expr -> expr - expr  [precedence=left, level=4]
Rule 38    expr -> expr + expr  [precedence=left, level=4]
Rule 39    expr -> ISVOID error
Rule 40    expr -> ISVOID expr  [precedence=left, level=6]
Rule 41    expr -> error TYPEID
Rule 42    expr -> NEW TYPEID
Rule 43    expr -> CASE expr OF darrowlist ESAC
Rule 44    expr -> CASE expr OF error ESAC
Rule 45    expr -> CASE error OF darrowlist ESAC
Rule 46    expr -> LET OBJECTID : TYPEID expr IN error
Rule 47    expr -> LET OBJECTID : TYPEID error IN expr
Rule 48    expr -> LET OBJECTID : TYPEID inicializaciones IN expr
Rule 49    expr -> LET OBJECTID : TYPEID ASSIGN expr IN expr
Rule 50    expr -> LET OBJECTID : TYPEID IN expr
Rule 51    expr -> { exprs }
Rule 52    expr -> WHILE expr LOOP error POOL
Rule 53    expr -> WHILE error LOOP expr POOL
Rule 54    expr -> WHILE error LOOP error POOL
Rule 55    expr -> WHILE expr LOOP expr POOL
Rule 56    expr -> IF expr THEN expr ELSE expr FI
Rule 57    expr -> IF error THEN expr ELSE expr FI
Rule 58    expr -> IF expr THEN error FI
Rule 59    expr -> OBJECTID ( parametros )
Rule 60    expr -> OBJECTID ( )
Rule 61    expr -> expr @ TYPEID . OBJECTID ( parametros )
Rule 62    expr -> expr . OBJECTID ( parametros )
Rule 63    expr -> expr @ TYPEID . OBJECTID ( )
Rule 64    expr -> expr . OBJECTID ( )
Rule 65    expr -> OBJECTID ASSIGN error
Rule 66    expr -> OBJECTID ASSIGN expr
Rule 67    parametros -> parametros , expr
Rule 68    parametros -> expr
Rule 69    exprs -> error ;
Rule 70    exprs -> exprs expr ;
Rule 71    exprs -> expr ;
Rule 72    inicializaciones -> inicializaciones , inicializacion
Rule 73    inicializaciones -> inicializacion ,
Rule 74    inicializacion -> OBJECTID : TYPEID
Rule 75    inicializacion -> OBJECTID : TYPEID ASSIGN error
Rule 76    inicializacion -> OBJECTID : TYPEID ASSIGN expr
Rule 77    darrowlist -> darrowlist OBJECTID : TYPEID DARROW expr ;
Rule 78    darrowlist -> OBJECTID : TYPEID DARROW error ;
Rule 79    darrowlist -> OBJECTID : TYPEID DARROW expr ;

Terminals, with rules where they appear:

(                    : 15 16 17 18 19 28 59 60 61 62 63 64
)                    : 15 16 17 18 19 28 59 60 61 62 63 64
*                    : 36
+                    : 38
,                    : 20 67 72 73
-                    : 37
.                    : 61 62 63 64
/                    : 35
:                    : 12 13 14 15 16 17 18 19 22 46 47 48 49 50 74 75 76 77 78 79
;                    : 2 3 10 11 69 70 71 77 78 79
<                    : 33
=                    : 31
@                    : 61 63
ASSIGN               : 12 13 49 65 66 75 76
BOOL_CONST           : 23
CASE                 : 43 44 45
CLASS                : 4 5 6 7 8 9
DARROW               : 77 78 79
ELSE                 : 56 57
ESAC                 : 43 44 45
FI                   : 56 57 58
IF                   : 56 57 58
IN                   : 46 47 48 49 50
INHERITS             : 4 5 8
INT_CONST            : 24 26
ISVOID               : 39 40
LE                   : 32
LET                  : 46 47 48 49 50
LOOP                 : 52 53 54 55
NEW                  : 42
NOT                  : 29 30
OBJECTID             : 12 13 14 15 16 17 18 19 22 27 46 47 48 49 50 59 60 61 62 63 64 65 66 74 75 76 77 78 79
OF                   : 43 44 45
POOL                 : 52 53 54 55
STR_CONST            : 25
THEN                 : 56 57 58
TYPEID               : 4 4 5 5 6 7 8 8 9 12 13 14 15 16 17 18 19 22 41 42 46 47 48 49 50 61 63 74 75 76 77 78 79
WHILE                : 52 53 54 55
error                : 4 6 12 15 16 18 24 29 39 41 44 45 46 47 52 53 54 54 57 58 65 69 75 78
{                    : 4 5 6 7 8 9 15 16 17 18 19 51
}                    : 4 5 6 7 8 9 15 16 17 18 19 51
~                    : 34

Nonterminals, with rules where they appear:

caracteristica       : 10 11
caracteristicas      : 5 7 10
clase                : 2 3
clases               : 1 2
darrowlist           : 43 45 77
expr                 : 13 15 17 19 28 30 31 31 32 32 33 33 34 35 35 36 36 37 37 38 38 40 43 44 46 47 48 49 49 50 52 53 55 55 56 56 56 57 57 58 61 62 63 64 66 67 68 70 71 76 77 79
exprs                : 51 70
formal               : 20 21
formales             : 16 17 20
inicializacion       : 72 73
inicializaciones     : 48 72
parametros           : 59 61 62 67
program              : 0


state 0

    (0) S' -> . program
    (1) program -> . clases
    (2) clases -> . clases clase ;
    (3) clases -> . clase ;
    (4) clase -> . CLASS TYPEID INHERITS TYPEID { error }
    (5) clase -> . CLASS TYPEID INHERITS TYPEID { caracteristicas }
    (6) clase -> . CLASS TYPEID { error }
    (7) clase -> . CLASS TYPEID { caracteristicas }
    (8) clase -> . CLASS TYPEID INHERITS TYPEID { }
    (9) clase -> . CLASS TYPEID { }
    CLASS           shift and go to state 4

    program                        shift and go to state 1
    clases                         shift and go to state 2
    clase                          shift and go to state 3

state 1

    (0) S' -> program .


state 2

    (1) program -> clases .
    (2) clases -> clases . clase ;
    (4) clase -> . CLASS TYPEID INHERITS TYPEID { error }
    (5) clase -> . CLASS TYPEID INHERITS TYPEID { caracteristicas }
    (6) clase -> . CLASS TYPEID { error }
    (7) clase -> . CLASS TYPEID { caracteristicas }
    (8) clase -> . CLASS TYPEID INHERITS TYPEID { }
    (9) clase -> . CLASS TYPEID { }
    $end            reduce using rule 1 (program -> clases .)
    CLASS           shift and go to state 4

    clase                          shift and go to state 5

state 3

    (3) clases -> clase . ;
    ;               shift and go to state 6


state 4

    (4) clase -> CLASS . TYPEID INHERITS TYPEID { error }
    (5) clase -> CLASS . TYPEID INHERITS TYPEID { caracteristicas }
    (6) clase -> CLASS . TYPEID { error }
    (7) clase -> CLASS . TYPEID { caracteristicas }
    (8) clase -> CLASS . TYPEID INHERITS TYPEID { }
    (9) clase -> CLASS . TYPEID { }
    TYPEID          shift and go to state 7


state 5

    (2) clases -> clases clase . ;
    ;               shift and go to state 8


state 6

    (3) clases -> clase ; .
    CLASS           reduce using rule 3 (clases -> clase ; .)
    $end            reduce using rule 3 (clases -> clase ; .)


state 7

    (4) clase -> CLASS TYPEID . INHERITS TYPEID { error }
    (5) clase -> CLASS TYPEID . INHERITS TYPEID { caracteristicas }
    (6) clase -> CLASS TYPEID . { error }
    (7) clase -> CLASS TYPEID . { caracteristicas }
    (8) clase -> CLASS TYPEID . INHERITS TYPEID { }
    (9) clase -> CLASS TYPEID . { }
    INHERITS        shift and go to state 9
    {               shift and go to state 10


state 8

    (2) clases -> clases clase ; .
    CLASS           reduce using rule 2 (clases -> clases clase ; .)
    $end            reduce using rule 2 (clases -> clases clase ; .)


state 9

    (4) clase -> CLASS TYPEID INHERITS . TYPEID { error }
    (5) clase -> CLASS TYPEID INHERITS . TYPEID { caracteristicas }
    (8) clase -> CLASS TYPEID INHERITS . TYPEID { }
    TYPEID          shift and go to state 11


state 10

    (6) clase -> CLASS TYPEID { . error }
    (7) clase -> CLASS TYPEID { . caracteristicas }
    (9) clase -> CLASS TYPEID { . }
    (10) caracteristicas -> . caracteristicas caracteristica ;
    (11) caracteristicas -> . caracteristica ;
    (12) caracteristica -> . OBJECTID : TYPEID ASSIGN error
    (13) caracteristica -> . OBJECTID : TYPEID ASSIGN expr
    (14) caracteristica -> . OBJECTID : TYPEID
    (15) caracteristica -> . OBJECTID ( error ) : TYPEID { expr }
    (16) caracteristica -> . OBJECTID ( formales ) : TYPEID { error }
    (17) caracteristica -> . OBJECTID ( formales ) : TYPEID { expr }
    (18) caracteristica -> . OBJECTID ( ) : TYPEID { error }
    (19) caracteristica -> . OBJECTID ( ) : TYPEID { expr }
    error           shift and go to state 12
    }               shift and go to state 13
    OBJECTID        shift and go to state 16

    caracteristicas                shift and go to state 14
    caracteristica                 shift and go to state 15

state 11

    (4) clase -> CLASS TYPEID INHERITS TYPEID . { error }
    (5) clase -> CLASS TYPEID INHERITS TYPEID . { caracteristicas }
    (8) clase -> CLASS TYPEID INHERITS TYPEID . { }
    {               shift and go to state 17


state 12

    (6) clase -> CLASS TYPEID { error . }
    }               shift and go to state 18


state 13

    (9) clase -> CLASS TYPEID { } .
    ;               reduce using rule 9 (clase -> CLASS TYPEID { } .)


state 14

    (7) clase -> CLASS TYPEID { caracteristicas . }
    (10) caracteristicas -> caracteristicas . caracteristica ;
    (12) caracteristica -> . OBJECTID : TYPEID ASSIGN error
    (13) caracteristica -> . OBJECTID : TYPEID ASSIGN expr
    (14) caracteristica -> . OBJECTID : TYPEID
    (15) caracteristica -> . OBJECTID ( error ) : TYPEID { expr }
    (16) caracteristica -> . OBJECTID ( formales ) : TYPEID { error }
    (17) caracteristica -> . OBJECTID ( formales ) : TYPEID { expr }
    (18) caracteristica -> . OBJECTID ( ) : TYPEID { error }
    (19) caracteristica -> . OBJECTID ( ) : TYPEID { expr }
    }               shift and go to state 19
    OBJECTID        shift and go to state 16

    caracteristica                 shift and go to state 20

state 15

    (11) caracteristicas -> caracteristica . ;
    ;               shift and go to state 21


state 16

    (12) caracteristica -> OBJECTID . : TYPEID ASSIGN error
    (13) caracteristica -> OBJECTID . : TYPEID ASSIGN expr
    (14) caracteristica -> OBJECTID . : TYPEID
    (15) caracteristica -> OBJECTID . ( error ) : TYPEID { expr }
    (16) caracteristica -> OBJECTID . ( formales ) : TYPEID { error }
    (17) caracteristica -> OBJECTID . ( formales ) : TYPEID { expr }
    (18) caracteristica -> OBJECTID . ( ) : TYPEID { error }
    (19) caracteristica -> OBJECTID . ( ) : TYPEID { expr }
    :               shift and go to state 22
    (               shift and go to state 23


state 17

    (4) clase -> CLASS TYPEID INHERITS TYPEID { . error }
    (5) clase -> CLASS TYPEID INHERITS TYPEID { . caracteristicas }
    (8) clase -> CLASS TYPEID INHERITS TYPEID { . }
    (10) caracteristicas -> . caracteristicas caracteristica ;
    (11) caracteristicas -> . caracteristica ;
    (12) caracteristica -> . OBJECTID : TYPEID ASSIGN error
    (13) caracteristica -> . OBJECTID : TYPEID ASSIGN expr
    (14) caracteristica -> . OBJECTID : TYPEID
    (15) caracteristica -> . OBJECTID ( error ) : TYPEID { expr }
    (16) caracteristica -> . OBJECTID ( formales ) : TYPEID { error }
    (17) caracteristica -> . OBJECTID ( formales ) : TYPEID { expr }
    (18) caracteristica -> . OBJECTID ( ) : TYPEID { error }
    (19) caracteristica -> . OBJECTID ( ) : TYPEID { expr }
    error           shift and go to state 24
    }               shift and go to state 25
    OBJECTID        shift and go to state 16

    caracteristicas                shift and go to state 26
    caracteristica                 shift and go to state 15

state 18

    (6) clase -> CLASS TYPEID { error } .
    ;               reduce using rule 6 (clase -> CLASS TYPEID { error } .)


state 19

    (7) clase -> CLASS TYPEID { caracteristicas } .
    ;               reduce using rule 7 (clase -> CLASS TYPEID { caracteristicas } .)


state 20

    (10) caracteristicas -> caracteristicas caracteristica . ;
    ;               shift and go to state 27


state 21

    (11) caracteristicas -> caracteristica ; .
    }               reduce using rule 11 (caracteristicas -> caracteristica ; .)
    OBJECTID        reduce using rule 11 (caracteristicas -> caracteristica ; .)


state 22

    (12) caracteristica -> OBJECTID : . TYPEID ASSIGN error
    (13) caracteristica -> OBJECTID : . TYPEID ASSIGN expr
    (14) caracteristica -> OBJECTID : . TYPEID
    TYPEID          shift and go to state 28


state 23

    (15) caracteristica -> OBJECTID ( . error ) : TYPEID { expr }
    (16) caracteristica -> OBJECTID ( . formales ) : TYPEID { error }
    (17) caracteristica -> OBJECTID ( . formales ) : TYPEID { expr }
    (18) caracteristica -> OBJECTID ( . ) : TYPEID { error }
    (19) caracteristica -> OBJECTID ( . ) : TYPEID { expr }
    (20) formales -> . formales formal ,
    (21) formales -> . formal
    (22) formal -> . OBJECTID : TYPEID
    error           shift and go to state 30
    )               shift and go to state 31
    OBJECTID        shift and go to state 29

    formales                       shift and go to state 32
    formal                         shift and go to state 33

state 24

    (4) clase -> CLASS TYPEID INHERITS TYPEID { error . }
    }               shift and go to state 34


state 25

    (8) clase -> CLASS TYPEID INHERITS TYPEID { } .
    ;               reduce using rule 8 (clase -> CLASS TYPEID INHERITS TYPEID { } .)


state 26

    (5) clase -> CLASS TYPEID INHERITS TYPEID { caracteristicas . }
    (10) caracteristicas -> caracteristicas . caracteristica ;
    (12) caracteristica -> . OBJECTID : TYPEID ASSIGN error
    (13) caracteristica -> . OBJECTID : TYPEID ASSIGN expr
    (14) caracteristica -> . OBJECTID : TYPEID
    (15) caracteristica -> . OBJECTID ( error ) : TYPEID { expr }
    (16) caracteristica -> . OBJECTID ( formales ) : TYPEID { error }
    (17) caracteristica -> . OBJECTID ( formales ) : TYPEID { expr }
    (18) caracteristica -> . OBJECTID ( ) : TYPEID { error }
    (19) caracteristica -> . OBJECTID ( ) : TYPEID { expr }
    }               shift and go to state 35
    OBJECTID        shift and go to state 16

    caracteristica                 shift and go to state 20

state 27

    (10) caracteristicas -> caracteristicas caracteristica ; .
    }               reduce using rule 10 (caracteristicas -> caracteristicas caracteristica ; .)
    OBJECTID        reduce using rule 10 (caracteristicas -> caracteristicas caracteristica ; .)


state 28

    (12) caracteristica -> OBJECTID : TYPEID . ASSIGN error
    (13) caracteristica -> OBJECTID : TYPEID . ASSIGN expr
    (14) caracteristica -> OBJECTID : TYPEID .
    ASSIGN          shift and go to state 36
    ;               reduce using rule 14 (caracteristica -> OBJECTID : TYPEID .)


state 29

    (22) formal -> OBJECTID . : TYPEID
    :               shift and go to state 37


state 30

    (15) caracteristica -> OBJECTID ( error . ) : TYPEID { expr }
    )               shift and go to state 38


state 31

    (18) caracteristica -> OBJECTID ( ) . : TYPEID { error }
    (19) caracteristica -> OBJECTID ( ) . : TYPEID { expr }
    :               shift and go to state 39


state 32

    (16) caracteristica -> OBJECTID ( formales . ) : TYPEID { error }
    (17) caracteristica -> OBJECTID ( formales . ) : TYPEID { expr }
    (20) formales -> formales . formal ,
    (22) formal -> . OBJECTID : TYPEID
    )               shift and go to state 40
    OBJECTID        shift and go to state 29

    formal                         shift and go to state 41

state 33

    (21) formales -> formal .
    )               reduce using rule 21 (formales -> formal .)
    OBJECTID        reduce using rule 21 (formales -> formal .)


state 34

    (4) clase -> CLASS TYPEID INHERITS TYPEID { error } .
    ;               reduce using rule 4 (clase -> CLASS TYPEID INHERITS TYPEID { error } .)


state 35

    (5) clase -> CLASS TYPEID INHERITS TYPEID { caracteristicas } .
    ;               reduce using rule 5 (clase -> CLASS TYPEID INHERITS TYPEID { caracteristicas } .)


state 36

    (12) caracteristica -> OBJECTID : TYPEID ASSIGN . error
    (13) caracteristica -> OBJECTID : TYPEID ASSIGN . expr
    (23) expr -> . BOOL_CONST
    (24) expr -> . error INT_CONST
    (25) expr -> . STR_CONST
    (26) expr -> . INT_CONST
    (27) expr -> . OBJECTID
    (28) expr -> . ( expr )
    (29) expr -> . NOT error
    (30) expr -> . NOT expr
    (31) expr -> . expr = expr
    (32) expr -> . expr LE expr
    (33) expr -> . expr < expr
    (34) expr -> . ~ expr
    (35) expr -> . expr / expr
    (36) expr -> . expr * expr
    (37) expr -> . expr - expr
    (38) expr -> . expr + expr
    (39) expr -> . ISVOID error
    (40) expr -> . ISVOID expr
    (41) expr -> . error TYPEID
    (42) expr -> . NEW TYPEID
    (43) expr -> . CASE expr OF darrowlist ESAC
    (44) expr -> . CASE expr OF error ESAC
    (45) expr -> . CASE error OF darrowlist ESAC
    (46) expr -> . LET OBJECTID : TYPEID expr IN error
    (47) expr -> . LET OBJECTID : TYPEID error IN expr
    (48) expr -> . LET OBJECTID : TYPEID inicializaciones IN expr
    (49) expr -> . LET OBJECTID : TYPEID ASSIGN expr IN expr
    (50) expr -> . LET OBJECTID : TYPEID IN expr
    (51) expr -> . { exprs }
    (52) expr -> . WHILE expr LOOP error POOL
    (53) expr -> . WHILE error LOOP expr POOL
    (54) expr -> . WHILE error LOOP error POOL
    (55) expr -> . WHILE expr LOOP expr POOL
    (56) expr -> . IF expr THEN expr ELSE expr FI
    (57) expr -> . IF error THEN expr ELSE expr FI
    (58) expr -> . IF expr THEN error FI
    (59) expr -> . OBJECTID ( parametros )
    (60) expr -> . OBJECTID ( )
    (61) expr -> . expr @ TYPEID . OBJECTID ( parametros )
    (62) expr -> . expr . OBJECTID ( parametros )
    (63) expr -> . expr @ TYPEID . OBJECTID ( )
    (64) expr -> . expr . OBJECTID ( )
    (65) expr -> . OBJECTID ASSIGN error
    (66) expr -> . OBJECTID ASSIGN expr
    error           shift and go to state 43
    BOOL_CONST      shift and go to state 45
    STR_CONST       shift and go to state 47
    INT_CONST       shift and go to state 46
    OBJECTID        shift and go to state 42
    (               shift and go to state 48
    NOT             shift and go to state 49
    ~               shift and go to state 50
    ISVOID          shift and go to state 51
    NEW             shift and go to state 52
    CASE            shift and go to state 53
    LET             shift and go to state 54
    {               shift and go to state 55
    WHILE           shift and go to state 56
    IF              shift and go to state 57

    expr                           shift and go to state 44

state 37

    (22) formal -> OBJECTID : . TYPEID
    TYPEID          shift and go to state 58


state 38

    (15) caracteristica -> OBJECTID ( error ) . : TYPEID { expr }
    :               shift and go to state 59


state 39

    (18) caracteristica -> OBJECTID ( ) : . TYPEID { error }
    (19) caracteristica -> OBJECTID ( ) : . TYPEID { expr }
    TYPEID          shift and go to state 60


state 40

    (16) caracteristica -> OBJECTID ( formales ) . : TYPEID { error }
    (17) caracteristica -> OBJECTID ( formales ) . : TYPEID { expr }
    :               shift and go to state 61


state 41

    (20) formales -> formales formal . ,
    ,               shift and go to state 62


state 42

    (27) expr -> OBJECTID .
    (59) expr -> OBJECTID . ( parametros )
    (60) expr -> OBJECTID . ( )
    (65) expr -> OBJECTID . ASSIGN error
    (66) expr -> OBJECTID . ASSIGN expr
    =               reduce using rule 27 (expr -> OBJECTID .)
    LE              reduce using rule 27 (expr -> OBJECTID .)
    <               reduce using rule 27 (expr -> OBJECTID .)
    /               reduce using rule 27 (expr -> OBJECTID .)
    *               reduce using rule 27 (expr -> OBJECTID .)
    -               reduce using rule 27 (expr -> OBJECTID .)
    +               reduce using rule 27 (expr -> OBJECTID .)
    @               reduce using rule 27 (expr -> OBJECTID .)
    .               reduce using rule 27 (expr -> OBJECTID .)
    ;               reduce using rule 27 (expr -> OBJECTID .)
    )               reduce using rule 27 (expr -> OBJECTID .)
    OF              reduce using rule 27 (expr -> OBJECTID .)
    LOOP            reduce using rule 27 (expr -> OBJECTID .)
    THEN            reduce using rule 27 (expr -> OBJECTID .)
    ,               reduce using rule 27 (expr -> OBJECTID .)
    }               reduce using rule 27 (expr -> OBJECTID .)
    POOL            reduce using rule 27 (expr -> OBJECTID .)
    ELSE            reduce using rule 27 (expr -> OBJECTID .)
    IN              reduce using rule 27 (expr -> OBJECTID .)
    FI              reduce using rule 27 (expr -> OBJECTID .)
    (               shift and go to state 63
    ASSIGN          shift and go to state 64


state 43

    (12) caracteristica -> OBJECTID : TYPEID ASSIGN error .
    (24) expr -> error . INT_CONST
    (41) expr -> error . TYPEID
    ;               reduce using rule 12 (caracteristica -> OBJECTID : TYPEID ASSIGN error .)
    INT_CONST       shift and go to state 66
    TYPEID          shift and go to state 65


state 44

    (13) caracteristica -> OBJECTID : TYPEID ASSIGN expr .
    (31) expr -> expr . = expr
    (32) expr -> expr . LE expr
    (33) expr -> expr . < expr
    (35) expr -> expr . / expr
    (36) expr -> expr . * expr
    (37) expr -> expr . - expr
    (38) expr -> expr . + expr
    (61) expr -> expr . @ TYPEID . OBJECTID ( parametros )
    (62) expr -> expr . . OBJECTID ( parametros )
    (63) expr -> expr . @ TYPEID . OBJECTID ( )
    (64) expr -> expr . . OBJECTID ( )
    ;               reduce using rule 13 (caracteristica -> OBJECTID : TYPEID ASSIGN expr .)
    =               shift and go to state 67
    LE              shift and go to state 68
    <               shift and go to state 69
    /               shift and go to state 70
    *               shift and go to state 71
    -               shift and go to state 72
    +               shift and go to state 73
    @               shift and go to state 74
    .               shift and go to state 75


state 45

    (23) expr -> BOOL_CONST .
    =               reduce using rule 23 (expr -> BOOL_CONST .)
    LE              reduce using rule 23 (expr -> BOOL_CONST .)
    <               reduce using rule 23 (expr -> BOOL_CONST .)
    /               reduce using rule 23 (expr -> BOOL_CONST .)
    *               reduce using rule 23 (expr -> BOOL_CONST .)
    -               reduce using rule 23 (expr -> BOOL_CONST .)
    +               reduce using rule 23 (expr -> BOOL_CONST .)
    @               reduce using rule 23 (expr -> BOOL_CONST .)
    .               reduce using rule 23 (expr -> BOOL_CONST .)
    ;               reduce using rule 23 (expr -> BOOL_CONST .)
    )               reduce using rule 23 (expr -> BOOL_CONST .)
    OF              reduce using rule 23 (expr -> BOOL_CONST .)
    LOOP            reduce using rule 23 (expr -> BOOL_CONST .)
    THEN            reduce using rule 23 (expr -> BOOL_CONST .)
    ,               reduce using rule 23 (expr -> BOOL_CONST .)
    }               reduce using rule 23 (expr -> BOOL_CONST .)
    POOL            reduce using rule 23 (expr -> BOOL_CONST .)
    ELSE            reduce using rule 23 (expr -> BOOL_CONST .)
    IN              reduce using rule 23 (expr -> BOOL_CONST .)
    FI              reduce using rule 23 (expr -> BOOL_CONST .)


state 46

    (26) expr -> INT_CONST .
    =               reduce using rule 26 (expr -> INT_CONST .)
    LE              reduce using rule 26 (expr -> INT_CONST .)
    <               reduce using rule 26 (expr -> INT_CONST .)
    /               reduce using rule 26 (expr -> INT_CONST .)
    *               reduce using rule 26 (expr -> INT_CONST .)
    -               reduce using rule 26 (expr -> INT_CONST .)
    +               reduce using rule 26 (expr -> INT_CONST .)
    @               reduce using rule 26 (expr -> INT_CONST .)
    .               reduce using rule 26 (expr -> INT_CONST .)
    ;               reduce using rule 26 (expr -> INT_CONST .)
    )               reduce using rule 26 (expr -> INT_CONST .)
    OF              reduce using rule 26 (expr -> INT_CONST .)
    LOOP            reduce using rule 26 (expr -> INT_CONST .)
    THEN            reduce using rule 26 (expr -> INT_CONST .)
    ,               reduce using rule 26 (expr -> INT_CONST .)
    }               reduce using rule 26 (expr -> INT_CONST .)
    POOL            reduce using rule 26 (expr -> INT_CONST .)
    ELSE            reduce using rule 26 (expr -> INT_CONST .)
    IN              reduce using rule 26 (expr -> INT_CONST .)
    FI              reduce using rule 26 (expr -> INT_CONST .)


state 47

    (25) expr -> STR_CONST .
    =               reduce using rule 25 (expr -> STR_CONST .)
    LE              reduce using rule 25 (expr -> STR_CONST .)
    <               reduce using rule 25 (expr -> STR_CONST .)
    /               reduce using rule 25 (expr -> STR_CONST .)
    *               reduce using rule 25 (expr -> STR_CONST .)
    -               reduce using rule 25 (expr -> STR_CONST .)
    +               reduce using rule 25 (expr -> STR_CONST .)
    @               reduce using rule 25 (expr -> STR_CONST .)
    .               reduce using rule 25 (expr -> STR_CONST .)
    ;               reduce using rule 25 (expr -> STR_CONST .)
    )               reduce using rule 25 (expr -> STR_CONST .)
    OF              reduce using rule 25 (expr -> STR_CONST .)
    LOOP            reduce using rule 25 (expr -> STR_CONST .)
    THEN            reduce using rule 25 (expr -> STR_CONST .)
    ,               reduce using rule 25 (expr -> STR_CONST .)
    }               reduce using rule 25 (expr -> STR_CONST .)
    POOL            reduce using rule 25 (expr -> STR_CONST .)
    ELSE            reduce using rule 25 (expr -> STR_CONST .)
    IN              reduce using rule 25 (expr -> STR_CONST .)
    FI              reduce using rule 25 (expr -> STR_CONST .)


state 48

    (28) expr -> ( . expr )
    (23) expr -> . BOOL_CONST
    (24) expr -> . error INT_CONST
    (25) expr -> . STR_CONST
    (26) expr -> . INT_CONST
    (27) expr -> . OBJECTID
    (28) expr -> . ( expr )
    (29) expr -> . NOT error
    (30) expr -> . NOT expr
    (31) expr -> . expr = expr
    (32) expr -> . expr LE expr
    (33) expr -> . expr < expr
    (34) expr -> . ~ expr
    (35) expr -> . expr / expr
    (36) expr -> . expr * expr
    (37) expr -> . expr - expr
    (38) expr -> . expr + expr
    (39) expr -> . ISVOID error
    (40) expr -> . ISVOID expr
    (41) expr -> . error TYPEID
    (42) expr -> . NEW TYPEID
    (43) expr -> . CASE expr OF darrowlist ESAC
    (44) expr -> . CASE expr OF error ESAC
    (45) expr -> . CASE error OF darrowlist ESAC
    (46) expr -> . LET OBJECTID : TYPEID expr IN error
    (47) expr -> . LET OBJECTID : TYPEID error IN expr
    (48) expr -> . LET OBJECTID : TYPEID inicializaciones IN expr
    (49) expr -> . LET OBJECTID : TYPEID ASSIGN expr IN expr
    (50) expr -> . LET OBJECTID : TYPEID IN expr
    (51) expr -> . { exprs }
    (52) expr -> . WHILE expr LOOP error POOL
    (53) expr -> . WHILE error LOOP expr POOL
    (54) expr -> . WHILE error LOOP error POOL
    (55) expr -> . WHILE expr LOOP expr POOL
    (56) expr -> . IF expr THEN expr ELSE expr FI
    (57) expr -> . IF error THEN expr ELSE expr FI
    (58) expr -> . IF expr THEN error FI
    (59) expr -> . OBJECTID ( parametros )
    (60) expr -> . OBJECTID ( )
    (61) expr -> . expr @ TYPEID . OBJECTID ( parametros )
    (62) expr -> . expr . OBJECTID ( parametros )
    (63) expr -> . expr @ TYPEID . OBJECTID ( )
    (64) expr -> . expr . OBJECTID ( )
    (65) expr -> . OBJECTID ASSIGN error
    (66) expr -> . OBJECTID ASSIGN expr
    BOOL_CONST      shift and go to state 45
    error           shift and go to state 77
    STR_CONST       shift and go to state 47
    INT_CONST       shift and go to state 46
    OBJECTID        shift and go to state 42
    (               shift and go to state 48
    NOT             shift and go to state 49
    ~               shift and go to state 50
    ISVOID          shift and go to state 51
    NEW             shift and go to state 52
    CASE            shift and go to state 53
    LET             shift and go to state 54
    {               shift and go to state 55
    WHILE           shift and go to state 56
    IF              shift and go to state 57

    expr                           shift and go to state 76

state 49

    (29) expr -> NOT . error
    (30) expr -> NOT . expr
    (23) expr -> . BOOL_CONST
    (24) expr -> . error INT_CONST
    (25) expr -> . STR_CONST
    (26) expr -> . INT_CONST
    (27) expr -> . OBJECTID
    (28) expr -> . ( expr )
    (29) expr -> . NOT error
    (30) expr -> . NOT expr
    (31) expr -> . expr = expr
    (32) expr -> . expr LE expr
    (33) expr -> . expr < expr
    (34) expr -> . ~ expr
    (35) expr -> . expr / expr
    (36) expr -> . expr * expr
    (37) expr -> . expr - expr
    (38) expr -> . expr + expr
    (39) expr -> . ISVOID error
    (40) expr -> . ISVOID expr
    (41) expr -> . error TYPEID
    (42) expr -> . NEW TYPEID
    (43) expr -> . CASE expr OF darrowlist ESAC
    (44) expr -> . CASE expr OF error ESAC
    (45) expr -> . CASE error OF darrowlist ESAC
    (46) expr -> . LET OBJECTID : TYPEID expr IN error
    (47) expr -> . LET OBJECTID : TYPEID error IN expr
    (48) expr -> . LET OBJECTID : TYPEID inicializaciones IN expr
    (49) expr -> . LET OBJECTID : TYPEID ASSIGN expr IN expr
    (50) expr -> . LET OBJECTID : TYPEID IN expr
    (51) expr -> . { exprs }
    (52) expr -> . WHILE expr LOOP error POOL
    (53) expr -> . WHILE error LOOP expr POOL
    (54) expr -> . WHILE error LOOP error POOL
    (55) expr -> . WHILE expr LOOP expr POOL
    (56) expr -> . IF expr THEN expr ELSE expr FI
    (57) expr -> . IF error THEN expr ELSE expr FI
    (58) expr -> . IF expr THEN error FI
    (59) expr -> . OBJECTID ( parametros )
    (60) expr -> . OBJECTID ( )
    (61) expr -> . expr @ TYPEID . OBJECTID ( parametros )
    (62) expr -> . expr . OBJECTID ( parametros )
    (63) expr -> . expr @ TYPEID . OBJECTID ( )
    (64) expr -> . expr . OBJECTID ( )
    (65) expr -> . OBJECTID ASSIGN error
    (66) expr -> . OBJECTID ASSIGN expr
    error           shift and go to state 78
    BOOL_CONST      shift and go to state 45
    STR_CONST       shift and go to state 47
    INT_CONST       shift and go to state 46
    OBJECTID        shift and go to state 42
    (               shift and go to state 48
    NOT             shift and go to state 49
    ~               shift and go to state 50
    ISVOID          shift and go to state 51
    NEW             shift and go to state 52
    CASE            shift and go to state 53
    LET             shift and go to state 54
    {               shift and go to state 55
    WHILE           shift and go to state 56
    IF              shift and go to state 57

    expr                           shift and go to state 79

state 50

    (34) expr -> ~ . expr
    (23) expr -> . BOOL_CONST
    (24) expr -> . error INT_CONST
    (25) expr -> . STR_CONST
    (26) expr -> . INT_CONST
    (27) expr -> . OBJECTID
    (28) expr -> . ( expr )
    (29) expr -> . NOT error
    (30) expr -> . NOT expr
    (31) expr -> . expr = expr
    (32) expr -> . expr LE expr
    (33) expr -> . expr < expr
    (34) expr -> . ~ expr
    (35) expr -> . expr / expr
    (36) expr -> . expr * expr
    (37) expr -> . expr - expr
    (38) expr -> . expr + expr
    (39) expr -> . ISVOID error
    (40) expr -> . ISVOID expr
    (41) expr -> . error TYPEID
    (42) expr -> . NEW TYPEID
    (43) expr -> . CASE expr OF darrowlist ESAC
    (44) expr -> . CASE expr OF error ESAC
    (45) expr -> . CASE error OF darrowlist ESAC
    (46) expr -> . LET OBJECTID : TYPEID expr IN error
    (47) expr -> . LET OBJECTID : TYPEID error IN expr
    (48) expr -> . LET OBJECTID : TYPEID inicializaciones IN expr
    (49) expr -> . LET OBJECTID : TYPEID ASSIGN expr IN expr
    (50) expr -> . LET OBJECTID : TYPEID IN expr
    (51) expr -> . { exprs }
    (52) expr -> . WHILE expr LOOP error POOL
    (53) expr -> . WHILE error LOOP expr POOL
    (54) expr -> . WHILE error LOOP error POOL
    (55) expr -> . WHILE expr LOOP expr POOL
    (56) expr -> . IF expr THEN expr ELSE expr FI
    (57) expr -> . IF error THEN expr ELSE expr FI
    (58) expr -> . IF expr THEN error FI
    (59) expr -> . OBJECTID ( parametros )
    (60) expr -> . OBJECTID ( )
    (61) expr -> . expr @ TYPEID . OBJECTID ( parametros )
    (62) expr -> . expr . OBJECTID ( parametros )
    (63) expr -> . expr @ TYPEID . OBJECTID ( )
    (64) expr -> . expr . OBJECTID ( )
    (65) expr -> . OBJECTID ASSIGN error
    (66) expr -> . OBJECTID ASSIGN expr
    BOOL_CONST      shift and go to state 45
    error           shift and go to state 77
    STR_CONST       shift and go to state 47
    INT_CONST       shift and go to state 46
    OBJECTID        shift and go to state 42
    (               shift and go to state 48
    NOT             shift and go to state 49
    ~               shift and go to state 50
    ISVOID          shift and go to state 51
    NEW             shift and go to state 52
    CASE            shift and go to state 53
    LET             shift and go to state 54
    {               shift and go to state 55
    WHILE           shift and go to state 56
    IF              shift and go to state 57

    expr                           shift and go to state 80

state 51

    (39) expr -> ISVOID . error
    (40) expr -> ISVOID . expr
    (23) expr -> . BOOL_CONST
    (24) expr -> . error INT_CONST
    (25) expr -> . STR_CONST
    (26) expr -> . INT_CONST
    (27) expr -> . OBJECTID
    (28) expr -> . ( expr )
    (29) expr -> . NOT error
    (30) expr -> . NOT expr
    (31) expr -> . expr = expr
    (32) expr -> . expr LE expr
    (33) expr -> . expr < expr
    (34) expr -> . ~ expr
    (35) expr -> . expr / expr
    (36) expr -> . expr * expr
    (37) expr -> . expr - expr
    (38) expr -> . expr + expr
    (39) expr -> . ISVOID error
    (40) expr -> . ISVOID expr
    (41) expr -> . error TYPEID
    (42) expr -> . NEW TYPEID
    (43) expr -> . CASE expr OF darrowlist ESAC
    (44) expr -> . CASE expr OF error ESAC
    (45) expr -> . CASE error OF darrowlist ESAC
    (46) expr -> . LET OBJECTID : TYPEID expr IN error
    (47) expr -> . LET OBJECTID : TYPEID error IN expr
    (48) expr -> . LET OBJECTID : TYPEID inicializaciones IN expr
    (49) expr -> . LET OBJECTID : TYPEID ASSIGN expr IN expr
    (50) expr -> . LET OBJECTID : TYPEID IN expr
    (51) expr -> . { exprs }
    (52) expr -> . WHILE expr LOOP error POOL
    (53) expr -> . WHILE error LOOP expr POOL
    (54) expr -> . WHILE error LOOP error POOL
    (55) expr -> . WHILE expr LOOP expr POOL
    (56) expr -> . IF expr THEN expr ELSE expr FI
    (57) expr -> . IF error THEN expr ELSE expr FI
    (58) expr -> . IF expr THEN error FI
    (59) expr -> . OBJECTID ( parametros )
    (60) expr -> . OBJECTID ( )
    (61) expr -> . expr @ TYPEID . OBJECTID ( parametros )
    (62) expr -> . expr . OBJECTID ( parametros )
    (63) expr -> . expr @ TYPEID . OBJECTID ( )
    (64) expr -> . expr . OBJECTID ( )
    (65) expr -> . OBJECTID ASSIGN error
    (66) expr -> . OBJECTID ASSIGN expr
    error           shift and go to state 81
    BOOL_CONST      shift and go to state 45
    STR_CONST       shift and go to state 47
    INT_CONST       shift and go to state 46
    OBJECTID        shift and go to state 42
    (               shift and go to state 48
    NOT             shift and go to state 49
    ~               shift and go to state 50
    ISVOID          shift and go to state 51
    NEW             shift and go to state 52
    CASE            shift and go to state 53
    LET             shift and go to state 54
    {               shift and go to state 55
    WHILE           shift and go to state 56
    IF              shift and go to state 57

    expr                           shift and go to state 82

state 52

    (42) expr -> NEW . TYPEID
    TYPEID          shift and go to state 83


state 53

    (43) expr -> CASE . expr OF darrowlist ESAC
    (44) expr -> CASE . expr OF error ESAC
    (45) expr -> CASE . error OF darrowlist ESAC
    (23) expr -> . BOOL_CONST
    (24) expr -> . error INT_CONST
    (25) expr -> . STR_CONST
    (26) expr -> . INT_CONST
    (27) expr -> . OBJECTID
    (28) expr -> . ( expr )
    (29) expr -> . NOT error
    (30) expr -> . NOT expr
    (31) expr -> . expr = expr
    (32) expr -> . expr LE expr
    (33) expr -> . expr < expr
    (34) expr -> . ~ expr
    (35) expr -> . expr / expr
    (36) expr -> . expr * expr
    (37) expr -> . expr - expr
    (38) expr -> . expr + expr
    (39) expr -> . ISVOID error
    (40) expr -> . ISVOID expr
    (41) expr -> . error TYPEID
    (42) expr -> . NEW TYPEID
    (43) expr -> . CASE expr OF darrowlist ESAC
    (44) expr -> . CASE expr OF error ESAC
    (45) expr -> . CASE error OF darrowlist ESAC
    (46) expr -> . LET OBJECTID : TYPEID expr IN error
    (47) expr -> . LET OBJECTID : TYPEID error IN expr
    (48) expr -> . LET OBJECTID : TYPEID inicializaciones IN expr
    (49) expr -> . LET OBJECTID : TYPEID ASSIGN expr IN expr
    (50) expr -> . LET OBJECTID : TYPEID IN expr
    (51) expr -> . { exprs }
    (52) expr -> . WHILE expr LOOP error POOL
    (53) expr -> . WHILE error LOOP expr POOL
    (54) expr -> . WHILE error LOOP error POOL
    (55) expr -> . WHILE expr LOOP expr POOL
    (56) expr -> . IF expr THEN expr ELSE expr FI
    (57) expr -> . IF error THEN expr ELSE expr FI
    (58) expr -> . IF expr THEN error FI
    (59) expr -> . OBJECTID ( parametros )
    (60) expr -> . OBJECTID ( )
    (61) expr -> . expr @ TYPEID . OBJECTID ( parametros )
    (62) expr -> . expr . OBJECTID ( parametros )
    (63) expr -> . expr @ TYPEID . OBJECTID ( )
    (64) expr -> . expr . OBJECTID ( )
    (65) expr -> . OBJECTID ASSIGN error
    (66) expr -> . OBJECTID ASSIGN expr
    error           shift and go to state 85
    BOOL_CONST      shift and go to state 45
    STR_CONST       shift and go to state 47
    INT_CONST       shift and go to state 46
    OBJECTID        shift and go to state 42
    (               shift and go to state 48
    NOT             shift and go to state 49
    ~               shift and go to state 50
    ISVOID          shift and go to state 51
    NEW             shift and go to state 52
    CASE            shift and go to state 53
    LET             shift and go to state 54
    {               shift and go to state 55
    WHILE           shift and go to state 56
    IF              shift and go to state 57

    expr                           shift and go to state 84

state 54

    (46) expr -> LET . OBJECTID : TYPEID expr IN error
    (47) expr -> LET . OBJECTID : TYPEID error IN expr
    (48) expr -> LET . OBJECTID : TYPEID inicializaciones IN expr
    (49) expr -> LET . OBJECTID : TYPEID ASSIGN expr IN expr
    (50) expr -> LET . OBJECTID : TYPEID IN expr
    OBJECTID        shift and go to state 86


state 55

    (51) expr -> { . exprs }
    (69) exprs -> . error ;
    (70) exprs -> . exprs expr ;
    (71) exprs -> . expr ;
    (23) expr -> . BOOL_CONST
    (24) expr -> . error INT_CONST
    (25) expr -> . STR_CONST
    (26) expr -> . INT_CONST
    (27) expr -> . OBJECTID
    (28) expr -> . ( expr )
    (29) expr -> . NOT error
    (30) expr -> . NOT expr
    (31) expr -> . expr = expr
    (32) expr -> . expr LE expr
    (33) expr -> . expr < expr
    (34) expr -> . ~ expr
    (35) expr -> . expr / expr
    (36) expr -> . expr * expr
    (37) expr -> . expr - expr
    (38) expr -> . expr + expr
    (39) expr -> . ISVOID error
    (40) expr -> . ISVOID expr
    (41) expr -> . error TYPEID
    (42) expr -> . NEW TYPEID
    (43) expr -> . CASE expr OF darrowlist ESAC
    (44) expr -> . CASE expr OF error ESAC
    (45) expr -> . CASE error OF darrowlist ESAC
    (46) expr -> . LET OBJECTID : TYPEID expr IN error
    (47) expr -> . LET OBJECTID : TYPEID error IN expr
    (48) expr -> . LET OBJECTID : TYPEID inicializaciones IN expr
    (49) expr -> . LET OBJECTID : TYPEID ASSIGN expr IN expr
    (50) expr -> . LET OBJECTID : TYPEID IN expr
    (51) expr -> . { exprs }
    (52) expr -> . WHILE expr LOOP error POOL
    (53) expr -> . WHILE error LOOP expr POOL
    (54) expr -> . WHILE error LOOP error POOL
    (55) expr -> . WHILE expr LOOP expr POOL
    (56) expr -> . IF expr THEN expr ELSE expr FI
    (57) expr -> . IF error THEN expr ELSE expr FI
    (58) expr -> . IF expr THEN error FI
    (59) expr -> . OBJECTID ( parametros )
    (60) expr -> . OBJECTID ( )
    (61) expr -> . expr @ TYPEID . OBJECTID ( parametros )
    (62) expr -> . expr . OBJECTID ( parametros )
    (63) expr -> . expr @ TYPEID . OBJECTID ( )
    (64) expr -> . expr . OBJECTID ( )
    (65) expr -> . OBJECTID ASSIGN error
    (66) expr -> . OBJECTID ASSIGN expr
    error           shift and go to state 88
    BOOL_CONST      shift and go to state 45
    STR_CONST       shift and go to state 47
    INT_CONST       shift and go to state 46
    OBJECTID        shift and go to state 42
    (               shift and go to state 48
    NOT             shift and go to state 49
    ~               shift and go to state 50
    ISVOID          shift and go to state 51
    NEW             shift and go to state 52
    CASE            shift and go to state 53
    LET             shift and go to state 54
    {               shift and go to state 55
    WHILE           shift and go to state 56
    IF              shift and go to state 57

    exprs                          shift and go to state 87
    expr                           shift and go to state 89

state 56

    (52) expr -> WHILE . expr LOOP error POOL
    (53) expr -> WHILE . error LOOP expr POOL
    (54) expr -> WHILE . error LOOP error POOL
    (55) expr -> WHILE . expr LOOP expr POOL
    (23) expr -> . BOOL_CONST
    (24) expr -> . error INT_CONST
    (25) expr -> . STR_CONST
    (26) expr -> . INT_CONST
    (27) expr -> . OBJECTID
    (28) expr -> . ( expr )
    (29) expr -> . NOT error
    (30) expr -> . NOT expr
    (31) expr -> . expr = expr
    (32) expr -> . expr LE expr
    (33) expr -> . expr < expr
    (34) expr -> . ~ expr
    (35) expr -> . expr / expr
    (36) expr -> . expr * expr
    (37) expr -> . expr - expr
    (38) expr -> . expr + expr
    (39) expr -> . ISVOID error
    (40) expr -> . ISVOID expr
    (41) expr -> . error TYPEID
    (42) expr -> . NEW TYPEID
    (43) expr -> . CASE expr OF darrowlist ESAC
    (44) expr -> . CASE expr OF error ESAC
    (45) expr -> . CASE error OF darrowlist ESAC
    (46) expr -> . LET OBJECTID : TYPEID expr IN error
    (47) expr -> . LET OBJECTID : TYPEID error IN expr
    (48) expr -> . LET OBJECTID : TYPEID inicializaciones IN expr
    (49) expr -> . LET OBJECTID : TYPEID ASSIGN expr IN expr
    (50) expr -> . LET OBJECTID : TYPEID IN expr
    (51) expr -> . { exprs }
    (52) expr -> . WHILE expr LOOP error POOL
    (53) expr -> . WHILE error LOOP expr POOL
    (54) expr -> . WHILE error LOOP error POOL
    (55) expr -> . WHILE expr LOOP expr POOL
    (56) expr -> . IF expr THEN expr ELSE expr FI
    (57) expr -> . IF error THEN expr ELSE expr FI
    (58) expr -> . IF expr THEN error FI
    (59) expr -> . OBJECTID ( parametros )
    (60) expr -> . OBJECTID ( )
    (61) expr -> . expr @ TYPEID . OBJECTID ( parametros )
    (62) expr -> . expr . OBJECTID ( parametros )
    (63) expr -> . expr @ TYPEID . OBJECTID ( )
    (64) expr -> . expr . OBJECTID ( )
    (65) expr -> . OBJECTID ASSIGN error
    (66) expr -> . OBJECTID ASSIGN expr
    error           shift and go to state 91
    BOOL_CONST      shift and go to state 45
    STR_CONST       shift and go to state 47
    INT_CONST       shift and go to state 46
    OBJECTID        shift and go to state 42
    (               shift and go to state 48
    NOT             shift and go to state 49
    ~               shift and go to state 50
    ISVOID          shift and go to state 51
    NEW             shift and go to state 52
    CASE            shift and go to state 53
    LET             shift and go to state 54
    {               shift and go to state 55
    WHILE           shift and go to state 56
    IF              shift and go to state 57

    expr                           shift and go to state 90

state 57

    (56) expr -> IF . expr THEN expr ELSE expr FI
    (57) expr -> IF . error THEN expr ELSE expr FI
    (58) expr -> IF . expr THEN error FI
    (23) expr -> . BOOL_CONST
    (24) expr -> . error INT_CONST
    (25) expr -> . STR_CONST
    (26) expr -> . INT_CONST
    (27) expr -> . OBJECTID
    (28) expr -> . ( expr )
    (29) expr -> . NOT error
    (30) expr -> . NOT expr
    (31) expr -> . expr = expr
    (32) expr -> . expr LE expr
    (33) expr -> . expr < expr
    (34) expr -> . ~ expr
    (35) expr -> . expr / expr
    (36) expr -> . expr * expr
    (37) expr -> . expr - expr
    (38) expr -> . expr + expr
    (39) expr -> . ISVOID error
    (40) expr -> . ISVOID expr
    (41) expr -> . error TYPEID
    (42) expr -> . NEW TYPEID
    (43) expr -> . CASE expr OF darrowlist ESAC
    (44) expr -> . CASE expr OF error ESAC
    (45) expr -> . CASE error OF darrowlist ESAC
    (46) expr -> . LET OBJECTID : TYPEID expr IN error
    (47) expr -> . LET OBJECTID : TYPEID error IN expr
    (48) expr -> . LET OBJECTID : TYPEID inicializaciones IN expr
    (49) expr -> . LET OBJECTID : TYPEID ASSIGN expr IN expr
    (50) expr -> . LET OBJECTID : TYPEID IN expr
    (51) expr -> . { exprs }
    (52) expr -> . WHILE expr LOOP error POOL
    (53) expr -> . WHILE error LOOP expr POOL
    (54) expr -> . WHILE error LOOP error POOL
    (55) expr -> . WHILE expr LOOP expr POOL
    (56) expr -> . IF expr THEN expr ELSE expr FI
    (57) expr -> . IF error THEN expr ELSE expr FI
    (58) expr -> . IF expr THEN error FI
    (59) expr -> . OBJECTID ( parametros )
    (60) expr -> . OBJECTID ( )
    (61) expr -> . expr @ TYPEID . OBJECTID ( parametros )
    (62) expr -> . expr . OBJECTID ( parametros )
    (63) expr -> . expr @ TYPEID . OBJECTID ( )
    (64) expr -> . expr . OBJECTID ( )
    (65) expr -> . OBJECTID ASSIGN error
    (66) expr -> . OBJECTID ASSIGN expr
    error           shift and go to state 93
    BOOL_CONST      shift and go to state 45
    STR_CONST       shift and go to state 47
    INT_CONST       shift and go to state 46
    OBJECTID        shift and go to state 42
    (               shift and go to state 48
    NOT             shift and go to state 49
    ~               shift and go to state 50
    ISVOID          shift and go to state 51
    NEW             shift and go to state 52
    CASE            shift and go to state 53
    LET             shift and go to state 54
    {               shift and go to state 55
    WHILE           shift and go to state 56
    IF              shift and go to state 57

    expr                           shift and go to state 92

state 58

    (22) formal -> OBJECTID : TYPEID .
    )               reduce using rule 22 (formal -> OBJECTID : TYPEID .)
    OBJECTID        reduce using rule 22 (formal -> OBJECTID : TYPEID .)
    ,               reduce using rule 22 (formal -> OBJECTID : TYPEID .)


state 59

    (15) caracteristica -> OBJECTID ( error ) : . TYPEID { expr }
    TYPEID          shift and go to state 94


state 60

    (18) caracteristica -> OBJECTID ( ) : TYPEID . { error }
    (19) caracteristica -> OBJECTID ( ) : TYPEID . { expr }
    {               shift and go to state 95


state 61

    (16) caracteristica -> OBJECTID ( formales ) : . TYPEID { error }
    (17) caracteristica -> OBJECTID ( formales ) : . TYPEID { expr }
    TYPEID          shift and go to state 96


state 62

    (20) formales -> formales formal , .
    )               reduce using rule 20 (formales -> formales formal , .)
    OBJECTID        reduce using rule 20 (formales -> formales formal , .)


state 63

    (59) expr -> OBJECTID ( . parametros )
    (60) expr -> OBJECTID ( . )
    (67) parametros -> . parametros , expr
    (68) parametros -> . expr
    (23) expr -> . BOOL_CONST
    (24) expr -> . error INT_CONST
    (25) expr -> . STR_CONST
    (26) expr -> . INT_CONST
    (27) expr -> . OBJECTID
    (28) expr -> . ( expr )
    (29) expr -> . NOT error
    (30) expr -> . NOT expr
    (31) expr -> . expr = expr
    (32) expr -> . expr LE expr
    (33) expr -> . expr < expr
    (34) expr -> . ~ expr
    (35) expr -> . expr / expr
    (36) expr -> . expr * expr
    (37) expr -> . expr - expr
    (38) expr -> . expr + expr
    (39) expr -> . ISVOID error
    (40) expr -> . ISVOID expr
    (41) expr -> . error TYPEID
    (42) expr -> . NEW TYPEID
    (43) expr -> . CASE expr OF darrowlist ESAC
    (44) expr -> . CASE expr OF error ESAC
    (45) expr -> . CASE error OF darrowlist ESAC
    (46) expr -> . LET OBJECTID : TYPEID expr IN error
    (47) expr -> . LET OBJECTID : TYPEID error IN expr
    (48) expr -> . LET OBJECTID : TYPEID inicializaciones IN expr
    (49) expr -> . LET OBJECTID : TYPEID ASSIGN expr IN expr
    (50) expr -> . LET OBJECTID : TYPEID IN expr
    (51) expr -> . { exprs }
    (52) expr -> . WHILE expr LOOP error POOL
    (53) expr -> . WHILE error LOOP expr POOL
    (54) expr -> . WHILE error LOOP error POOL
    (55) expr -> . WHILE expr LOOP expr POOL
    (56) expr -> . IF expr THEN expr ELSE expr FI
    (57) expr -> . IF error THEN expr ELSE expr FI
    (58) expr -> . IF expr THEN error FI
    (59) expr -> . OBJECTID ( parametros )
    (60) expr -> . OBJECTID ( )
    (61) expr -> . expr @ TYPEID . OBJECTID ( parametros )
    (62) expr -> . expr . OBJECTID ( parametros )
    (63) expr -> . expr @ TYPEID . OBJECTID ( )
    (64) expr -> . expr . OBJECTID ( )
    (65) expr -> . OBJECTID ASSIGN error
    (66) expr -> . OBJECTID ASSIGN expr
    )               shift and go to state 98
    BOOL_CONST      shift and go to state 45
    error           shift and go to state 77
    STR_CONST       shift and go to state 47
    INT_CONST       shift and go to state 46
    OBJECTID        shift and go to state 42
    (               shift and go to state 48
    NOT             shift and go to state 49
    ~               shift and go to state 50
    ISVOID          shift and go to state 51
    NEW             shift and go to state 52
    CASE            shift and go to state 53
    LET             shift and go to state 54
    {               shift and go to state 55
    WHILE           shift and go to state 56
    IF              shift and go to state 57

    parametros                     shift and go to state 97
    expr                           shift and go to state 99

state 64

    (65) expr -> OBJECTID ASSIGN . error
    (66) expr -> OBJECTID ASSIGN . expr
    (23) expr -> . BOOL_CONST
    (24) expr -> . error INT_CONST
    (25) expr -> . STR_CONST
    (26) expr -> . INT_CONST
    (27) expr -> . OBJECTID
    (28) expr -> . ( expr )
    (29) expr -> . NOT error
    (30) expr -> . NOT expr
    (31) expr -> . expr = expr
    (32) expr -> . expr LE expr
    (33) expr -> . expr < expr
    (34) expr -> . ~ expr
    (35) expr -> . expr / expr
    (36) expr -> . expr * expr
    (37) expr -> . expr - expr
    (38) expr -> . expr + expr
    (39) expr -> . ISVOID error
    (40) expr -> . ISVOID expr
    (41) expr -> . error TYPEID
    (42) expr -> . NEW TYPEID
    (43) expr -> . CASE expr OF darrowlist ESAC
    (44) expr -> . CASE expr OF error ESAC
    (45) expr -> . CASE error OF darrowlist ESAC
    (46) expr -> . LET OBJECTID : TYPEID expr IN error
    (47) expr -> . LET OBJECTID : TYPEID error IN expr
    (48) expr -> . LET OBJECTID : TYPEID inicializaciones IN expr
    (49) expr -> . LET OBJECTID : TYPEID ASSIGN expr IN expr
    (50) expr -> . LET OBJECTID : TYPEID IN expr
    (51) expr -> . { exprs }
    (52) expr -> . WHILE expr LOOP error POOL
    (53) expr -> . WHILE error LOOP expr POOL
    (54) expr -> . WHILE error LOOP error POOL
    (55) expr -> . WHILE expr LOOP expr POOL
    (56) expr -> . IF expr THEN expr ELSE expr FI
    (57) expr -> . IF error THEN expr ELSE expr FI
    (58) expr -> . IF expr THEN error FI
    (59) expr -> . OBJECTID ( parametros )
    (60) expr -> . OBJECTID ( )
    (61) expr -> . expr @ TYPEID . OBJECTID ( parametros )
    (62) expr -> . expr . OBJECTID ( parametros )
    (63) expr -> . expr @ TYPEID . OBJECTID ( )
    (64) expr -> . expr . OBJECTID ( )
    (65) expr -> . OBJECTID ASSIGN error
    (66) expr -> . OBJECTID ASSIGN expr
    error           shift and go to state 100
    BOOL_CONST      shift and go to state 45
    STR_CONST       shift and go to state 47
    INT_CONST       shift and go to state 46
    OBJECTID        shift and go to state 42
    (               shift and go to state 48
    NOT             shift and go to state 49
    ~               shift and go to state 50
    ISVOID          shift and go to state 51
    NEW             shift and go to state 52
    CASE            shift and go to state 53
    LET             shift and go to state 54
    {               shift and go to state 55
    WHILE           shift and go to state 56
    IF              shift and go to state 57

    expr                           shift and go to state 101

state 65

    (41) expr -> error TYPEID .
    =               reduce using rule 41 (expr -> error TYPEID .)
    LE              reduce using rule 41 (expr -> error TYPEID .)
    <               reduce using rule 41 (expr -> error TYPEID .)
    /               reduce using rule 41 (expr -> error TYPEID .)
    *               reduce using rule 41 (expr -> error TYPEID .)
    -               reduce using rule 41 (expr -> error TYPEID .)
    +               reduce using rule 41 (expr -> error TYPEID .)
    @               reduce using rule 41 (expr -> error TYPEID .)
    .               reduce using rule 41 (expr -> error TYPEID .)
    ;               reduce using rule 41 (expr -> error TYPEID .)
    )               reduce using rule 41 (expr -> error TYPEID .)
    OF              reduce using rule 41 (expr -> error TYPEID .)
    LOOP            reduce using rule 41 (expr -> error TYPEID .)
    THEN            reduce using rule 41 (expr -> error TYPEID .)
    ,               reduce using rule 41 (expr -> error TYPEID .)
    }               reduce using rule 41 (expr -> error TYPEID .)
    POOL            reduce using rule 41 (expr -> error TYPEID .)
    ELSE            reduce using rule 41 (expr -> error TYPEID .)
    IN              reduce using rule 41 (expr -> error TYPEID .)
    FI              reduce using rule 41 (expr -> error TYPEID .)


state 66

    (24) expr -> error INT_CONST .
    =               reduce using rule 24 (expr -> error INT_CONST .)
    LE              reduce using rule 24 (expr -> error INT_CONST .)
    <               reduce using rule 24 (expr -> error INT_CONST .)
    /               reduce using rule 24 (expr -> error INT_CONST .)
    *               reduce using rule 24 (expr -> error INT_CONST .)
    -               reduce using rule 24 (expr -> error INT_CONST .)
    +               reduce using rule 24 (expr -> error INT_CONST .)
    @               reduce using rule 24 (expr -> error INT_CONST .)
    .               reduce using rule 24 (expr -> error INT_CONST .)
    ;               reduce using rule 24 (expr -> error INT_CONST .)
    )               reduce using rule 24 (expr -> error INT_CONST .)
    OF              reduce using rule 24 (expr -> error INT_CONST .)
    LOOP            reduce using rule 24 (expr -> error INT_CONST .)
    THEN            reduce using rule 24 (expr -> error INT_CONST .)
    ,               reduce using rule 24 (expr -> error INT_CONST .)
    }               reduce using rule 24 (expr -> error INT_CONST .)
    POOL            reduce using rule 24 (expr -> error INT_CONST .)
    ELSE            reduce using rule 24 (expr -> error INT_CONST .)
    IN              reduce using rule 24 (expr -> error INT_CONST .)
    FI              reduce using rule 24 (expr -> error INT_CONST .)


state 67

    (31) expr -> expr = . expr
    (23) expr -> . BOOL_CONST
    (24) expr -> . error INT_CONST
    (25) expr -> . STR_CONST
    (26) expr -> . INT_CONST
    (27) expr -> . OBJECTID
    (28) expr -> . ( expr )
    (29) expr -> . NOT error
    (30) expr -> . NOT expr
    (31) expr -> . expr = expr
    (32) expr -> . expr LE expr
    (33) expr -> . expr < expr
    (34) expr -> . ~ expr
    (35) expr -> . expr / expr
    (36) expr -> . expr * expr
    (37) expr -> . expr - expr
    (38) expr -> . expr + expr
    (39) expr -> . ISVOID error
    (40) expr -> . ISVOID expr
    (41) expr -> . error TYPEID
    (42) expr -> . NEW TYPEID
    (43) expr -> . CASE expr OF darrowlist ESAC
    (44) expr -> . CASE expr OF error ESAC
    (45) expr -> . CASE error OF darrowlist ESAC
    (46) expr -> . LET OBJECTID : TYPEID expr IN error
    (47) expr -> . LET OBJECTID : TYPEID error IN expr
    (48) expr -> . LET OBJECTID : TYPEID inicializaciones IN expr
    (49) expr -> . LET OBJECTID : TYPEID ASSIGN expr IN expr
    (50) expr -> . LET OBJECTID : TYPEID IN expr
    (51) expr -> . { exprs }
    (52) expr -> . WHILE expr LOOP error POOL
    (53) expr -> . WHILE error LOOP expr POOL
    (54) expr -> . WHILE error LOOP error POOL
    (55) expr -> . WHILE expr LOOP expr POOL
    (56) expr -> . IF expr THEN expr ELSE expr FI
    (57) expr -> . IF error THEN expr ELSE expr FI
    (58) expr -> . IF expr THEN error FI
    (59) expr -> . OBJECTID ( parametros )
    (60) expr -> . OBJECTID ( )
    (61) expr -> . expr @ TYPEID . OBJECTID ( parametros )
    (62) expr -> . expr . OBJECTID ( parametros )
    (63) expr -> . expr @ TYPEID . OBJECTID ( )
    (64) expr -> . expr . OBJECTID ( )
    (65) expr -> . OBJECTID ASSIGN error
    (66) expr -> . OBJECTID ASSIGN expr
    BOOL_CONST      shift and go to state 45
    error           shift and go to state 77
    STR_CONST       shift and go to state 47
    INT_CONST       shift and go to state 46
    OBJECTID        shift and go to state 42
    (               shift and go to state 48
    NOT             shift and go to state 49
    ~               shift and go to state 50
    ISVOID          shift and go to state 51
    NEW             shift and go to state 52
    CASE            shift and go to state 53
    LET             shift and go to state 54
    {               shift and go to state 55
    WHILE           shift and go to state 56
    IF              shift and go to state 57

    expr                           shift and go to state 102

state 68

    (32) expr -> expr LE . expr
    (23) expr -> . BOOL_CONST
    (24) expr -> . error INT_CONST
    (25) expr -> . STR_CONST
    (26) expr -> . INT_CONST
    (27) expr -> . OBJECTID
    (28) expr -> . ( expr )
    (29) expr -> . NOT error
    (30) expr -> . NOT expr
    (31) expr -> . expr = expr
    (32) expr -> . expr LE expr
    (33) expr -> . expr < expr
    (34) expr -> . ~ expr
    (35) expr -> . expr / expr
    (36) expr -> . expr * expr
    (37) expr -> . expr - expr
    (38) expr -> . expr + expr
    (39) expr -> . ISVOID error
    (40) expr -> . ISVOID expr
    (41) expr -> . error TYPEID
    (42) expr -> . NEW TYPEID
    (43) expr -> . CASE expr OF darrowlist ESAC
    (44) expr -> . CASE expr OF error ESAC
    (45) expr -> . CASE error OF darrowlist ESAC
    (46) expr -> . LET OBJECTID : TYPEID expr IN error
    (47) expr -> . LET OBJECTID : TYPEID error IN expr
    (48) expr -> . LET OBJECTID : TYPEID inicializaciones IN expr
    (49) expr -> . LET OBJECTID : TYPEID ASSIGN expr IN expr
    (50) expr -> . LET OBJECTID : TYPEID IN expr
    (51) expr -> . { exprs }
    (52) expr -> . WHILE expr LOOP error POOL
    (53) expr -> . WHILE error LOOP expr POOL
    (54) expr -> . WHILE error LOOP error POOL
    (55) expr -> . WHILE expr LOOP expr POOL
    (56) expr -> . IF expr THEN expr ELSE expr FI
    (57) expr -> . IF error THEN expr ELSE expr FI
    (58) expr -> . IF expr THEN error FI
    (59) expr -> . OBJECTID ( parametros )
    (60) expr -> . OBJECTID ( )
    (61) expr -> . expr @ TYPEID . OBJECTID ( parametros )
    (62) expr -> . expr . OBJECTID ( parametros )
    (63) expr -> . expr @ TYPEID . OBJECTID ( )
    (64) expr -> . expr . OBJECTID ( )
    (65) expr -> . OBJECTID ASSIGN error
    (66) expr -> . OBJECTID ASSIGN expr
    BOOL_CONST      shift and go to state 45
    error           shift and go to state 77
    STR_CONST       shift and go to state 47
    INT_CONST       shift and go to state 46
    OBJECTID        shift and go to state 42
    (               shift and go to state 48
    NOT             shift and go to state 49
    ~               shift and go to state 50
    ISVOID          shift and go to state 51
    NEW             shift and go to state 52
    CASE            shift and go to state 53
    LET             shift and go to state 54
    {               shift and go to state 55
    WHILE           shift and go to state 56
    IF              shift and go to state 57

    expr                           shift and go to state 103

state 69

    (33) expr -> expr < . expr
    (23) expr -> . BOOL_CONST
    (24) expr -> . error INT_CONST
    (25) expr -> . STR_CONST
    (26) expr -> . INT_CONST
    (27) expr -> . OBJECTID
    (28) expr -> . ( expr )
    (29) expr -> . NOT error
    (30) expr -> . NOT expr
    (31) expr -> . expr = expr
    (32) expr -> . expr LE expr
    (33) expr -> . expr < expr
    (34) expr -> . ~ expr
    (35) expr -> . expr / expr
    (36) expr -> . expr * expr
    (37) expr -> . expr - expr
    (38) expr -> . expr + expr
    (39) expr -> . ISVOID error
    (40) expr -> . ISVOID expr
    (41) expr -> . error TYPEID
    (42) expr -> . NEW TYPEID
    (43) expr -> . CASE expr OF darrowlist ESAC
    (44) expr -> . CASE expr OF error ESAC
    (45) expr -> . CASE error OF darrowlist ESAC
    (46) expr -> . LET OBJECTID : TYPEID expr IN error
    (47) expr -> . LET OBJECTID : TYPEID error IN expr
    (48) expr -> . LET OBJECTID : TYPEID inicializaciones IN expr
    (49) expr -> . LET OBJECTID : TYPEID ASSIGN expr IN expr
    (50) expr -> . LET OBJECTID : TYPEID IN expr
    (51) expr -> . { exprs }
    (52) expr -> . WHILE expr LOOP error POOL
    (53) expr -> . WHILE error LOOP expr POOL
    (54) expr -> . WHILE error LOOP error POOL
    (55) expr -> . WHILE expr LOOP expr POOL
    (56) expr -> . IF expr THEN expr ELSE expr FI
    (57) expr -> . IF error THEN expr ELSE expr FI
    (58) expr -> . IF expr THEN error FI
    (59) expr -> . OBJECTID ( parametros )
    (60) expr -> . OBJECTID ( )
    (61) expr -> . expr @ TYPEID . OBJECTID ( parametros )
    (62) expr -> . expr . OBJECTID ( parametros )
    (63) expr -> . expr @ TYPEID . OBJECTID ( )
    (64) expr -> . expr . OBJECTID ( )
    (65) expr -> . OBJECTID ASSIGN error
    (66) expr -> . OBJECTID ASSIGN expr
    BOOL_CONST      shift and go to state 45
    error           shift and go to state 77
    STR_CONST       shift and go to state 47
    INT_CONST       shift and go to state 46
    OBJECTID        shift and go to state 42
    (               shift and go to state 48
    NOT             shift and go to state 49
    ~               shift and go to state 50
    ISVOID          shift and go to state 51
    NEW             shift and go to state 52
    CASE            shift and go to state 53
    LET             shift and go to state 54
    {               shift and go to state 55
    WHILE           shift and go to state 56
    IF              shift and go to state 57

    expr                           shift and go to state 104

state 70

    (35) expr -> expr / . expr
    (23) expr -> . BOOL_CONST
    (24) expr -> . error INT_CONST
    (25) expr -> . STR_CONST
    (26) expr -> . INT_CONST
    (27) expr -> . OBJECTID
    (28) expr -> . ( expr )
    (29) expr -> . NOT error
    (30) expr -> . NOT expr
    (31) expr -> . expr = expr
    (32) expr -> . expr LE expr
    (33) expr -> . expr < expr
    (34) expr -> . ~ expr
    (35) expr -> . expr / expr
    (36) expr -> . expr * expr
    (37) expr -> . expr - expr
    (38) expr -> . expr + expr
    (39) expr -> . ISVOID error
    (40) expr -> . ISVOID expr
    (41) expr -> . error TYPEID
    (42) expr -> . NEW TYPEID
    (43) expr -> . CASE expr OF darrowlist ESAC
    (44) expr -> . CASE expr OF error ESAC
    (45) expr -> . CASE error OF darrowlist ESAC
    (46) expr -> . LET OBJECTID : TYPEID expr IN error
    (47) expr -> . LET OBJECTID : TYPEID error IN expr
    (48) expr -> . LET OBJECTID : TYPEID inicializaciones IN expr
    (49) expr -> . LET OBJECTID : TYPEID ASSIGN expr IN expr
    (50) expr -> . LET OBJECTID : TYPEID IN expr
    (51) expr -> . { exprs }
    (52) expr -> . WHILE expr LOOP error POOL
    (53) expr -> . WHILE error LOOP expr POOL
    (54) expr -> . WHILE error LOOP error POOL
    (55) expr -> . WHILE expr LOOP expr POOL
    (56) expr -> . IF expr THEN expr ELSE expr FI
    (57) expr -> . IF error THEN expr ELSE expr FI
    (58) expr -> . IF expr THEN error FI
    (59) expr -> . OBJECTID ( parametros )
    (60) expr -> . OBJECTID ( )
    (61) expr -> . expr @ TYPEID . OBJECTID ( parametros )
    (62) expr -> . expr . OBJECTID ( parametros )
    (63) expr -> . expr @ TYPEID . OBJECTID ( )
    (64) expr -> . expr . OBJECTID ( )
    (65) expr -> . OBJECTID ASSIGN error
    (66) expr -> . OBJECTID ASSIGN expr
    BOOL_CONST      shift and go to state 45
    error           shift and go to state 77
    STR_CONST       shift and go to state 47
    INT_CONST       shift and go to state 46
    OBJECTID        shift and go to state 42
    (               shift and go to state 48
    NOT             shift and go to state 49
    ~               shift and go to state 50
    ISVOID          shift and go to state 51
    NEW             shift and go to state 52
    CASE            shift and go to state 53
    LET             shift and go to state 54
    {               shift and go to state 55
    WHILE           shift and go to state 56
    IF              shift and go to state 57

    expr                           shift and go to state 105

state 71

    (36) expr -> expr * . expr
    (23) expr -> . BOOL_CONST
    (24) expr -> . error INT_CONST
    (25) expr -> . STR_CONST
    (26) expr -> . INT_CONST
    (27) expr -> . OBJECTID
    (28) expr -> . ( expr )
    (29) expr -> . NOT error
    (30) expr -> . NOT expr
    (31) expr -> . expr = expr
    (32) expr -> . expr LE expr
    (33) expr -> . expr < expr
    (34) expr -> . ~ expr
    (35) expr -> . expr / expr
    (36) expr -> . expr * expr
    (37) expr -> . expr - expr
    (38) expr -> . expr + expr
    (39) expr -> . ISVOID error
    (40) expr -> . ISVOID expr
    (41) expr -> . error TYPEID
    (42) expr -> . NEW TYPEID
    (43) expr -> . CASE expr OF darrowlist ESAC
    (44) expr -> . CASE expr OF error ESAC
    (45) expr -> . CASE error OF darrowlist ESAC
    (46) expr -> . LET OBJECTID : TYPEID expr IN error
    (47) expr -> . LET OBJECTID : TYPEID error IN expr
    (48) expr -> . LET OBJECTID : TYPEID inicializaciones IN expr
    (49) expr -> . LET OBJECTID : TYPEID ASSIGN expr IN expr
    (50) expr -> . LET OBJECTID : TYPEID IN expr
    (51) expr -> . { exprs }
    (52) expr -> . WHILE expr LOOP error POOL
    (53) expr -> . WHILE error LOOP expr POOL
    (54) expr -> . WHILE error LOOP error POOL
    (55) expr -> . WHILE expr LOOP expr POOL
    (56) expr -> . IF expr THEN expr ELSE expr FI
    (57) expr -> . IF error THEN expr ELSE expr FI
    (58) expr -> . IF expr THEN error FI
    (59) expr -> . OBJECTID ( parametros )
    (60) expr -> . OBJECTID ( )
    (61) expr -> . expr @ TYPEID . OBJECTID ( parametros )
    (62) expr -> . expr . OBJECTID ( parametros )
    (63) expr -> . expr @ TYPEID . OBJECTID ( )
    (64) expr -> . expr . OBJECTID ( )
    (65) expr -> . OBJECTID ASSIGN error
    (66) expr -> . OBJECTID ASSIGN expr
    BOOL_CONST      shift and go to state 45
    error           shift and go to state 77
    STR_CONST       shift and go to state 47
    INT_CONST       shift and go to state 46
    OBJECTID        shift and go to state 42
    (               shift and go to state 48
    NOT             shift and go to state 49
    ~               shift and go to state 50
    ISVOID          shift and go to state 51
    NEW             shift and go to state 52
    CASE            shift and go to state 53
    LET             shift and go to state 54
    {               shift and go to state 55
    WHILE           shift and go to state 56
    IF              shift and go to state 57

    expr                           shift and go to state 106

state 72

    (37) expr -> expr - . expr
    (23) expr -> . BOOL_CONST
    (24) expr -> . error INT_CONST
    (25) expr -> . STR_CONST
    (26) expr -> . INT_CONST
    (27) expr -> . OBJECTID
    (28) expr -> . ( expr )
    (29) expr -> . NOT error
    (30) expr -> . NOT expr
    (31) expr -> . expr = expr
    (32) expr -> . expr LE expr
    (33) expr -> . expr < expr
    (34) expr -> . ~ expr
    (35) expr -> . expr / expr
    (36) expr -> . expr * expr
    (37) expr -> . expr - expr
    (38) expr -> . expr + expr
    (39) expr -> . ISVOID error
    (40) expr -> . ISVOID expr
    (41) expr -> . error TYPEID
    (42) expr -> . NEW TYPEID
    (43) expr -> . CASE expr OF darrowlist ESAC
    (44) expr -> . CASE expr OF error ESAC
    (45) expr -> . CASE error OF darrowlist ESAC
    (46) expr -> . LET OBJECTID : TYPEID expr IN error
    (47) expr -> . LET OBJECTID : TYPEID error IN expr
    (48) expr -> . LET OBJECTID : TYPEID inicializaciones IN expr
    (49) expr -> . LET OBJECTID : TYPEID ASSIGN expr IN expr
    (50) expr -> . LET OBJECTID : TYPEID IN expr
    (51) expr -> . { exprs }
    (52) expr -> . WHILE expr LOOP error POOL
    (53) expr -> . WHILE error LOOP expr POOL
    (54) expr -> . WHILE error LOOP error POOL
    (55) expr -> . WHILE expr LOOP expr POOL
    (56) expr -> . IF expr THEN expr ELSE expr FI
    (57) expr -> . IF error THEN expr ELSE expr FI
    (58) expr -> . IF expr THEN error FI
    (59) expr -> . OBJECTID ( parametros )
    (60) expr -> . OBJECTID ( )
    (61) expr -> . expr @ TYPEID . OBJECTID ( parametros )
    (62) expr -> . expr . OBJECTID ( parametros )
    (63) expr -> . expr @ TYPEID . OBJECTID ( )
    (64) expr -> . expr . OBJECTID ( )
    (65) expr -> . OBJECTID ASSIGN error
    (66) expr -> . OBJECTID ASSIGN expr
    BOOL_CONST      shift and go to state 45
    error           shift and go to state 77
    STR_CONST       shift and go to state 47
    INT_CONST       shift and go to state 46
    OBJECTID        shift and go to state 42
    (               shift and go to state 48
    NOT             shift and go to state 49
    ~               shift and go to state 50
    ISVOID          shift and go to state 51
    NEW             shift and go to state 52
    CASE            shift and go to state 53
    LET             shift and go to state 54
    {               shift and go to state 55
    WHILE           shift and go to state 56
    IF              shift and go to state 57

    expr                           shift and go to state 107

state 73

    (38) expr -> expr + . expr
    (23) expr -> . BOOL_CONST
    (24) expr -> . error INT_CONST
    (25) expr -> . STR_CONST
    (26) expr -> . INT_CONST
    (27) expr -> . OBJECTID
    (28) expr -> . ( expr )
    (29) expr -> . NOT error
    (30) expr -> . NOT expr
    (31) expr -> . expr = expr
    (32) expr -> . expr LE expr
    (33) expr -> . expr < expr
    (34) expr -> . ~ expr
    (35) expr -> . expr / expr
    (36) expr -> . expr * expr
    (37) expr -> . expr - expr
    (38) expr -> . expr + expr
    (39) expr -> . ISVOID error
    (40) expr -> . ISVOID expr
    (41) expr -> . error TYPEID
    (42) expr -> . NEW TYPEID
    (43) expr -> . CASE expr OF darrowlist ESAC
    (44) expr -> . CASE expr OF error ESAC
    (45) expr -> . CASE error OF darrowlist ESAC
    (46) expr -> . LET OBJECTID : TYPEID expr IN error
    (47) expr -> . LET OBJECTID : TYPEID error IN expr
    (48) expr -> . LET OBJECTID : TYPEID inicializaciones IN expr
    (49) expr -> . LET OBJECTID : TYPEID ASSIGN expr IN expr
    (50) expr -> . LET OBJECTID : TYPEID IN expr
    (51) expr -> . { exprs }
    (52) expr -> . WHILE expr LOOP error POOL
    (53) expr -> . WHILE error LOOP expr POOL
    (54) expr -> . WHILE error LOOP error POOL
    (55) expr -> . WHILE expr LOOP expr POOL
    (56) expr -> . IF expr THEN expr ELSE expr FI
    (57) expr -> . IF error THEN expr ELSE expr FI
    (58) expr -> . IF expr THEN error FI
    (59) expr -> . OBJECTID ( parametros )
    (60) expr -> . OBJECTID ( )
    (61) expr -> . expr @ TYPEID . OBJECTID ( parametros )
    (62) expr -> . expr . OBJECTID ( parametros )
    (63) expr -> . expr @ TYPEID . OBJECTID ( )
    (64) expr -> . expr . OBJECTID ( )
    (65) expr -> . OBJECTID ASSIGN error
    (66) expr -> . OBJECTID ASSIGN expr
    BOOL_CONST      shift and go to state 45
    error           shift and go to state 77
    STR_CONST       shift and go to state 47
    INT_CONST       shift and go to state 46
    OBJECTID        shift and go to state 42
    (               shift and go to state 48
    NOT             shift and go to state 49
    ~               shift and go to state 50
    ISVOID          shift and go to state 51
    NEW             shift and go to state 52
    CASE            shift and go to state 53
    LET             shift and go to state 54
    {               shift and go to state 55
    WHILE           shift and go to state 56
    IF              shift and go to state 57

    expr                           shift and go to state 108

state 74

    (61) expr -> expr @ . TYPEID . OBJECTID ( parametros )
    (63) expr -> expr @ . TYPEID . OBJECTID ( )
    TYPEID          shift and go to state 109


state 75

    (62) expr -> expr . . OBJECTID ( parametros )
    (64) expr -> expr . . OBJECTID ( )
    OBJECTID        shift and go to state 110


state 76

    (28) expr -> ( expr . )
    (31) expr -> expr . = expr
    (32) expr -> expr . LE expr
    (33) expr -> expr . < expr
    (35) expr -> expr . / expr
    (36) expr -> expr . * expr
    (37) expr -> expr . - expr
    (38) expr -> expr . + expr
    (61) expr -> expr . @ TYPEID . OBJECTID ( parametros )
    (62) expr -> expr . . OBJECTID ( parametros )
    (63) expr -> expr . @ TYPEID . OBJECTID ( )
    (64) expr -> expr . . OBJECTID ( )
    )               shift and go to state 111
    =               shift and go to state 67
    LE              shift and go to state 68
    <               shift and go to state 69
    /               shift and go to state 70
    *               shift and go to state 71
    -               shift and go to state 72
    +               shift and go to state 73
    @               shift and go to state 74
    .               shift and go to state 75


state 77

    (24) expr -> error . INT_CONST
    (41) expr -> error . TYPEID
    INT_CONST       shift and go to state 66
    TYPEID          shift and go to state 65


state 78

    (29) expr -> NOT error .
    (24) expr -> error . INT_CONST
    (41) expr -> error . TYPEID
    =               reduce using rule 29 (expr -> NOT error .)
    LE              reduce using rule 29 (expr -> NOT error .)
    <               reduce using rule 29 (expr -> NOT error .)
    /               reduce using rule 29 (expr -> NOT error .)
    *               reduce using rule 29 (expr -> NOT error .)
    -               reduce using rule 29 (expr -> NOT error .)
    +               reduce using rule 29 (expr -> NOT error .)
    @               reduce using rule 29 (expr -> NOT error .)
    .               reduce using rule 29 (expr -> NOT error .)
    ;               reduce using rule 29 (expr -> NOT error .)
    )               reduce using rule 29 (expr -> NOT error .)
    OF              reduce using rule 29 (expr -> NOT error .)
    LOOP            reduce using rule 29 (expr -> NOT error .)
    THEN            reduce using rule 29 (expr -> NOT error .)
    ,               reduce using rule 29 (expr -> NOT error .)
    }               reduce using rule 29 (expr -> NOT error .)
    POOL            reduce using rule 29 (expr -> NOT error .)
    ELSE            reduce using rule 29 (expr -> NOT error .)
    IN              reduce using rule 29 (expr -> NOT error .)
    FI              reduce using rule 29 (expr -> NOT error .)
    INT_CONST       shift and go to state 66
    TYPEID          shift and go to state 65


state 79

    (30) expr -> NOT expr .
    (31) expr -> expr . = expr
    (32) expr -> expr . LE expr
    (33) expr -> expr . < expr
    (35) expr -> expr . / expr
    (36) expr -> expr . * expr
    (37) expr -> expr . - expr
    (38) expr -> expr . + expr
    (61) expr -> expr . @ TYPEID . OBJECTID ( parametros )
    (62) expr -> expr . . OBJECTID ( parametros )
    (63) expr -> expr . @ TYPEID . OBJECTID ( )
    (64) expr -> expr . . OBJECTID ( )
    ;               reduce using rule 30 (expr -> NOT expr .)
    )               reduce using rule 30 (expr -> NOT expr .)
    OF              reduce using rule 30 (expr -> NOT expr .)
    LOOP            reduce using rule 30 (expr -> NOT expr .)
    THEN            reduce using rule 30 (expr -> NOT expr .)
    ,               reduce using rule 30 (expr -> NOT expr .)
    }               reduce using rule 30 (expr -> NOT expr .)
    POOL            reduce using rule 30 (expr -> NOT expr .)
    ELSE            reduce using rule 30 (expr -> NOT expr .)
    IN              reduce using rule 30 (expr -> NOT expr .)
    FI              reduce using rule 30 (expr -> NOT expr .)
    =               shift and go to state 67
    LE              shift and go to state 68
    <               shift and go to state 69
    /               shift and go to state 70
    *               shift and go to state 71
    -               shift and go to state 72
    +               shift and go to state 73
    @               shift and go to state 74
    .               shift and go to state 75


state 80

    (34) expr -> ~ expr .
    (31) expr -> expr . = expr
    (32) expr -> expr . LE expr
    (33) expr -> expr . < expr
    (35) expr -> expr . / expr
    (36) expr -> expr . * expr
    (37) expr -> expr . - expr
    (38) expr -> expr . + expr
    (61) expr -> expr . @ TYPEID . OBJECTID ( parametros )
    (62) expr -> expr . . OBJECTID ( parametros )
    (63) expr -> expr . @ TYPEID . OBJECTID ( )
    (64) expr -> expr . . OBJECTID ( )
    =               reduce using rule 34 (expr -> ~ expr .)
    LE              reduce using rule 34 (expr -> ~ expr .)
    <               reduce using rule 34 (expr -> ~ expr .)
    /               reduce using rule 34 (expr -> ~ expr .)
    *               reduce using rule 34 (expr -> ~ expr .)
    -               reduce using rule 34 (expr -> ~ expr .)
    +               reduce using rule 34 (expr -> ~ expr .)
    ;               reduce using rule 34 (expr -> ~ expr .)
    )               reduce using rule 34 (expr -> ~ expr .)
    OF              reduce using rule 34 (expr -> ~ expr .)
    LOOP            reduce using rule 34 (expr -> ~ expr .)
    THEN            reduce using rule 34 (expr -> ~ expr .)
    ,               reduce using rule 34 (expr -> ~ expr .)
    }               reduce using rule 34 (expr -> ~ expr .)
    POOL            reduce using rule 34 (expr -> ~ expr .)
    ELSE            reduce using rule 34 (expr -> ~ expr .)
    IN              reduce using rule 34 (expr -> ~ expr .)
    FI              reduce using rule 34 (expr -> ~ expr .)
    @               shift and go to state 74
    .               shift and go to state 75


state 81

    (39) expr -> ISVOID error .
    (24) expr -> error . INT_CONST
    (41) expr -> error . TYPEID
    =               reduce using rule 39 (expr -> ISVOID error .)
    LE              reduce using rule 39 (expr -> ISVOID error .)
    <               reduce using rule 39 (expr -> ISVOID error .)
    /               reduce using rule 39 (expr -> ISVOID error .)
    *               reduce using rule 39 (expr -> ISVOID error .)
    -               reduce using rule 39 (expr -> ISVOID error .)
    +               reduce using rule 39 (expr -> ISVOID error .)
    @               reduce using rule 39 (expr -> ISVOID error .)
    .               reduce using rule 39 (expr -> ISVOID error .)
    ;               reduce using rule 39 (expr -> ISVOID error .)
    )               reduce using rule 39 (expr -> ISVOID error .)
    OF              reduce using rule 39 (expr -> ISVOID error .)
    LOOP            reduce using rule 39 (expr -> ISVOID error .)
    THEN            reduce using rule 39 (expr -> ISVOID error .)
    ,               reduce using rule 39 (expr -> ISVOID error .)
    }               reduce using rule 39 (expr -> ISVOID error .)
    POOL            reduce using rule 39 (expr -> ISVOID error .)
    ELSE            reduce using rule 39 (expr -> ISVOID error .)
    IN              reduce using rule 39 (expr -> ISVOID error .)
    FI              reduce using rule 39 (expr -> ISVOID error .)
    INT_CONST       shift and go to state 66
    TYPEID          shift and go to state 65


state 82

    (40) expr -> ISVOID expr .
    (31) expr -> expr . = expr
    (32) expr -> expr . LE expr
    (33) expr -> expr . < expr
    (35) expr -> expr . / expr
    (36) expr -> expr . * expr
    (37) expr -> expr . - expr
    (38) expr -> expr . + expr
    (61) expr -> expr . @ TYPEID . OBJECTID ( parametros )
    (62) expr -> expr . . OBJECTID ( parametros )
    (63) expr -> expr . @ TYPEID . OBJECTID ( )
    (64) expr -> expr . . OBJECTID ( )
    =               reduce using rule 40 (expr -> ISVOID expr .)
    LE              reduce using rule 40 (expr -> ISVOID expr .)
    <               reduce using rule 40 (expr -> ISVOID expr .)
    /               reduce using rule 40 (expr -> ISVOID expr .)
    *               reduce using rule 40 (expr -> ISVOID expr .)
    -               reduce using rule 40 (expr -> ISVOID expr .)
    +               reduce using rule 40 (expr -> ISVOID expr .)
    ;               reduce using rule 40 (expr -> ISVOID expr .)
    )               reduce using rule 40 (expr -> ISVOID expr .)
    OF              reduce using rule 40 (expr -> ISVOID expr .)
    LOOP            reduce using rule 40 (expr -> ISVOID expr .)
    THEN            reduce using rule 40 (expr -> ISVOID expr .)
    ,               reduce using rule 40 (expr -> ISVOID expr .)
    }               reduce using rule 40 (expr -> ISVOID expr .)
    POOL            reduce using rule 40 (expr -> ISVOID expr .)
    ELSE            reduce using rule 40 (expr -> ISVOID expr .)
    IN              reduce using rule 40 (expr -> ISVOID expr .)
    FI              reduce using rule 40 (expr -> ISVOID expr .)
    @               shift and go to state 74
    .               shift and go to state 75


state 83

    (42) expr -> NEW TYPEID .
    =               reduce using rule 42 (expr -> NEW TYPEID .)
    LE              reduce using rule 42 (expr -> NEW TYPEID .)
    <               reduce using rule 42 (expr -> NEW TYPEID .)
    /               reduce using rule 42 (expr -> NEW TYPEID .)
    *               reduce using rule 42 (expr -> NEW TYPEID .)
    -               reduce using rule 42 (expr -> NEW TYPEID .)
    +               reduce using rule 42 (expr -> NEW TYPEID .)
    @               reduce using rule 42 (expr -> NEW TYPEID .)
    .               reduce using rule 42 (expr -> NEW TYPEID .)
    ;               reduce using rule 42 (expr -> NEW TYPEID .)
    )               reduce using rule 42 (expr -> NEW TYPEID .)
    OF              reduce using rule 42 (expr -> NEW TYPEID .)
    LOOP            reduce using rule 42 (expr -> NEW TYPEID .)
    THEN            reduce using rule 42 (expr -> NEW TYPEID .)
    ,               reduce using rule 42 (expr -> NEW TYPEID .)
    }               reduce using rule 42 (expr -> NEW TYPEID .)
    POOL            reduce using rule 42 (expr -> NEW TYPEID .)
    ELSE            reduce using rule 42 (expr -> NEW TYPEID .)
    IN              reduce using rule 42 (expr -> NEW TYPEID .)
    FI              reduce using rule 42 (expr -> NEW TYPEID .)


state 84

    (43) expr -> CASE expr . OF darrowlist ESAC
    (44) expr -> CASE expr . OF error ESAC
    (31) expr -> expr . = expr
    (32) expr -> expr . LE expr
    (33) expr -> expr . < expr
    (35) expr -> expr . / expr
    (36) expr -> expr . * expr
    (37) expr -> expr . - expr
    (38) expr -> expr . + expr
    (61) expr -> expr . @ TYPEID . OBJECTID ( parametros )
    (62) expr -> expr . . OBJECTID ( parametros )
    (63) expr -> expr . @ TYPEID . OBJECTID ( )
    (64) expr -> expr . . OBJECTID ( )
    OF              shift and go to state 112
    =               shift and go to state 67
    LE              shift and go to state 68
    <               shift and go to state 69
    /               shift and go to state 70
    *               shift and go to state 71
    -               shift and go to state 72
    +               shift and go to state 73
    @               shift and go to state 74
    .               shift and go to state 75


state 85

    (45) expr -> CASE error . OF darrowlist ESAC
    (24) expr -> error . INT_CONST
    (41) expr -> error . TYPEID
    OF              shift and go to state 113
    INT_CONST       shift and go to state 66
    TYPEID          shift and go to state 65


state 86

    (46) expr -> LET OBJECTID . : TYPEID expr IN error
    (47) expr -> LET OBJECTID . : TYPEID error IN expr
    (48) expr -> LET OBJECTID . : TYPEID inicializaciones IN expr
    (49) expr -> LET OBJECTID . : TYPEID ASSIGN expr IN expr
    (50) expr -> LET OBJECTID . : TYPEID IN expr
    :               shift and go to state 114


state 87

    (51) expr -> { exprs . }
    (70) exprs -> exprs . expr ;
    (23) expr -> . BOOL_CONST
    (24) expr -> . error INT_CONST
    (25) expr -> . STR_CONST
    (26) expr -> . INT_CONST
    (27) expr -> . OBJECTID
    (28) expr -> . ( expr )
    (29) expr -> . NOT error
    (30) expr -> . NOT expr
    (31) expr -> . expr = expr
    (32) expr -> . expr LE expr
    (33) expr -> . expr < expr
    (34) expr -> . ~ expr
    (35) expr -> . expr / expr
    (36) expr -> . expr * expr
    (37) expr -> . expr - expr
    (38) expr -> . expr + expr
    (39) expr -> . ISVOID error
    (40) expr -> . ISVOID expr
    (41) expr -> . error TYPEID
    (42) expr -> . NEW TYPEID
    (43) expr -> . CASE expr OF darrowlist ESAC
    (44) expr -> . CASE expr OF error ESAC
    (45) expr -> . CASE error OF darrowlist ESAC
    (46) expr -> . LET OBJECTID : TYPEID expr IN error
    (47) expr -> . LET OBJECTID : TYPEID error IN expr
    (48) expr -> . LET OBJECTID : TYPEID inicializaciones IN expr
    (49) expr -> . LET OBJECTID : TYPEID ASSIGN expr IN expr
    (50) expr -> . LET OBJECTID : TYPEID IN expr
    (51) expr -> . { exprs }
    (52) expr -> . WHILE expr LOOP error POOL
    (53) expr -> . WHILE error LOOP expr POOL
    (54) expr -> . WHILE error LOOP error POOL
    (55) expr -> . WHILE expr LOOP expr POOL
    (56) expr -> . IF expr THEN expr ELSE expr FI
    (57) expr -> . IF error THEN expr ELSE expr FI
    (58) expr -> . IF expr THEN error FI
    (59) expr -> . OBJECTID ( parametros )
    (60) expr -> . OBJECTID ( )
    (61) expr -> . expr @ TYPEID . OBJECTID ( parametros )
    (62) expr -> . expr . OBJECTID ( parametros )
    (63) expr -> . expr @ TYPEID . OBJECTID ( )
    (64) expr -> . expr . OBJECTID ( )
    (65) expr -> . OBJECTID ASSIGN error
    (66) expr -> . OBJECTID ASSIGN expr
    }               shift and go to state 115
    BOOL_CONST      shift and go to state 45
    error           shift and go to state 77
    STR_CONST       shift and go to state 47
    INT_CONST       shift and go to state 46
    OBJECTID        shift and go to state 42
    (               shift and go to state 48
    NOT             shift and go to state 49
    ~               shift and go to state 50
    ISVOID          shift and go to state 51
    NEW             shift and go to state 52
    CASE            shift and go to state 53
    LET             shift and go to state 54
    {               shift and go to state 55
    WHILE           shift and go to state 56
    IF              shift and go to state 57

    expr                           shift and go to state 116

state 88

    (69) exprs -> error . ;
    (24) expr -> error . INT_CONST
    (41) expr -> error . TYPEID
    ;               shift and go to state 117
    INT_CONST       shift and go to state 66
    TYPEID          shift and go to state 65


state 89

    (71) exprs -> expr . ;
    (31) expr -> expr . = expr
    (32) expr -> expr . LE expr
    (33) expr -> expr . < expr
    (35) expr -> expr . / expr
    (36) expr -> expr . * expr
    (37) expr -> expr . - expr
    (38) expr -> expr . + expr
    (61) expr -> expr . @ TYPEID . OBJECTID ( parametros )
    (62) expr -> expr . . OBJECTID ( parametros )
    (63) expr -> expr . @ TYPEID . OBJECTID ( )
    (64) expr -> expr . . OBJECTID ( )
    ;               shift and go to state 118
    =               shift and go to state 67
    LE              shift and go to state 68
    <               shift and go to state 69
    /               shift and go to state 70
    *               shift and go to state 71
    -               shift and go to state 72
    +               shift and go to state 73
    @               shift and go to state 74
    .               shift and go to state 75


state 90

    (52) expr -> WHILE expr . LOOP error POOL
    (55) expr -> WHILE expr . LOOP expr POOL
    (31) expr -> expr . = expr
    (32) expr -> expr . LE expr
    (33) expr -> expr . < expr
    (35) expr -> expr . / expr
    (36) expr -> expr . * expr
    (37) expr -> expr . - expr
    (38) expr -> expr . + expr
    (61) expr -> expr . @ TYPEID . OBJECTID ( parametros )
    (62) expr -> expr . . OBJECTID ( parametros )
    (63) expr -> expr . @ TYPEID . OBJECTID ( )
    (64) expr -> expr . . OBJECTID ( )
    LOOP            shift and go to state 119
    =               shift and go to state 67
    LE              shift and go to state 68
    <               shift and go to state 69
    /               shift and go to state 70
    *               shift and go to state 71
    -               shift and go to state 72
    +               shift and go to state 73
    @               shift and go to state 74
    .               shift and go to state 75


state 91

    (53) expr -> WHILE error . LOOP expr POOL
    (54) expr -> WHILE error . LOOP error POOL
    (24) expr -> error . INT_CONST
    (41) expr -> error . TYPEID
    LOOP            shift and go to state 120
    INT_CONST       shift and go to state 66
    TYPEID          shift and go to state 65


state 92

    (56) expr -> IF expr . THEN expr ELSE expr FI
    (58) expr -> IF expr . THEN error FI
    (31) expr -> expr . = expr
    (32) expr -> expr . LE expr
    (33) expr -> expr . < expr
    (35) expr -> expr . / expr
    (36) expr -> expr . * expr
    (37) expr -> expr . - expr
    (38) expr -> expr . + expr
    (61) expr -> expr . @ TYPEID . OBJECTID ( parametros )
    (62) expr -> expr . . OBJECTID ( parametros )
    (63) expr -> expr . @ TYPEID . OBJECTID ( )
    (64) expr -> expr . . OBJECTID ( )
    THEN            shift and go to state 121
    =               shift and go to state 67
    LE              shift and go to state 68
    <               shift and go to state 69
    /               shift and go to state 70
    *               shift and go to state 71
    -               shift and go to state 72
    +               shift and go to state 73
    @               shift and go to state 74
    .               shift and go to state 75


state 93

    (57) expr -> IF error . THEN expr ELSE expr FI
    (24) expr -> error . INT_CONST
    (41) expr -> error . TYPEID
    THEN            shift and go to state 122
    INT_CONST       shift and go to state 66
    TYPEID          shift and go to state 65


state 94

    (15) caracteristica -> OBJECTID ( error ) : TYPEID . { expr }
    {               shift and go to state 123


state 95

    (18) caracteristica -> OBJECTID ( ) : TYPEID { . error }
    (19) caracteristica -> OBJECTID ( ) : TYPEID { . expr }
    (23) expr -> . BOOL_CONST
    (24) expr -> . error INT_CONST
    (25) expr -> . STR_CONST
    (26) expr -> . INT_CONST
    (27) expr -> . OBJECTID
    (28) expr -> . ( expr )
    (29) expr -> . NOT error
    (30) expr -> . NOT expr
    (31) expr -> . expr = expr
    (32) expr -> . expr LE expr
    (33) expr -> . expr < expr
    (34) expr -> . ~ expr
    (35) expr -> . expr / expr
    (36) expr -> . expr * expr
    (37) expr -> . expr - expr
    (38) expr -> . expr + expr
    (39) expr -> . ISVOID error
    (40) expr -> . ISVOID expr
    (41) expr -> . error TYPEID
    (42) expr -> . NEW TYPEID
    (43) expr -> . CASE expr OF darrowlist ESAC
    (44) expr -> . CASE expr OF error ESAC
    (45) expr -> . CASE error OF darrowlist ESAC
    (46) expr -> . LET OBJECTID : TYPEID expr IN error
    (47) expr -> . LET OBJECTID : TYPEID error IN expr
    (48) expr -> . LET OBJECTID : TYPEID inicializaciones IN expr
    (49) expr -> . LET OBJECTID : TYPEID ASSIGN expr IN expr
    (50) expr -> . LET OBJECTID : TYPEID IN expr
    (51) expr -> . { exprs }
    (52) expr -> . WHILE expr LOOP error POOL
    (53) expr -> . WHILE error LOOP expr POOL
    (54) expr -> . WHILE error LOOP error POOL
    (55) expr -> . WHILE expr LOOP expr POOL
    (56) expr -> . IF expr THEN expr ELSE expr FI
    (57) expr -> . IF error THEN expr ELSE expr FI
    (58) expr -> . IF expr THEN error FI
    (59) expr -> . OBJECTID ( parametros )
    (60) expr -> . OBJECTID ( )
    (61) expr -> . expr @ TYPEID . OBJECTID ( parametros )
    (62) expr -> . expr . OBJECTID ( parametros )
    (63) expr -> . expr @ TYPEID . OBJECTID ( )
    (64) expr -> . expr . OBJECTID ( )
    (65) expr -> . OBJECTID ASSIGN error
    (66) expr -> . OBJECTID ASSIGN expr
    error           shift and go to state 124
    BOOL_CONST      shift and go to state 45
    STR_CONST       shift and go to state 47
    INT_CONST       shift and go to state 46
    OBJECTID        shift and go to state 42
    (               shift and go to state 48
    NOT             shift and go to state 49
    ~               shift and go to state 50
    ISVOID          shift and go to state 51
    NEW             shift and go to state 52
    CASE            shift and go to state 53
    LET             shift and go to state 54
    {               shift and go to state 55
    WHILE           shift and go to state 56
    IF              shift and go to state 57

    expr                           shift and go to state 125

state 96

    (16) caracteristica -> OBJECTID ( formales ) : TYPEID . { error }
    (17) caracteristica -> OBJECTID ( formales ) : TYPEID . { expr }
    {               shift and go to state 126


state 97

    (59) expr -> OBJECTID ( parametros . )
    (67) parametros -> parametros . , expr
    )               shift and go to state 127
    ,               shift and go to state 128


state 98

    (60) expr -> OBJECTID ( ) .
    =               reduce using rule 60 (expr -> OBJECTID ( ) .)
    LE              reduce using rule 60 (expr -> OBJECTID ( ) .)
    <               reduce using rule 60 (expr -> OBJECTID ( ) .)
    /               reduce using rule 60 (expr -> OBJECTID ( ) .)
    *               reduce using rule 60 (expr -> OBJECTID ( ) .)
    -               reduce using rule 60 (expr -> OBJECTID ( ) .)
    +               reduce using rule 60 (expr -> OBJECTID ( ) .)
    @               reduce using rule 60 (expr -> OBJECTID ( ) .)
    .               reduce using rule 60 (expr -> OBJECTID ( ) .)
    ;               reduce using rule 60 (expr -> OBJECTID ( ) .)
    )               reduce using rule 60 (expr -> OBJECTID ( ) .)
    OF              reduce using rule 60 (expr -> OBJECTID ( ) .)
    LOOP            reduce using rule 60 (expr -> OBJECTID ( ) .)
    THEN            reduce using rule 60 (expr -> OBJECTID ( ) .)
    ,               reduce using rule 60 (expr -> OBJECTID ( ) .)
    }               reduce using rule 60 (expr -> OBJECTID ( ) .)
    POOL            reduce using rule 60 (expr -> OBJECTID ( ) .)
    ELSE            reduce using rule 60 (expr -> OBJECTID ( ) .)
    IN              reduce using rule 60 (expr -> OBJECTID ( ) .)
    FI              reduce using rule 60 (expr -> OBJECTID ( ) .)


state 99

    (68) parametros -> expr .
    (31) expr -> expr . = expr
    (32) expr -> expr . LE expr
    (33) expr -> expr . < expr
    (35) expr -> expr . / expr
    (36) expr -> expr . * expr
    (37) expr -> expr . - expr
    (38) expr -> expr . + expr
    (61) expr -> expr . @ TYPEID . OBJECTID ( parametros )
    (62) expr -> expr . . OBJECTID ( parametros )
    (63) expr -> expr . @ TYPEID . OBJECTID ( )
    (64) expr -> expr . . OBJECTID ( )
    )               reduce using rule 68 (parametros -> expr .)
    ,               reduce using rule 68 (parametros -> expr .)
    =               shift and go to state 67
    LE              shift and go to state 68
    <               shift and go to state 69
    /               shift and go to state 70
    *               shift and go to state 71
    -               shift and go to state 72
    +               shift and go to state 73
    @               shift and go to state 74
    .               shift and go to state 75


state 100

    (65) expr -> OBJECTID ASSIGN error .
    (24) expr -> error . INT_CONST
    (41) expr -> error . TYPEID
    =               reduce using rule 65 (expr -> OBJECTID ASSIGN error .)
    LE              reduce using rule 65 (expr -> OBJECTID ASSIGN error .)
    <               reduce using rule 65 (expr -> OBJECTID ASSIGN error .)
    /               reduce using rule 65 (expr -> OBJECTID ASSIGN error .)
    *               reduce using rule 65 (expr -> OBJECTID ASSIGN error .)
    -               reduce using rule 65 (expr -> OBJECTID ASSIGN error .)
    +               reduce using rule 65 (expr -> OBJECTID ASSIGN error .)
    @               reduce using rule 65 (expr -> OBJECTID ASSIGN error .)
    .               reduce using rule 65 (expr -> OBJECTID ASSIGN error .)
    ;               reduce using rule 65 (expr -> OBJECTID ASSIGN error .)
    )               reduce using rule 65 (expr -> OBJECTID ASSIGN error .)
    OF              reduce using rule 65 (expr -> OBJECTID ASSIGN error .)
    LOOP            reduce using rule 65 (expr -> OBJECTID ASSIGN error .)
    THEN            reduce using rule 65 (expr -> OBJECTID ASSIGN error .)
    ,               reduce using rule 65 (expr -> OBJECTID ASSIGN error .)
    }               reduce using rule 65 (expr -> OBJECTID ASSIGN error .)
    POOL            reduce using rule 65 (expr -> OBJECTID ASSIGN error .)
    ELSE            reduce using rule 65 (expr -> OBJECTID ASSIGN error .)
    IN              reduce using rule 65 (expr -> OBJECTID ASSIGN error .)
    FI              reduce using rule 65 (expr -> OBJECTID ASSIGN error .)
    INT_CONST       shift and go to state 66
    TYPEID          shift and go to state 65


state 101

    (66) expr -> OBJECTID ASSIGN expr .
    (31) expr -> expr . = expr
    (32) expr -> expr . LE expr
    (33) expr -> expr . < expr
    (35) expr -> expr . / expr
    (36) expr -> expr . * expr
    (37) expr -> expr . - expr
    (38) expr -> expr . + expr
    (61) expr -> expr . @ TYPEID . OBJECTID ( parametros )
    (62) expr -> expr . . OBJECTID ( parametros )
    (63) expr -> expr . @ TYPEID . OBJECTID ( )
    (64) expr -> expr . . OBJECTID ( )
  ! shift/reduce conflict for = resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for < resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for @ resolved as shift
  ! shift/reduce conflict for . resolved as shift
    ;               reduce using rule 66 (expr -> OBJECTID ASSIGN expr .)
    )               reduce using rule 66 (expr -> OBJECTID ASSIGN expr .)
    OF              reduce using rule 66 (expr -> OBJECTID ASSIGN expr .)
    LOOP            reduce using rule 66 (expr -> OBJECTID ASSIGN expr .)
    THEN            reduce using rule 66 (expr -> OBJECTID ASSIGN expr .)
    ,               reduce using rule 66 (expr -> OBJECTID ASSIGN expr .)
    }               reduce using rule 66 (expr -> OBJECTID ASSIGN expr .)
    POOL            reduce using rule 66 (expr -> OBJECTID ASSIGN expr .)
    ELSE            reduce using rule 66 (expr -> OBJECTID ASSIGN expr .)
    IN              reduce using rule 66 (expr -> OBJECTID ASSIGN expr .)
    FI              reduce using rule 66 (expr -> OBJECTID ASSIGN expr .)
    =               shift and go to state 67
    LE              shift and go to state 68
    <               shift and go to state 69
    /               shift and go to state 70
    *               shift and go to state 71
    -               shift and go to state 72
    +               shift and go to state 73
    @               shift and go to state 74
    .               shift and go to state 75


state 102

    (31) expr -> expr = expr .
    (31) expr -> expr . = expr
    (32) expr -> expr . LE expr
    (33) expr -> expr . < expr
    (35) expr -> expr . / expr
    (36) expr -> expr . * expr
    (37) expr -> expr . - expr
    (38) expr -> expr . + expr
    (61) expr -> expr . @ TYPEID . OBJECTID ( parametros )
    (62) expr -> expr . . OBJECTID ( parametros )
    (63) expr -> expr . @ TYPEID . OBJECTID ( )
    (64) expr -> expr . . OBJECTID ( )
    =               reduce using rule 31 (expr -> expr = expr .)
    LE              reduce using rule 31 (expr -> expr = expr .)
    <               reduce using rule 31 (expr -> expr = expr .)
    ;               reduce using rule 31 (expr -> expr = expr .)
    )               reduce using rule 31 (expr -> expr = expr .)
    OF              reduce using rule 31 (expr -> expr = expr .)
    LOOP            reduce using rule 31 (expr -> expr = expr .)
    THEN            reduce using rule 31 (expr -> expr = expr .)
    ,               reduce using rule 31 (expr -> expr = expr .)
    }               reduce using rule 31 (expr -> expr = expr .)
    POOL            reduce using rule 31 (expr -> expr = expr .)
    ELSE            reduce using rule 31 (expr -> expr = expr .)
    IN              reduce using rule 31 (expr -> expr = expr .)
    FI              reduce using rule 31 (expr -> expr = expr .)
    /               shift and go to state 70
    *               shift and go to state 71
    -               shift and go to state 72
    +               shift and go to state 73
    @               shift and go to state 74
    .               shift and go to state 75


state 103

    (32) expr -> expr LE expr .
    (31) expr -> expr . = expr
    (32) expr -> expr . LE expr
    (33) expr -> expr . < expr
    (35) expr -> expr . / expr
    (36) expr -> expr . * expr
    (37) expr -> expr . - expr
    (38) expr -> expr . + expr
    (61) expr -> expr . @ TYPEID . OBJECTID ( parametros )
    (62) expr -> expr . . OBJECTID ( parametros )
    (63) expr -> expr . @ TYPEID . OBJECTID ( )
    (64) expr -> expr . . OBJECTID ( )
    =               reduce using rule 32 (expr -> expr LE expr .)
    LE              reduce using rule 32 (expr -> expr LE expr .)
    <               reduce using rule 32 (expr -> expr LE expr .)
    ;               reduce using rule 32 (expr -> expr LE expr .)
    )               reduce using rule 32 (expr -> expr LE expr .)
    OF              reduce using rule 32 (expr -> expr LE expr .)
    LOOP            reduce using rule 32 (expr -> expr LE expr .)
    THEN            reduce using rule 32 (expr -> expr LE expr .)
    ,               reduce using rule 32 (expr -> expr LE expr .)
    }               reduce using rule 32 (expr -> expr LE expr .)
    POOL            reduce using rule 32 (expr -> expr LE expr .)
    ELSE            reduce using rule 32 (expr -> expr LE expr .)
    IN              reduce using rule 32 (expr -> expr LE expr .)
    FI              reduce using rule 32 (expr -> expr LE expr .)
    /               shift and go to state 70
    *               shift and go to state 71
    -               shift and go to state 72
    +               shift and go to state 73
    @               shift and go to state 74
    .               shift and go to state 75


state 104

    (33) expr -> expr < expr .
    (31) expr -> expr . = expr
    (32) expr -> expr . LE expr
    (33) expr -> expr . < expr
    (35) expr -> expr . / expr
    (36) expr -> expr . * expr
    (37) expr -> expr . - expr
    (38) expr -> expr . + expr
    (61) expr -> expr . @ TYPEID . OBJECTID ( parametros )
    (62) expr -> expr . . OBJECTID ( parametros )
    (63) expr -> expr . @ TYPEID . OBJECTID ( )
    (64) expr -> expr . . OBJECTID ( )
    =               reduce using rule 33 (expr -> expr < expr .)
    LE              reduce using rule 33 (expr -> expr < expr .)
    <               reduce using rule 33 (expr -> expr < expr .)
    ;               reduce using rule 33 (expr -> expr < expr .)
    )               reduce using rule 33 (expr -> expr < expr .)
    OF              reduce using rule 33 (expr -> expr < expr .)
    LOOP            reduce using rule 33 (expr -> expr < expr .)
    THEN            reduce using rule 33 (expr -> expr < expr .)
    ,               reduce using rule 33 (expr -> expr < expr .)
    }               reduce using rule 33 (expr -> expr < expr .)
    POOL            reduce using rule 33 (expr -> expr < expr .)
    ELSE            reduce using rule 33 (expr -> expr < expr .)
    IN              reduce using rule 33 (expr -> expr < expr .)
    FI              reduce using rule 33 (expr -> expr < expr .)
    /               shift and go to state 70
    *               shift and go to state 71
    -               shift and go to state 72
    +               shift and go to state 73
    @               shift and go to state 74
    .               shift and go to state 75


state 105

    (35) expr -> expr / expr .
    (31) expr -> expr . = expr
    (32) expr -> expr . LE expr
    (33) expr -> expr . < expr
    (35) expr -> expr . / expr
    (36) expr -> expr . * expr
    (37) expr -> expr . - expr
    (38) expr -> expr . + expr
    (61) expr -> expr . @ TYPEID . OBJECTID ( parametros )
    (62) expr -> expr . . OBJECTID ( parametros )
    (63) expr -> expr . @ TYPEID . OBJECTID ( )
    (64) expr -> expr . . OBJECTID ( )
    =               reduce using rule 35 (expr -> expr / expr .)
    LE              reduce using rule 35 (expr -> expr / expr .)
    <               reduce using rule 35 (expr -> expr / expr .)
    /               reduce using rule 35 (expr -> expr / expr .)
    *               reduce using rule 35 (expr -> expr / expr .)
    -               reduce using rule 35 (expr -> expr / expr .)
    +               reduce using rule 35 (expr -> expr / expr .)
    ;               reduce using rule 35 (expr -> expr / expr .)
    )               reduce using rule 35 (expr -> expr / expr .)
    OF              reduce using rule 35 (expr -> expr / expr .)
    LOOP            reduce using rule 35 (expr -> expr / expr .)
    THEN            reduce using rule 35 (expr -> expr / expr .)
    ,               reduce using rule 35 (expr -> expr / expr .)
    }               reduce using rule 35 (expr -> expr / expr .)
    POOL            reduce using rule 35 (expr -> expr / expr .)
    ELSE            reduce using rule 35 (expr -> expr / expr .)
    IN              reduce using rule 35 (expr -> expr / expr .)
    FI              reduce using rule 35 (expr -> expr / expr .)
    @               shift and go to state 74
    .               shift and go to state 75


state 106

    (36) expr -> expr * expr .
    (31) expr -> expr . = expr
    (32) expr -> expr . LE expr
    (33) expr -> expr . < expr
    (35) expr -> expr . / expr
    (36) expr -> expr . * expr
    (37) expr -> expr . - expr
    (38) expr -> expr . + expr
    (61) expr -> expr . @ TYPEID . OBJECTID ( parametros )
    (62) expr -> expr . . OBJECTID ( parametros )
    (63) expr -> expr . @ TYPEID . OBJECTID ( )
    (64) expr -> expr . . OBJECTID ( )
    =               reduce using rule 36 (expr -> expr * expr .)
    LE              reduce using rule 36 (expr -> expr * expr .)
    <               reduce using rule 36 (expr -> expr * expr .)
    /               reduce using rule 36 (expr -> expr * expr .)
    *               reduce using rule 36 (expr -> expr * expr .)
    -               reduce using rule 36 (expr -> expr * expr .)
    +               reduce using rule 36 (expr -> expr * expr .)
    ;               reduce using rule 36 (expr -> expr * expr .)
    )               reduce using rule 36 (expr -> expr * expr .)
    OF              reduce using rule 36 (expr -> expr * expr .)
    LOOP            reduce using rule 36 (expr -> expr * expr .)
    THEN            reduce using rule 36 (expr -> expr * expr .)
    ,               reduce using rule 36 (expr -> expr * expr .)
    }               reduce using rule 36 (expr -> expr * expr .)
    POOL            reduce using rule 36 (expr -> expr * expr .)
    ELSE            reduce using rule 36 (expr -> expr * expr .)
    IN              reduce using rule 36 (expr -> expr * expr .)
    FI              reduce using rule 36 (expr -> expr * expr .)
    @               shift and go to state 74
    .               shift and go to state 75


state 107

    (37) expr -> expr - expr .
    (31) expr -> expr . = expr
    (32) expr -> expr . LE expr
    (33) expr -> expr . < expr
    (35) expr -> expr . / expr
    (36) expr -> expr . * expr
    (37) expr -> expr . - expr
    (38) expr -> expr . + expr
    (61) expr -> expr . @ TYPEID . OBJECTID ( parametros )
    (62) expr -> expr . . OBJECTID ( parametros )
    (63) expr -> expr . @ TYPEID . OBJECTID ( )
    (64) expr -> expr . . OBJECTID ( )
    =               reduce using rule 37 (expr -> expr - expr .)
    LE              reduce using rule 37 (expr -> expr - expr .)
    <               reduce using rule 37 (expr -> expr - expr .)
    -               reduce using rule 37 (expr -> expr - expr .)
    +               reduce using rule 37 (expr -> expr - expr .)
    ;               reduce using rule 37 (expr -> expr - expr .)
    )               reduce using rule 37 (expr -> expr - expr .)
    OF              reduce using rule 37 (expr -> expr - expr .)
    LOOP            reduce using rule 37 (expr -> expr - expr .)
    THEN            reduce using rule 37 (expr -> expr - expr .)
    ,               reduce using rule 37 (expr -> expr - expr .)
    }               reduce using rule 37 (expr -> expr - expr .)
    POOL            reduce using rule 37 (expr -> expr - expr .)
    ELSE            reduce using rule 37 (expr -> expr - expr .)
    IN              reduce using rule 37 (expr -> expr - expr .)
    FI              reduce using rule 37 (expr -> expr - expr .)
    /               shift and go to state 70
    *               shift and go to state 71
    @               shift and go to state 74
    .               shift and go to state 75


state 108

    (38) expr -> expr + expr .
    (31) expr -> expr . = expr
    (32) expr -> expr . LE expr
    (33) expr -> expr . < expr
    (35) expr -> expr . / expr
    (36) expr -> expr . * expr
    (37) expr -> expr . - expr
    (38) expr -> expr . + expr
    (61) expr -> expr . @ TYPEID . OBJECTID ( parametros )
    (62) expr -> expr . . OBJECTID ( parametros )
    (63) expr -> expr . @ TYPEID . OBJECTID ( )
    (64) expr -> expr . . OBJECTID ( )
    =               reduce using rule 38 (expr -> expr + expr .)
    LE              reduce using rule 38 (expr -> expr + expr .)
    <               reduce using rule 38 (expr -> expr + expr .)
    -               reduce using rule 38 (expr -> expr + expr .)
    +               reduce using rule 38 (expr -> expr + expr .)
    ;               reduce using rule 38 (expr -> expr + expr .)
    )               reduce using rule 38 (expr -> expr + expr .)
    OF              reduce using rule 38 (expr -> expr + expr .)
    LOOP            reduce using rule 38 (expr -> expr + expr .)
    THEN            reduce using rule 38 (expr -> expr + expr .)
    ,               reduce using rule 38 (expr -> expr + expr .)
    }               reduce using rule 38 (expr -> expr + expr .)
    POOL            reduce using rule 38 (expr -> expr + expr .)
    ELSE            reduce using rule 38 (expr -> expr + expr .)
    IN              reduce using rule 38 (expr -> expr + expr .)
    FI              reduce using rule 38 (expr -> expr + expr .)
    /               shift and go to state 70
    *               shift and go to state 71
    @               shift and go to state 74
    .               shift and go to state 75


state 109

    (61) expr -> expr @ TYPEID . . OBJECTID ( parametros )
    (63) expr -> expr @ TYPEID . . OBJECTID ( )
    .               shift and go to state 129


state 110

    (62) expr -> expr . OBJECTID . ( parametros )
    (64) expr -> expr . OBJECTID . ( )
    (               shift and go to state 130


state 111

    (28) expr -> ( expr ) .
    =               reduce using rule 28 (expr -> ( expr ) .)
    LE              reduce using rule 28 (expr -> ( expr ) .)
    <               reduce using rule 28 (expr -> ( expr ) .)
    /               reduce using rule 28 (expr -> ( expr ) .)
    *               reduce using rule 28 (expr -> ( expr ) .)
    -               reduce using rule 28 (expr -> ( expr ) .)
    +               reduce using rule 28 (expr -> ( expr ) .)
    @               reduce using rule 28 (expr -> ( expr ) .)
    .               reduce using rule 28 (expr -> ( expr ) .)
    ;               reduce using rule 28 (expr -> ( expr ) .)
    )               reduce using rule 28 (expr -> ( expr ) .)
    OF              reduce using rule 28 (expr -> ( expr ) .)
    LOOP            reduce using rule 28 (expr -> ( expr ) .)
    THEN            reduce using rule 28 (expr -> ( expr ) .)
    ,               reduce using rule 28 (expr -> ( expr ) .)
    }               reduce using rule 28 (expr -> ( expr ) .)
    POOL            reduce using rule 28 (expr -> ( expr ) .)
    ELSE            reduce using rule 28 (expr -> ( expr ) .)
    IN              reduce using rule 28 (expr -> ( expr ) .)
    FI              reduce using rule 28 (expr -> ( expr ) .)


state 112

    (43) expr -> CASE expr OF . darrowlist ESAC
    (44) expr -> CASE expr OF . error ESAC
    (77) darrowlist -> . darrowlist OBJECTID : TYPEID DARROW expr ;
    (78) darrowlist -> . OBJECTID : TYPEID DARROW error ;
    (79) darrowlist -> . OBJECTID : TYPEID DARROW expr ;
    error           shift and go to state 132
    OBJECTID        shift and go to state 133

    darrowlist                     shift and go to state 131

state 113

    (45) expr -> CASE error OF . darrowlist ESAC
    (77) darrowlist -> . darrowlist OBJECTID : TYPEID DARROW expr ;
    (78) darrowlist -> . OBJECTID : TYPEID DARROW error ;
    (79) darrowlist -> . OBJECTID : TYPEID DARROW expr ;
    OBJECTID        shift and go to state 133

    darrowlist                     shift and go to state 134

state 114

    (46) expr -> LET OBJECTID : . TYPEID expr IN error
    (47) expr -> LET OBJECTID : . TYPEID error IN expr
    (48) expr -> LET OBJECTID : . TYPEID inicializaciones IN expr
    (49) expr -> LET OBJECTID : . TYPEID ASSIGN expr IN expr
    (50) expr -> LET OBJECTID : . TYPEID IN expr
    TYPEID          shift and go to state 135


state 115

    (51) expr -> { exprs } .
    =               reduce using rule 51 (expr -> { exprs } .)
    LE              reduce using rule 51 (expr -> { exprs } .)
    <               reduce using rule 51 (expr -> { exprs } .)
    /               reduce using rule 51 (expr -> { exprs } .)
    *               reduce using rule 51 (expr -> { exprs } .)
    -               reduce using rule 51 (expr -> { exprs } .)
    +               reduce using rule 51 (expr -> { exprs } .)
    @               reduce using rule 51 (expr -> { exprs } .)
    .               reduce using rule 51 (expr -> { exprs } .)
    ;               reduce using rule 51 (expr -> { exprs } .)
    )               reduce using rule 51 (expr -> { exprs } .)
    OF              reduce using rule 51 (expr -> { exprs } .)
    LOOP            reduce using rule 51 (expr -> { exprs } .)
    THEN            reduce using rule 51 (expr -> { exprs } .)
    ,               reduce using rule 51 (expr -> { exprs } .)
    }               reduce using rule 51 (expr -> { exprs } .)
    POOL            reduce using rule 51 (expr -> { exprs } .)
    ELSE            reduce using rule 51 (expr -> { exprs } .)
    IN              reduce using rule 51 (expr -> { exprs } .)
    FI              reduce using rule 51 (expr -> { exprs } .)


state 116

    (70) exprs -> exprs expr . ;
    (31) expr -> expr . = expr
    (32) expr -> expr . LE expr
    (33) expr -> expr . < expr
    (35) expr -> expr . / expr
    (36) expr -> expr . * expr
    (37) expr -> expr . - expr
    (38) expr -> expr . + expr
    (61) expr -> expr . @ TYPEID . OBJECTID ( parametros )
    (62) expr -> expr . . OBJECTID ( parametros )
    (63) expr -> expr . @ TYPEID . OBJECTID ( )
    (64) expr -> expr . . OBJECTID ( )
    ;               shift and go to state 136
    =               shift and go to state 67
    LE              shift and go to state 68
    <               shift and go to state 69
    /               shift and go to state 70
    *               shift and go to state 71
    -               shift and go to state 72
    +               shift and go to state 73
    @               shift and go to state 74
    .               shift and go to state 75


state 117

    (69) exprs -> error ; .
    }               reduce using rule 69 (exprs -> error ; .)
    BOOL_CONST      reduce using rule 69 (exprs -> error ; .)
    error           reduce using rule 69 (exprs -> error ; .)
    STR_CONST       reduce using rule 69 (exprs -> error ; .)
    INT_CONST       reduce using rule 69 (exprs -> error ; .)
    OBJECTID        reduce using rule 69 (exprs -> error ; .)
    (               reduce using rule 69 (exprs -> error ; .)
    NOT             reduce using rule 69 (exprs -> error ; .)
    ~               reduce using rule 69 (exprs -> error ; .)
    ISVOID          reduce using rule 69 (exprs -> error ; .)
    NEW             reduce using rule 69 (exprs -> error ; .)
    CASE            reduce using rule 69 (exprs -> error ; .)
    LET             reduce using rule 69 (exprs -> error ; .)
    {               reduce using rule 69 (exprs -> error ; .)
    WHILE           reduce using rule 69 (exprs -> error ; .)
    IF              reduce using rule 69 (exprs -> error ; .)


state 118

    (71) exprs -> expr ; .
    }               reduce using rule 71 (exprs -> expr ; .)
    BOOL_CONST      reduce using rule 71 (exprs -> expr ; .)
    error           reduce using rule 71 (exprs -> expr ; .)
    STR_CONST       reduce using rule 71 (exprs -> expr ; .)
    INT_CONST       reduce using rule 71 (exprs -> expr ; .)
    OBJECTID        reduce using rule 71 (exprs -> expr ; .)
    (               reduce using rule 71 (exprs -> expr ; .)
    NOT             reduce using rule 71 (exprs -> expr ; .)
    ~               reduce using rule 71 (exprs -> expr ; .)
    ISVOID          reduce using rule 71 (exprs -> expr ; .)
    NEW             reduce using rule 71 (exprs -> expr ; .)
    CASE            reduce using rule 71 (exprs -> expr ; .)
    LET             reduce using rule 71 (exprs -> expr ; .)
    {               reduce using rule 71 (exprs -> expr ; .)
    WHILE           reduce using rule 71 (exprs -> expr ; .)
    IF              reduce using rule 71 (exprs -> expr ; .)


state 119

    (52) expr -> WHILE expr LOOP . error POOL
    (55) expr -> WHILE expr LOOP . expr POOL
    (23) expr -> . BOOL_CONST
    (24) expr -> . error INT_CONST
    (25) expr -> . STR_CONST
    (26) expr -> . INT_CONST
    (27) expr -> . OBJECTID
    (28) expr -> . ( expr )
    (29) expr -> . NOT error
    (30) expr -> . NOT expr
    (31) expr -> . expr = expr
    (32) expr -> . expr LE expr
    (33) expr -> . expr < expr
    (34) expr -> . ~ expr
    (35) expr -> . expr / expr
    (36) expr -> . expr * expr
    (37) expr -> . expr - expr
    (38) expr -> . expr + expr
    (39) expr -> . ISVOID error
    (40) expr -> . ISVOID expr
    (41) expr -> . error TYPEID
    (42) expr -> . NEW TYPEID
    (43) expr -> . CASE expr OF darrowlist ESAC
    (44) expr -> . CASE expr OF error ESAC
    (45) expr -> . CASE error OF darrowlist ESAC
    (46) expr -> . LET OBJECTID : TYPEID expr IN error
    (47) expr -> . LET OBJECTID : TYPEID error IN expr
    (48) expr -> . LET OBJECTID : TYPEID inicializaciones IN expr
    (49) expr -> . LET OBJECTID : TYPEID ASSIGN expr IN expr
    (50) expr -> . LET OBJECTID : TYPEID IN expr
    (51) expr -> . { exprs }
    (52) expr -> . WHILE expr LOOP error POOL
    (53) expr -> . WHILE error LOOP expr POOL
    (54) expr -> . WHILE error LOOP error POOL
    (55) expr -> . WHILE expr LOOP expr POOL
    (56) expr -> . IF expr THEN expr ELSE expr FI
    (57) expr -> . IF error THEN expr ELSE expr FI
    (58) expr -> . IF expr THEN error FI
    (59) expr -> . OBJECTID ( parametros )
    (60) expr -> . OBJECTID ( )
    (61) expr -> . expr @ TYPEID . OBJECTID ( parametros )
    (62) expr -> . expr . OBJECTID ( parametros )
    (63) expr -> . expr @ TYPEID . OBJECTID ( )
    (64) expr -> . expr . OBJECTID ( )
    (65) expr -> . OBJECTID ASSIGN error
    (66) expr -> . OBJECTID ASSIGN expr
    error           shift and go to state 138
    BOOL_CONST      shift and go to state 45
    STR_CONST       shift and go to state 47
    INT_CONST       shift and go to state 46
    OBJECTID        shift and go to state 42
    (               shift and go to state 48
    NOT             shift and go to state 49
    ~               shift and go to state 50
    ISVOID          shift and go to state 51
    NEW             shift and go to state 52
    CASE            shift and go to state 53
    LET             shift and go to state 54
    {               shift and go to state 55
    WHILE           shift and go to state 56
    IF              shift and go to state 57

    expr                           shift and go to state 137

state 120

    (53) expr -> WHILE error LOOP . expr POOL
    (54) expr -> WHILE error LOOP . error POOL
    (23) expr -> . BOOL_CONST
    (24) expr -> . error INT_CONST
    (25) expr -> . STR_CONST
    (26) expr -> . INT_CONST
    (27) expr -> . OBJECTID
    (28) expr -> . ( expr )
    (29) expr -> . NOT error
    (30) expr -> . NOT expr
    (31) expr -> . expr = expr
    (32) expr -> . expr LE expr
    (33) expr -> . expr < expr
    (34) expr -> . ~ expr
    (35) expr -> . expr / expr
    (36) expr -> . expr * expr
    (37) expr -> . expr - expr
    (38) expr -> . expr + expr
    (39) expr -> . ISVOID error
    (40) expr -> . ISVOID expr
    (41) expr -> . error TYPEID
    (42) expr -> . NEW TYPEID
    (43) expr -> . CASE expr OF darrowlist ESAC
    (44) expr -> . CASE expr OF error ESAC
    (45) expr -> . CASE error OF darrowlist ESAC
    (46) expr -> . LET OBJECTID : TYPEID expr IN error
    (47) expr -> . LET OBJECTID : TYPEID error IN expr
    (48) expr -> . LET OBJECTID : TYPEID inicializaciones IN expr
    (49) expr -> . LET OBJECTID : TYPEID ASSIGN expr IN expr
    (50) expr -> . LET OBJECTID : TYPEID IN expr
    (51) expr -> . { exprs }
    (52) expr -> . WHILE expr LOOP error POOL
    (53) expr -> . WHILE error LOOP expr POOL
    (54) expr -> . WHILE error LOOP error POOL
    (55) expr -> . WHILE expr LOOP expr POOL
    (56) expr -> . IF expr THEN expr ELSE expr FI
    (57) expr -> . IF error THEN expr ELSE expr FI
    (58) expr -> . IF expr THEN error FI
    (59) expr -> . OBJECTID ( parametros )
    (60) expr -> . OBJECTID ( )
    (61) expr -> . expr @ TYPEID . OBJECTID ( parametros )
    (62) expr -> . expr . OBJECTID ( parametros )
    (63) expr -> . expr @ TYPEID . OBJECTID ( )
    (64) expr -> . expr . OBJECTID ( )
    (65) expr -> . OBJECTID ASSIGN error
    (66) expr -> . OBJECTID ASSIGN expr
    error           shift and go to state 139
    BOOL_CONST      shift and go to state 45
    STR_CONST       shift and go to state 47
    INT_CONST       shift and go to state 46
    OBJECTID        shift and go to state 42
    (               shift and go to state 48
    NOT             shift and go to state 49
    ~               shift and go to state 50
    ISVOID          shift and go to state 51
    NEW             shift and go to state 52
    CASE            shift and go to state 53
    LET             shift and go to state 54
    {               shift and go to state 55
    WHILE           shift and go to state 56
    IF              shift and go to state 57

    expr                           shift and go to state 140

state 121

    (56) expr -> IF expr THEN . expr ELSE expr FI
    (58) expr -> IF expr THEN . error FI
    (23) expr -> . BOOL_CONST
    (24) expr -> . error INT_CONST
    (25) expr -> . STR_CONST
    (26) expr -> . INT_CONST
    (27) expr -> . OBJECTID
    (28) expr -> . ( expr )
    (29) expr -> . NOT error
    (30) expr -> . NOT expr
    (31) expr -> . expr = expr
    (32) expr -> . expr LE expr
    (33) expr -> . expr < expr
    (34) expr -> . ~ expr
    (35) expr -> . expr / expr
    (36) expr -> . expr * expr
    (37) expr -> . expr - expr
    (38) expr -> . expr + expr
    (39) expr -> . ISVOID error
    (40) expr -> . ISVOID expr
    (41) expr -> . error TYPEID
    (42) expr -> . NEW TYPEID
    (43) expr -> . CASE expr OF darrowlist ESAC
    (44) expr -> . CASE expr OF error ESAC
    (45) expr -> . CASE error OF darrowlist ESAC
    (46) expr -> . LET OBJECTID : TYPEID expr IN error
    (47) expr -> . LET OBJECTID : TYPEID error IN expr
    (48) expr -> . LET OBJECTID : TYPEID inicializaciones IN expr
    (49) expr -> . LET OBJECTID : TYPEID ASSIGN expr IN expr
    (50) expr -> . LET OBJECTID : TYPEID IN expr
    (51) expr -> . { exprs }
    (52) expr -> . WHILE expr LOOP error POOL
    (53) expr -> . WHILE error LOOP expr POOL
    (54) expr -> . WHILE error LOOP error POOL
    (55) expr -> . WHILE expr LOOP expr POOL
    (56) expr -> . IF expr THEN expr ELSE expr FI
    (57) expr -> . IF error THEN expr ELSE expr FI
    (58) expr -> . IF expr THEN error FI
    (59) expr -> . OBJECTID ( parametros )
    (60) expr -> . OBJECTID ( )
    (61) expr -> . expr @ TYPEID . OBJECTID ( parametros )
    (62) expr -> . expr . OBJECTID ( parametros )
    (63) expr -> . expr @ TYPEID . OBJECTID ( )
    (64) expr -> . expr . OBJECTID ( )
    (65) expr -> . OBJECTID ASSIGN error
    (66) expr -> . OBJECTID ASSIGN expr
    error           shift and go to state 142
    BOOL_CONST      shift and go to state 45
    STR_CONST       shift and go to state 47
    INT_CONST       shift and go to state 46
    OBJECTID        shift and go to state 42
    (               shift and go to state 48
    NOT             shift and go to state 49
    ~               shift and go to state 50
    ISVOID          shift and go to state 51
    NEW             shift and go to state 52
    CASE            shift and go to state 53
    LET             shift and go to state 54
    {               shift and go to state 55
    WHILE           shift and go to state 56
    IF              shift and go to state 57

    expr                           shift and go to state 141

state 122

    (57) expr -> IF error THEN . expr ELSE expr FI
    (23) expr -> . BOOL_CONST
    (24) expr -> . error INT_CONST
    (25) expr -> . STR_CONST
    (26) expr -> . INT_CONST
    (27) expr -> . OBJECTID
    (28) expr -> . ( expr )
    (29) expr -> . NOT error
    (30) expr -> . NOT expr
    (31) expr -> . expr = expr
    (32) expr -> . expr LE expr
    (33) expr -> . expr < expr
    (34) expr -> . ~ expr
    (35) expr -> . expr / expr
    (36) expr -> . expr * expr
    (37) expr -> . expr - expr
    (38) expr -> . expr + expr
    (39) expr -> . ISVOID error
    (40) expr -> . ISVOID expr
    (41) expr -> . error TYPEID
    (42) expr -> . NEW TYPEID
    (43) expr -> . CASE expr OF darrowlist ESAC
    (44) expr -> . CASE expr OF error ESAC
    (45) expr -> . CASE error OF darrowlist ESAC
    (46) expr -> . LET OBJECTID : TYPEID expr IN error
    (47) expr -> . LET OBJECTID : TYPEID error IN expr
    (48) expr -> . LET OBJECTID : TYPEID inicializaciones IN expr
    (49) expr -> . LET OBJECTID : TYPEID ASSIGN expr IN expr
    (50) expr -> . LET OBJECTID : TYPEID IN expr
    (51) expr -> . { exprs }
    (52) expr -> . WHILE expr LOOP error POOL
    (53) expr -> . WHILE error LOOP expr POOL
    (54) expr -> . WHILE error LOOP error POOL
    (55) expr -> . WHILE expr LOOP expr POOL
    (56) expr -> . IF expr THEN expr ELSE expr FI
    (57) expr -> . IF error THEN expr ELSE expr FI
    (58) expr -> . IF expr THEN error FI
    (59) expr -> . OBJECTID ( parametros )
    (60) expr -> . OBJECTID ( )
    (61) expr -> . expr @ TYPEID . OBJECTID ( parametros )
    (62) expr -> . expr . OBJECTID ( parametros )
    (63) expr -> . expr @ TYPEID . OBJECTID ( )
    (64) expr -> . expr . OBJECTID ( )
    (65) expr -> . OBJECTID ASSIGN error
    (66) expr -> . OBJECTID ASSIGN expr
    BOOL_CONST      shift and go to state 45
    error           shift and go to state 77
    STR_CONST       shift and go to state 47
    INT_CONST       shift and go to state 46
    OBJECTID        shift and go to state 42
    (               shift and go to state 48
    NOT             shift and go to state 49
    ~               shift and go to state 50
    ISVOID          shift and go to state 51
    NEW             shift and go to state 52
    CASE            shift and go to state 53
    LET             shift and go to state 54
    {               shift and go to state 55
    WHILE           shift and go to state 56
    IF              shift and go to state 57

    expr                           shift and go to state 143

state 123

    (15) caracteristica -> OBJECTID ( error ) : TYPEID { . expr }
    (23) expr -> . BOOL_CONST
    (24) expr -> . error INT_CONST
    (25) expr -> . STR_CONST
    (26) expr -> . INT_CONST
    (27) expr -> . OBJECTID
    (28) expr -> . ( expr )
    (29) expr -> . NOT error
    (30) expr -> . NOT expr
    (31) expr -> . expr = expr
    (32) expr -> . expr LE expr
    (33) expr -> . expr < expr
    (34) expr -> . ~ expr
    (35) expr -> . expr / expr
    (36) expr -> . expr * expr
    (37) expr -> . expr - expr
    (38) expr -> . expr + expr
    (39) expr -> . ISVOID error
    (40) expr -> . ISVOID expr
    (41) expr -> . error TYPEID
    (42) expr -> . NEW TYPEID
    (43) expr -> . CASE expr OF darrowlist ESAC
    (44) expr -> . CASE expr OF error ESAC
    (45) expr -> . CASE error OF darrowlist ESAC
    (46) expr -> . LET OBJECTID : TYPEID expr IN error
    (47) expr -> . LET OBJECTID : TYPEID error IN expr
    (48) expr -> . LET OBJECTID : TYPEID inicializaciones IN expr
    (49) expr -> . LET OBJECTID : TYPEID ASSIGN expr IN expr
    (50) expr -> . LET OBJECTID : TYPEID IN expr
    (51) expr -> . { exprs }
    (52) expr -> . WHILE expr LOOP error POOL
    (53) expr -> . WHILE error LOOP expr POOL
    (54) expr -> . WHILE error LOOP error POOL
    (55) expr -> . WHILE expr LOOP expr POOL
    (56) expr -> . IF expr THEN expr ELSE expr FI
    (57) expr -> . IF error THEN expr ELSE expr FI
    (58) expr -> . IF expr THEN error FI
    (59) expr -> . OBJECTID ( parametros )
    (60) expr -> . OBJECTID ( )
    (61) expr -> . expr @ TYPEID . OBJECTID ( parametros )
    (62) expr -> . expr . OBJECTID ( parametros )
    (63) expr -> . expr @ TYPEID . OBJECTID ( )
    (64) expr -> . expr . OBJECTID ( )
    (65) expr -> . OBJECTID ASSIGN error
    (66) expr -> . OBJECTID ASSIGN expr
    BOOL_CONST      shift and go to state 45
    error           shift and go to state 77
    STR_CONST       shift and go to state 47
    INT_CONST       shift and go to state 46
    OBJECTID        shift and go to state 42
    (               shift and go to state 48
    NOT             shift and go to state 49
    ~               shift and go to state 50
    ISVOID          shift and go to state 51
    NEW             shift and go to state 52
    CASE            shift and go to state 53
    LET             shift and go to state 54
    {               shift and go to state 55
    WHILE           shift and go to state 56
    IF              shift and go to state 57

    expr                           shift and go to state 144

state 124

    (18) caracteristica -> OBJECTID ( ) : TYPEID { error . }
    (24) expr -> error . INT_CONST
    (41) expr -> error . TYPEID
    }               shift and go to state 145
    INT_CONST       shift and go to state 66
    TYPEID          shift and go to state 65


state 125

    (19) caracteristica -> OBJECTID ( ) : TYPEID { expr . }
    (31) expr -> expr . = expr
    (32) expr -> expr . LE expr
    (33) expr -> expr . < expr
    (35) expr -> expr . / expr
    (36) expr -> expr . * expr
    (37) expr -> expr . - expr
    (38) expr -> expr . + expr
    (61) expr -> expr . @ TYPEID . OBJECTID ( parametros )
    (62) expr -> expr . . OBJECTID ( parametros )
    (63) expr -> expr . @ TYPEID . OBJECTID ( )
    (64) expr -> expr . . OBJECTID ( )
    }               shift and go to state 146
    =               shift and go to state 67
    LE              shift and go to state 68
    <               shift and go to state 69
    /               shift and go to state 70
    *               shift and go to state 71
    -               shift and go to state 72
    +               shift and go to state 73
    @               shift and go to state 74
    .               shift and go to state 75


state 126

    (16) caracteristica -> OBJECTID ( formales ) : TYPEID { . error }
    (17) caracteristica -> OBJECTID ( formales ) : TYPEID { . expr }
    (23) expr -> . BOOL_CONST
    (24) expr -> . error INT_CONST
    (25) expr -> . STR_CONST
    (26) expr -> . INT_CONST
    (27) expr -> . OBJECTID
    (28) expr -> . ( expr )
    (29) expr -> . NOT error
    (30) expr -> . NOT expr
    (31) expr -> . expr = expr
    (32) expr -> . expr LE expr
    (33) expr -> . expr < expr
    (34) expr -> . ~ expr
    (35) expr -> . expr / expr
    (36) expr -> . expr * expr
    (37) expr -> . expr - expr
    (38) expr -> . expr + expr
    (39) expr -> . ISVOID error
    (40) expr -> . ISVOID expr
    (41) expr -> . error TYPEID
    (42) expr -> . NEW TYPEID
    (43) expr -> . CASE expr OF darrowlist ESAC
    (44) expr -> . CASE expr OF error ESAC
    (45) expr -> . CASE error OF darrowlist ESAC
    (46) expr -> . LET OBJECTID : TYPEID expr IN error
    (47) expr -> . LET OBJECTID : TYPEID error IN expr
    (48) expr -> . LET OBJECTID : TYPEID inicializaciones IN expr
    (49) expr -> . LET OBJECTID : TYPEID ASSIGN expr IN expr
    (50) expr -> . LET OBJECTID : TYPEID IN expr
    (51) expr -> . { exprs }
    (52) expr -> . WHILE expr LOOP error POOL
    (53) expr -> . WHILE error LOOP expr POOL
    (54) expr -> . WHILE error LOOP error POOL
    (55) expr -> . WHILE expr LOOP expr POOL
    (56) expr -> . IF expr THEN expr ELSE expr FI
    (57) expr -> . IF error THEN expr ELSE expr FI
    (58) expr -> . IF expr THEN error FI
    (59) expr -> . OBJECTID ( parametros )
    (60) expr -> . OBJECTID ( )
    (61) expr -> . expr @ TYPEID . OBJECTID ( parametros )
    (62) expr -> . expr . OBJECTID ( parametros )
    (63) expr -> . expr @ TYPEID . OBJECTID ( )
    (64) expr -> . expr . OBJECTID ( )
    (65) expr -> . OBJECTID ASSIGN error
    (66) expr -> . OBJECTID ASSIGN expr
    error           shift and go to state 147
    BOOL_CONST      shift and go to state 45
    STR_CONST       shift and go to state 47
    INT_CONST       shift and go to state 46
    OBJECTID        shift and go to state 42
    (               shift and go to state 48
    NOT             shift and go to state 49
    ~               shift and go to state 50
    ISVOID          shift and go to state 51
    NEW             shift and go to state 52
    CASE            shift and go to state 53
    LET             shift and go to state 54
    {               shift and go to state 55
    WHILE           shift and go to state 56
    IF              shift and go to state 57

    expr                           shift and go to state 148

state 127

    (59) expr -> OBJECTID ( parametros ) .
    =               reduce using rule 59 (expr -> OBJECTID ( parametros ) .)
    LE              reduce using rule 59 (expr -> OBJECTID ( parametros ) .)
    <               reduce using rule 59 (expr -> OBJECTID ( parametros ) .)
    /               reduce using rule 59 (expr -> OBJECTID ( parametros ) .)
    *               reduce using rule 59 (expr -> OBJECTID ( parametros ) .)
    -               reduce using rule 59 (expr -> OBJECTID ( parametros ) .)
    +               reduce using rule 59 (expr -> OBJECTID ( parametros ) .)
    @               reduce using rule 59 (expr -> OBJECTID ( parametros ) .)
    .               reduce using rule 59 (expr -> OBJECTID ( parametros ) .)
    ;               reduce using rule 59 (expr -> OBJECTID ( parametros ) .)
    )               reduce using rule 59 (expr -> OBJECTID ( parametros ) .)
    OF              reduce using rule 59 (expr -> OBJECTID ( parametros ) .)
    LOOP            reduce using rule 59 (expr -> OBJECTID ( parametros ) .)
    THEN            reduce using rule 59 (expr -> OBJECTID ( parametros ) .)
    ,               reduce using rule 59 (expr -> OBJECTID ( parametros ) .)
    }               reduce using rule 59 (expr -> OBJECTID ( parametros ) .)
    POOL            reduce using rule 59 (expr -> OBJECTID ( parametros ) .)
    ELSE            reduce using rule 59 (expr -> OBJECTID ( parametros ) .)
    IN              reduce using rule 59 (expr -> OBJECTID ( parametros ) .)
    FI              reduce using rule 59 (expr -> OBJECTID ( parametros ) .)


state 128

    (67) parametros -> parametros , . expr
    (23) expr -> . BOOL_CONST
    (24) expr -> . error INT_CONST
    (25) expr -> . STR_CONST
    (26) expr -> . INT_CONST
    (27) expr -> . OBJECTID
    (28) expr -> . ( expr )
    (29) expr -> . NOT error
    (30) expr -> . NOT expr
    (31) expr -> . expr = expr
    (32) expr -> . expr LE expr
    (33) expr -> . expr < expr
    (34) expr -> . ~ expr
    (35) expr -> . expr / expr
    (36) expr -> . expr * expr
    (37) expr -> . expr - expr
    (38) expr -> . expr + expr
    (39) expr -> . ISVOID error
    (40) expr -> . ISVOID expr
    (41) expr -> . error TYPEID
    (42) expr -> . NEW TYPEID
    (43) expr -> . CASE expr OF darrowlist ESAC
    (44) expr -> . CASE expr OF error ESAC
    (45) expr -> . CASE error OF darrowlist ESAC
    (46) expr -> . LET OBJECTID : TYPEID expr IN error
    (47) expr -> . LET OBJECTID : TYPEID error IN expr
    (48) expr -> . LET OBJECTID : TYPEID inicializaciones IN expr
    (49) expr -> . LET OBJECTID : TYPEID ASSIGN expr IN expr
    (50) expr -> . LET OBJECTID : TYPEID IN expr
    (51) expr -> . { exprs }
    (52) expr -> . WHILE expr LOOP error POOL
    (53) expr -> . WHILE error LOOP expr POOL
    (54) expr -> . WHILE error LOOP error POOL
    (55) expr -> . WHILE expr LOOP expr POOL
    (56) expr -> . IF expr THEN expr ELSE expr FI
    (57) expr -> . IF error THEN expr ELSE expr FI
    (58) expr -> . IF expr THEN error FI
    (59) expr -> . OBJECTID ( parametros )
    (60) expr -> . OBJECTID ( )
    (61) expr -> . expr @ TYPEID . OBJECTID ( parametros )
    (62) expr -> . expr . OBJECTID ( parametros )
    (63) expr -> . expr @ TYPEID . OBJECTID ( )
    (64) expr -> . expr . OBJECTID ( )
    (65) expr -> . OBJECTID ASSIGN error
    (66) expr -> . OBJECTID ASSIGN expr
    BOOL_CONST      shift and go to state 45
    error           shift and go to state 77
    STR_CONST       shift and go to state 47
    INT_CONST       shift and go to state 46
    OBJECTID        shift and go to state 42
    (               shift and go to state 48
    NOT             shift and go to state 49
    ~               shift and go to state 50
    ISVOID          shift and go to state 51
    NEW             shift and go to state 52
    CASE            shift and go to state 53
    LET             shift and go to state 54
    {               shift and go to state 55
    WHILE           shift and go to state 56
    IF              shift and go to state 57

    expr                           shift and go to state 149

state 129

    (61) expr -> expr @ TYPEID . . OBJECTID ( parametros )
    (63) expr -> expr @ TYPEID . . OBJECTID ( )
    OBJECTID        shift and go to state 150


state 130

    (62) expr -> expr . OBJECTID ( . parametros )
    (64) expr -> expr . OBJECTID ( . )
    (67) parametros -> . parametros , expr
    (68) parametros -> . expr
    (23) expr -> . BOOL_CONST
    (24) expr -> . error INT_CONST
    (25) expr -> . STR_CONST
    (26) expr -> . INT_CONST
    (27) expr -> . OBJECTID
    (28) expr -> . ( expr )
    (29) expr -> . NOT error
    (30) expr -> . NOT expr
    (31) expr -> . expr = expr
    (32) expr -> . expr LE expr
    (33) expr -> . expr < expr
    (34) expr -> . ~ expr
    (35) expr -> . expr / expr
    (36) expr -> . expr * expr
    (37) expr -> . expr - expr
    (38) expr -> . expr + expr
    (39) expr -> . ISVOID error
    (40) expr -> . ISVOID expr
    (41) expr -> . error TYPEID
    (42) expr -> . NEW TYPEID
    (43) expr -> . CASE expr OF darrowlist ESAC
    (44) expr -> . CASE expr OF error ESAC
    (45) expr -> . CASE error OF darrowlist ESAC
    (46) expr -> . LET OBJECTID : TYPEID expr IN error
    (47) expr -> . LET OBJECTID : TYPEID error IN expr
    (48) expr -> . LET OBJECTID : TYPEID inicializaciones IN expr
    (49) expr -> . LET OBJECTID : TYPEID ASSIGN expr IN expr
    (50) expr -> . LET OBJECTID : TYPEID IN expr
    (51) expr -> . { exprs }
    (52) expr -> . WHILE expr LOOP error POOL
    (53) expr -> . WHILE error LOOP expr POOL
    (54) expr -> . WHILE error LOOP error POOL
    (55) expr -> . WHILE expr LOOP expr POOL
    (56) expr -> . IF expr THEN expr ELSE expr FI
    (57) expr -> . IF error THEN expr ELSE expr FI
    (58) expr -> . IF expr THEN error FI
    (59) expr -> . OBJECTID ( parametros )
    (60) expr -> . OBJECTID ( )
    (61) expr -> . expr @ TYPEID . OBJECTID ( parametros )
    (62) expr -> . expr . OBJECTID ( parametros )
    (63) expr -> . expr @ TYPEID . OBJECTID ( )
    (64) expr -> . expr . OBJECTID ( )
    (65) expr -> . OBJECTID ASSIGN error
    (66) expr -> . OBJECTID ASSIGN expr
    )               shift and go to state 152
    BOOL_CONST      shift and go to state 45
    error           shift and go to state 77
    STR_CONST       shift and go to state 47
    INT_CONST       shift and go to state 46
    OBJECTID        shift and go to state 42
    (               shift and go to state 48
    NOT             shift and go to state 49
    ~               shift and go to state 50
    ISVOID          shift and go to state 51
    NEW             shift and go to state 52
    CASE            shift and go to state 53
    LET             shift and go to state 54
    {               shift and go to state 55
    WHILE           shift and go to state 56
    IF              shift and go to state 57

    expr                           shift and go to state 99
    parametros                     shift and go to state 151

state 131

    (43) expr -> CASE expr OF darrowlist . ESAC
    (77) darrowlist -> darrowlist . OBJECTID : TYPEID DARROW expr ;
    ESAC            shift and go to state 153
    OBJECTID        shift and go to state 154


state 132

    (44) expr -> CASE expr OF error . ESAC
    ESAC            shift and go to state 155


state 133

    (78) darrowlist -> OBJECTID . : TYPEID DARROW error ;
    (79) darrowlist -> OBJECTID . : TYPEID DARROW expr ;
    :               shift and go to state 156


state 134

    (45) expr -> CASE error OF darrowlist . ESAC
    (77) darrowlist -> darrowlist . OBJECTID : TYPEID DARROW expr ;
    ESAC            shift and go to state 157
    OBJECTID        shift and go to state 154


state 135

    (46) expr -> LET OBJECTID : TYPEID . expr IN error
    (47) expr -> LET OBJECTID : TYPEID . error IN expr
    (48) expr -> LET OBJECTID : TYPEID . inicializaciones IN expr
    (49) expr -> LET OBJECTID : TYPEID . ASSIGN expr IN expr
    (50) expr -> LET OBJECTID : TYPEID . IN expr
    (23) expr -> . BOOL_CONST
    (24) expr -> . error INT_CONST
    (25) expr -> . STR_CONST
    (26) expr -> . INT_CONST
    (27) expr -> . OBJECTID
    (28) expr -> . ( expr )
    (29) expr -> . NOT error
    (30) expr -> . NOT expr
    (31) expr -> . expr = expr
    (32) expr -> . expr LE expr
    (33) expr -> . expr < expr
    (34) expr -> . ~ expr
    (35) expr -> . expr / expr
    (36) expr -> . expr * expr
    (37) expr -> . expr - expr
    (38) expr -> . expr + expr
    (39) expr -> . ISVOID error
    (40) expr -> . ISVOID expr
    (41) expr -> . error TYPEID
    (42) expr -> . NEW TYPEID
    (43) expr -> . CASE expr OF darrowlist ESAC
    (44) expr -> . CASE expr OF error ESAC
    (45) expr -> . CASE error OF darrowlist ESAC
    (46) expr -> . LET OBJECTID : TYPEID expr IN error
    (47) expr -> . LET OBJECTID : TYPEID error IN expr
    (48) expr -> . LET OBJECTID : TYPEID inicializaciones IN expr
    (49) expr -> . LET OBJECTID : TYPEID ASSIGN expr IN expr
    (50) expr -> . LET OBJECTID : TYPEID IN expr
    (51) expr -> . { exprs }
    (52) expr -> . WHILE expr LOOP error POOL
    (53) expr -> . WHILE error LOOP expr POOL
    (54) expr -> . WHILE error LOOP error POOL
    (55) expr -> . WHILE expr LOOP expr POOL
    (56) expr -> . IF expr THEN expr ELSE expr FI
    (57) expr -> . IF error THEN expr ELSE expr FI
    (58) expr -> . IF expr THEN error FI
    (59) expr -> . OBJECTID ( parametros )
    (60) expr -> . OBJECTID ( )
    (61) expr -> . expr @ TYPEID . OBJECTID ( parametros )
    (62) expr -> . expr . OBJECTID ( parametros )
    (63) expr -> . expr @ TYPEID . OBJECTID ( )
    (64) expr -> . expr . OBJECTID ( )
    (65) expr -> . OBJECTID ASSIGN error
    (66) expr -> . OBJECTID ASSIGN expr
    (72) inicializaciones -> . inicializaciones , inicializacion
    (73) inicializaciones -> . inicializacion ,
    (74) inicializacion -> . OBJECTID : TYPEID
    (75) inicializacion -> . OBJECTID : TYPEID ASSIGN error
    (76) inicializacion -> . OBJECTID : TYPEID ASSIGN expr
    error           shift and go to state 161
    ASSIGN          shift and go to state 163
    IN              shift and go to state 160
    BOOL_CONST      shift and go to state 45
    STR_CONST       shift and go to state 47
    INT_CONST       shift and go to state 46
    OBJECTID        shift and go to state 158
    (               shift and go to state 48
    NOT             shift and go to state 49
    ~               shift and go to state 50
    ISVOID          shift and go to state 51
    NEW             shift and go to state 52
    CASE            shift and go to state 53
    LET             shift and go to state 54
    {               shift and go to state 55
    WHILE           shift and go to state 56
    IF              shift and go to state 57

    expr                           shift and go to state 159
    inicializaciones               shift and go to state 162
    inicializacion                 shift and go to state 164

state 136

    (70) exprs -> exprs expr ; .
    }               reduce using rule 70 (exprs -> exprs expr ; .)
    BOOL_CONST      reduce using rule 70 (exprs -> exprs expr ; .)
    error           reduce using rule 70 (exprs -> exprs expr ; .)
    STR_CONST       reduce using rule 70 (exprs -> exprs expr ; .)
    INT_CONST       reduce using rule 70 (exprs -> exprs expr ; .)
    OBJECTID        reduce using rule 70 (exprs -> exprs expr ; .)
    (               reduce using rule 70 (exprs -> exprs expr ; .)
    NOT             reduce using rule 70 (exprs -> exprs expr ; .)
    ~               reduce using rule 70 (exprs -> exprs expr ; .)
    ISVOID          reduce using rule 70 (exprs -> exprs expr ; .)
    NEW             reduce using rule 70 (exprs -> exprs expr ; .)
    CASE            reduce using rule 70 (exprs -> exprs expr ; .)
    LET             reduce using rule 70 (exprs -> exprs expr ; .)
    {               reduce using rule 70 (exprs -> exprs expr ; .)
    WHILE           reduce using rule 70 (exprs -> exprs expr ; .)
    IF              reduce using rule 70 (exprs -> exprs expr ; .)


state 137

    (55) expr -> WHILE expr LOOP expr . POOL
    (31) expr -> expr . = expr
    (32) expr -> expr . LE expr
    (33) expr -> expr . < expr
    (35) expr -> expr . / expr
    (36) expr -> expr . * expr
    (37) expr -> expr . - expr
    (38) expr -> expr . + expr
    (61) expr -> expr . @ TYPEID . OBJECTID ( parametros )
    (62) expr -> expr . . OBJECTID ( parametros )
    (63) expr -> expr . @ TYPEID . OBJECTID ( )
    (64) expr -> expr . . OBJECTID ( )
    POOL            shift and go to state 165
    =               shift and go to state 67
    LE              shift and go to state 68
    <               shift and go to state 69
    /               shift and go to state 70
    *               shift and go to state 71
    -               shift and go to state 72
    +               shift and go to state 73
    @               shift and go to state 74
    .               shift and go to state 75


state 138

    (52) expr -> WHILE expr LOOP error . POOL
    (24) expr -> error . INT_CONST
    (41) expr -> error . TYPEID
    POOL            shift and go to state 166
    INT_CONST       shift and go to state 66
    TYPEID          shift and go to state 65


state 139

    (54) expr -> WHILE error LOOP error . POOL
    (24) expr -> error . INT_CONST
    (41) expr -> error . TYPEID
    POOL            shift and go to state 167
    INT_CONST       shift and go to state 66
    TYPEID          shift and go to state 65


state 140

    (53) expr -> WHILE error LOOP expr . POOL
    (31) expr -> expr . = expr
    (32) expr -> expr . LE expr
    (33) expr -> expr . < expr
    (35) expr -> expr . / expr
    (36) expr -> expr . * expr
    (37) expr -> expr . - expr
    (38) expr -> expr . + expr
    (61) expr -> expr . @ TYPEID . OBJECTID ( parametros )
    (62) expr -> expr . . OBJECTID ( parametros )
    (63) expr -> expr . @ TYPEID . OBJECTID ( )
    (64) expr -> expr . . OBJECTID ( )
    POOL            shift and go to state 168
    =               shift and go to state 67
    LE              shift and go to state 68
    <               shift and go to state 69
    /               shift and go to state 70
    *               shift and go to state 71
    -               shift and go to state 72
    +               shift and go to state 73
    @               shift and go to state 74
    .               shift and go to state 75


state 141

    (56) expr -> IF expr THEN expr . ELSE expr FI
    (31) expr -> expr . = expr
    (32) expr -> expr . LE expr
    (33) expr -> expr . < expr
    (35) expr -> expr . / expr
    (36) expr -> expr . * expr
    (37) expr -> expr . - expr
    (38) expr -> expr . + expr
    (61) expr -> expr . @ TYPEID . OBJECTID ( parametros )
    (62) expr -> expr . . OBJECTID ( parametros )
    (63) expr -> expr . @ TYPEID . OBJECTID ( )
    (64) expr -> expr . . OBJECTID ( )
    ELSE            shift and go to state 169
    =               shift and go to state 67
    LE              shift and go to state 68
    <               shift and go to state 69
    /               shift and go to state 70
    *               shift and go to state 71
    -               shift and go to state 72
    +               shift and go to state 73
    @               shift and go to state 74
    .               shift and go to state 75


state 142

    (58) expr -> IF expr THEN error . FI
    (24) expr -> error . INT_CONST
    (41) expr -> error . TYPEID
    FI              shift and go to state 170
    INT_CONST       shift and go to state 66
    TYPEID          shift and go to state 65


state 143

    (57) expr -> IF error THEN expr . ELSE expr FI
    (31) expr -> expr . = expr
    (32) expr -> expr . LE expr
    (33) expr -> expr . < expr
    (35) expr -> expr . / expr
    (36) expr -> expr . * expr
    (37) expr -> expr . - expr
    (38) expr -> expr . + expr
    (61) expr -> expr . @ TYPEID . OBJECTID ( parametros )
    (62) expr -> expr . . OBJECTID ( parametros )
    (63) expr -> expr . @ TYPEID . OBJECTID ( )
    (64) expr -> expr . . OBJECTID ( )
    ELSE            shift and go to state 171
    =               shift and go to state 67
    LE              shift and go to state 68
    <               shift and go to state 69
    /               shift and go to state 70
    *               shift and go to state 71
    -               shift and go to state 72
    +               shift and go to state 73
    @               shift and go to state 74
    .               shift and go to state 75


state 144

    (15) caracteristica -> OBJECTID ( error ) : TYPEID { expr . }
    (31) expr -> expr . = expr
    (32) expr -> expr . LE expr
    (33) expr -> expr . < expr
    (35) expr -> expr . / expr
    (36) expr -> expr . * expr
    (37) expr -> expr . - expr
    (38) expr -> expr . + expr
    (61) expr -> expr . @ TYPEID . OBJECTID ( parametros )
    (62) expr -> expr . . OBJECTID ( parametros )
    (63) expr -> expr . @ TYPEID . OBJECTID ( )
    (64) expr -> expr . . OBJECTID ( )
    }               shift and go to state 172
    =               shift and go to state 67
    LE              shift and go to state 68
    <               shift and go to state 69
    /               shift and go to state 70
    *               shift and go to state 71
    -               shift and go to state 72
    +               shift and go to state 73
    @               shift and go to state 74
    .               shift and go to state 75


state 145

    (18) caracteristica -> OBJECTID ( ) : TYPEID { error } .
    ;               reduce using rule 18 (caracteristica -> OBJECTID ( ) : TYPEID { error } .)


state 146

    (19) caracteristica -> OBJECTID ( ) : TYPEID { expr } .
    ;               reduce using rule 19 (caracteristica -> OBJECTID ( ) : TYPEID { expr } .)


state 147

    (16) caracteristica -> OBJECTID ( formales ) : TYPEID { error . }
    (24) expr -> error . INT_CONST
    (41) expr -> error . TYPEID
    }               shift and go to state 173
    INT_CONST       shift and go to state 66
    TYPEID          shift and go to state 65


state 148

    (17) caracteristica -> OBJECTID ( formales ) : TYPEID { expr . }
    (31) expr -> expr . = expr
    (32) expr -> expr . LE expr
    (33) expr -> expr . < expr
    (35) expr -> expr . / expr
    (36) expr -> expr . * expr
    (37) expr -> expr . - expr
    (38) expr -> expr . + expr
    (61) expr -> expr . @ TYPEID . OBJECTID ( parametros )
    (62) expr -> expr . . OBJECTID ( parametros )
    (63) expr -> expr . @ TYPEID . OBJECTID ( )
    (64) expr -> expr . . OBJECTID ( )
    }               shift and go to state 174
    =               shift and go to state 67
    LE              shift and go to state 68
    <               shift and go to state 69
    /               shift and go to state 70
    *               shift and go to state 71
    -               shift and go to state 72
    +               shift and go to state 73
    @               shift and go to state 74
    .               shift and go to state 75


state 149

    (67) parametros -> parametros , expr .
    (31) expr -> expr . = expr
    (32) expr -> expr . LE expr
    (33) expr -> expr . < expr
    (35) expr -> expr . / expr
    (36) expr -> expr . * expr
    (37) expr -> expr . - expr
    (38) expr -> expr . + expr
    (61) expr -> expr . @ TYPEID . OBJECTID ( parametros )
    (62) expr -> expr . . OBJECTID ( parametros )
    (63) expr -> expr . @ TYPEID . OBJECTID ( )
    (64) expr -> expr . . OBJECTID ( )
    )               reduce using rule 67 (parametros -> parametros , expr .)
    ,               reduce using rule 67 (parametros -> parametros , expr .)
    =               shift and go to state 67
    LE              shift and go to state 68
    <               shift and go to state 69
    /               shift and go to state 70
    *               shift and go to state 71
    -               shift and go to state 72
    +               shift and go to state 73
    @               shift and go to state 74
    .               shift and go to state 75


state 150

    (61) expr -> expr @ TYPEID . OBJECTID . ( parametros )
    (63) expr -> expr @ TYPEID . OBJECTID . ( )
    (               shift and go to state 175


state 151

    (62) expr -> expr . OBJECTID ( parametros . )
    (67) parametros -> parametros . , expr
    )               shift and go to state 176
    ,               shift and go to state 128


state 152

    (64) expr -> expr . OBJECTID ( ) .
    =               reduce using rule 64 (expr -> expr . OBJECTID ( ) .)
    LE              reduce using rule 64 (expr -> expr . OBJECTID ( ) .)
    <               reduce using rule 64 (expr -> expr . OBJECTID ( ) .)
    /               reduce using rule 64 (expr -> expr . OBJECTID ( ) .)
    *               reduce using rule 64 (expr -> expr . OBJECTID ( ) .)
    -               reduce using rule 64 (expr -> expr . OBJECTID ( ) .)
    +               reduce using rule 64 (expr -> expr . OBJECTID ( ) .)
    @               reduce using rule 64 (expr -> expr . OBJECTID ( ) .)
    .               reduce using rule 64 (expr -> expr . OBJECTID ( ) .)
    ;               reduce using rule 64 (expr -> expr . OBJECTID ( ) .)
    )               reduce using rule 64 (expr -> expr . OBJECTID ( ) .)
    OF              reduce using rule 64 (expr -> expr . OBJECTID ( ) .)
    LOOP            reduce using rule 64 (expr -> expr . OBJECTID ( ) .)
    THEN            reduce using rule 64 (expr -> expr . OBJECTID ( ) .)
    ,               reduce using rule 64 (expr -> expr . OBJECTID ( ) .)
    }               reduce using rule 64 (expr -> expr . OBJECTID ( ) .)
    POOL            reduce using rule 64 (expr -> expr . OBJECTID ( ) .)
    ELSE            reduce using rule 64 (expr -> expr . OBJECTID ( ) .)
    IN              reduce using rule 64 (expr -> expr . OBJECTID ( ) .)
    FI              reduce using rule 64 (expr -> expr . OBJECTID ( ) .)


state 153

    (43) expr -> CASE expr OF darrowlist ESAC .
    =               reduce using rule 43 (expr -> CASE expr OF darrowlist ESAC .)
    LE              reduce using rule 43 (expr -> CASE expr OF darrowlist ESAC .)
    <               reduce using rule 43 (expr -> CASE expr OF darrowlist ESAC .)
    /               reduce using rule 43 (expr -> CASE expr OF darrowlist ESAC .)
    *               reduce using rule 43 (expr -> CASE expr OF darrowlist ESAC .)
    -               reduce using rule 43 (expr -> CASE expr OF darrowlist ESAC .)
    +               reduce using rule 43 (expr -> CASE expr OF darrowlist ESAC .)
    @               reduce using rule 43 (expr -> CASE expr OF darrowlist ESAC .)
    .               reduce using rule 43 (expr -> CASE expr OF darrowlist ESAC .)
    ;               reduce using rule 43 (expr -> CASE expr OF darrowlist ESAC .)
    )               reduce using rule 43 (expr -> CASE expr OF darrowlist ESAC .)
    OF              reduce using rule 43 (expr -> CASE expr OF darrowlist ESAC .)
    LOOP            reduce using rule 43 (expr -> CASE expr OF darrowlist ESAC .)
    THEN            reduce using rule 43 (expr -> CASE expr OF darrowlist ESAC .)
    ,               reduce using rule 43 (expr -> CASE expr OF darrowlist ESAC .)
    }               reduce using rule 43 (expr -> CASE expr OF darrowlist ESAC .)
    POOL            reduce using rule 43 (expr -> CASE expr OF darrowlist ESAC .)
    ELSE            reduce using rule 43 (expr -> CASE expr OF darrowlist ESAC .)
    IN              reduce using rule 43 (expr -> CASE expr OF darrowlist ESAC .)
    FI              reduce using rule 43 (expr -> CASE expr OF darrowlist ESAC .)


state 154

    (77) darrowlist -> darrowlist OBJECTID . : TYPEID DARROW expr ;
    :               shift and go to state 177


state 155

    (44) expr -> CASE expr OF error ESAC .
    =               reduce using rule 44 (expr -> CASE expr OF error ESAC .)
    LE              reduce using rule 44 (expr -> CASE expr OF error ESAC .)
    <               reduce using rule 44 (expr -> CASE expr OF error ESAC .)
    /               reduce using rule 44 (expr -> CASE expr OF error ESAC .)
    *               reduce using rule 44 (expr -> CASE expr OF error ESAC .)
    -               reduce using rule 44 (expr -> CASE expr OF error ESAC .)
    +               reduce using rule 44 (expr -> CASE expr OF error ESAC .)
    @               reduce using rule 44 (expr -> CASE expr OF error ESAC .)
    .               reduce using rule 44 (expr -> CASE expr OF error ESAC .)
    ;               reduce using rule 44 (expr -> CASE expr OF error ESAC .)
    )               reduce using rule 44 (expr -> CASE expr OF error ESAC .)
    OF              reduce using rule 44 (expr -> CASE expr OF error ESAC .)
    LOOP            reduce using rule 44 (expr -> CASE expr OF error ESAC .)
    THEN            reduce using rule 44 (expr -> CASE expr OF error ESAC .)
    ,               reduce using rule 44 (expr -> CASE expr OF error ESAC .)
    }               reduce using rule 44 (expr -> CASE expr OF error ESAC .)
    POOL            reduce using rule 44 (expr -> CASE expr OF error ESAC .)
    ELSE            reduce using rule 44 (expr -> CASE expr OF error ESAC .)
    IN              reduce using rule 44 (expr -> CASE expr OF error ESAC .)
    FI              reduce using rule 44 (expr -> CASE expr OF error ESAC .)


state 156

    (78) darrowlist -> OBJECTID : . TYPEID DARROW error ;
    (79) darrowlist -> OBJECTID : . TYPEID DARROW expr ;
    TYPEID          shift and go to state 178


state 157

    (45) expr -> CASE error OF darrowlist ESAC .
    =               reduce using rule 45 (expr -> CASE error OF darrowlist ESAC .)
    LE              reduce using rule 45 (expr -> CASE error OF darrowlist ESAC .)
    <               reduce using rule 45 (expr -> CASE error OF darrowlist ESAC .)
    /               reduce using rule 45 (expr -> CASE error OF darrowlist ESAC .)
    *               reduce using rule 45 (expr -> CASE error OF darrowlist ESAC .)
    -               reduce using rule 45 (expr -> CASE error OF darrowlist ESAC .)
    +               reduce using rule 45 (expr -> CASE error OF darrowlist ESAC .)
    @               reduce using rule 45 (expr -> CASE error OF darrowlist ESAC .)
    .               reduce using rule 45 (expr -> CASE error OF darrowlist ESAC .)
    ;               reduce using rule 45 (expr -> CASE error OF darrowlist ESAC .)
    )               reduce using rule 45 (expr -> CASE error OF darrowlist ESAC .)
    OF              reduce using rule 45 (expr -> CASE error OF darrowlist ESAC .)
    LOOP            reduce using rule 45 (expr -> CASE error OF darrowlist ESAC .)
    THEN            reduce using rule 45 (expr -> CASE error OF darrowlist ESAC .)
    ,               reduce using rule 45 (expr -> CASE error OF darrowlist ESAC .)
    }               reduce using rule 45 (expr -> CASE error OF darrowlist ESAC .)
    POOL            reduce using rule 45 (expr -> CASE error OF darrowlist ESAC .)
    ELSE            reduce using rule 45 (expr -> CASE error OF darrowlist ESAC .)
    IN              reduce using rule 45 (expr -> CASE error OF darrowlist ESAC .)
    FI              reduce using rule 45 (expr -> CASE error OF darrowlist ESAC .)


state 158

    (27) expr -> OBJECTID .
    (59) expr -> OBJECTID . ( parametros )
    (60) expr -> OBJECTID . ( )
    (65) expr -> OBJECTID . ASSIGN error
    (66) expr -> OBJECTID . ASSIGN expr
    (74) inicializacion -> OBJECTID . : TYPEID
    (75) inicializacion -> OBJECTID . : TYPEID ASSIGN error
    (76) inicializacion -> OBJECTID . : TYPEID ASSIGN expr
    IN              reduce using rule 27 (expr -> OBJECTID .)
    =               reduce using rule 27 (expr -> OBJECTID .)
    LE              reduce using rule 27 (expr -> OBJECTID .)
    <               reduce using rule 27 (expr -> OBJECTID .)
    /               reduce using rule 27 (expr -> OBJECTID .)
    *               reduce using rule 27 (expr -> OBJECTID .)
    -               reduce using rule 27 (expr -> OBJECTID .)
    +               reduce using rule 27 (expr -> OBJECTID .)
    @               reduce using rule 27 (expr -> OBJECTID .)
    .               reduce using rule 27 (expr -> OBJECTID .)
    (               shift and go to state 63
    ASSIGN          shift and go to state 64
    :               shift and go to state 179


state 159

    (46) expr -> LET OBJECTID : TYPEID expr . IN error
    (31) expr -> expr . = expr
    (32) expr -> expr . LE expr
    (33) expr -> expr . < expr
    (35) expr -> expr . / expr
    (36) expr -> expr . * expr
    (37) expr -> expr . - expr
    (38) expr -> expr . + expr
    (61) expr -> expr . @ TYPEID . OBJECTID ( parametros )
    (62) expr -> expr . . OBJECTID ( parametros )
    (63) expr -> expr . @ TYPEID . OBJECTID ( )
    (64) expr -> expr . . OBJECTID ( )
    IN              shift and go to state 180
    =               shift and go to state 67
    LE              shift and go to state 68
    <               shift and go to state 69
    /               shift and go to state 70
    *               shift and go to state 71
    -               shift and go to state 72
    +               shift and go to state 73
    @               shift and go to state 74
    .               shift and go to state 75


state 160

    (50) expr -> LET OBJECTID : TYPEID IN . expr
    (23) expr -> . BOOL_CONST
    (24) expr -> . error INT_CONST
    (25) expr -> . STR_CONST
    (26) expr -> . INT_CONST
    (27) expr -> . OBJECTID
    (28) expr -> . ( expr )
    (29) expr -> . NOT error
    (30) expr -> . NOT expr
    (31) expr -> . expr = expr
    (32) expr -> . expr LE expr
    (33) expr -> . expr < expr
    (34) expr -> . ~ expr
    (35) expr -> . expr / expr
    (36) expr -> . expr * expr
    (37) expr -> . expr - expr
    (38) expr -> . expr + expr
    (39) expr -> . ISVOID error
    (40) expr -> . ISVOID expr
    (41) expr -> . error TYPEID
    (42) expr -> . NEW TYPEID
    (43) expr -> . CASE expr OF darrowlist ESAC
    (44) expr -> . CASE expr OF error ESAC
    (45) expr -> . CASE error OF darrowlist ESAC
    (46) expr -> . LET OBJECTID : TYPEID expr IN error
    (47) expr -> . LET OBJECTID : TYPEID error IN expr
    (48) expr -> . LET OBJECTID : TYPEID inicializaciones IN expr
    (49) expr -> . LET OBJECTID : TYPEID ASSIGN expr IN expr
    (50) expr -> . LET OBJECTID : TYPEID IN expr
    (51) expr -> . { exprs }
    (52) expr -> . WHILE expr LOOP error POOL
    (53) expr -> . WHILE error LOOP expr POOL
    (54) expr -> . WHILE error LOOP error POOL
    (55) expr -> . WHILE expr LOOP expr POOL
    (56) expr -> . IF expr THEN expr ELSE expr FI
    (57) expr -> . IF error THEN expr ELSE expr FI
    (58) expr -> . IF expr THEN error FI
    (59) expr -> . OBJECTID ( parametros )
    (60) expr -> . OBJECTID ( )
    (61) expr -> . expr @ TYPEID . OBJECTID ( parametros )
    (62) expr -> . expr . OBJECTID ( parametros )
    (63) expr -> . expr @ TYPEID . OBJECTID ( )
    (64) expr -> . expr . OBJECTID ( )
    (65) expr -> . OBJECTID ASSIGN error
    (66) expr -> . OBJECTID ASSIGN expr
    BOOL_CONST      shift and go to state 45
    error           shift and go to state 77
    STR_CONST       shift and go to state 47
    INT_CONST       shift and go to state 46
    OBJECTID        shift and go to state 42
    (               shift and go to state 48
    NOT             shift and go to state 49
    ~               shift and go to state 50
    ISVOID          shift and go to state 51
    NEW             shift and go to state 52
    CASE            shift and go to state 53
    LET             shift and go to state 54
    {               shift and go to state 55
    WHILE           shift and go to state 56
    IF              shift and go to state 57

    expr                           shift and go to state 181

state 161

    (47) expr -> LET OBJECTID : TYPEID error . IN expr
    (24) expr -> error . INT_CONST
    (41) expr -> error . TYPEID
    IN              shift and go to state 182
    INT_CONST       shift and go to state 66
    TYPEID          shift and go to state 65


state 162

    (48) expr -> LET OBJECTID : TYPEID inicializaciones . IN expr
    (72) inicializaciones -> inicializaciones . , inicializacion
    IN              shift and go to state 183
    ,               shift and go to state 184


state 163

    (49) expr -> LET OBJECTID : TYPEID ASSIGN . expr IN expr
    (23) expr -> . BOOL_CONST
    (24) expr -> . error INT_CONST
    (25) expr -> . STR_CONST
    (26) expr -> . INT_CONST
    (27) expr -> . OBJECTID
    (28) expr -> . ( expr )
    (29) expr -> . NOT error
    (30) expr -> . NOT expr
    (31) expr -> . expr = expr
    (32) expr -> . expr LE expr
    (33) expr -> . expr < expr
    (34) expr -> . ~ expr
    (35) expr -> . expr / expr
    (36) expr -> . expr * expr
    (37) expr -> . expr - expr
    (38) expr -> . expr + expr
    (39) expr -> . ISVOID error
    (40) expr -> . ISVOID expr
    (41) expr -> . error TYPEID
    (42) expr -> . NEW TYPEID
    (43) expr -> . CASE expr OF darrowlist ESAC
    (44) expr -> . CASE expr OF error ESAC
    (45) expr -> . CASE error OF darrowlist ESAC
    (46) expr -> . LET OBJECTID : TYPEID expr IN error
    (47) expr -> . LET OBJECTID : TYPEID error IN expr
    (48) expr -> . LET OBJECTID : TYPEID inicializaciones IN expr
    (49) expr -> . LET OBJECTID : TYPEID ASSIGN expr IN expr
    (50) expr -> . LET OBJECTID : TYPEID IN expr
    (51) expr -> . { exprs }
    (52) expr -> . WHILE expr LOOP error POOL
    (53) expr -> . WHILE error LOOP expr POOL
    (54) expr -> . WHILE error LOOP error POOL
    (55) expr -> . WHILE expr LOOP expr POOL
    (56) expr -> . IF expr THEN expr ELSE expr FI
    (57) expr -> . IF error THEN expr ELSE expr FI
    (58) expr -> . IF expr THEN error FI
    (59) expr -> . OBJECTID ( parametros )
    (60) expr -> . OBJECTID ( )
    (61) expr -> . expr @ TYPEID . OBJECTID ( parametros )
    (62) expr -> . expr . OBJECTID ( parametros )
    (63) expr -> . expr @ TYPEID . OBJECTID ( )
    (64) expr -> . expr . OBJECTID ( )
    (65) expr -> . OBJECTID ASSIGN error
    (66) expr -> . OBJECTID ASSIGN expr
    BOOL_CONST      shift and go to state 45
    error           shift and go to state 77
    STR_CONST       shift and go to state 47
    INT_CONST       shift and go to state 46
    OBJECTID        shift and go to state 42
    (               shift and go to state 48
    NOT             shift and go to state 49
    ~               shift and go to state 50
    ISVOID          shift and go to state 51
    NEW             shift and go to state 52
    CASE            shift and go to state 53
    LET             shift and go to state 54
    {               shift and go to state 55
    WHILE           shift and go to state 56
    IF              shift and go to state 57

    expr                           shift and go to state 185

state 164

    (73) inicializaciones -> inicializacion . ,
    ,               shift and go to state 186


state 165

    (55) expr -> WHILE expr LOOP expr POOL .
    =               reduce using rule 55 (expr -> WHILE expr LOOP expr POOL .)
    LE              reduce using rule 55 (expr -> WHILE expr LOOP expr POOL .)
    <               reduce using rule 55 (expr -> WHILE expr LOOP expr POOL .)
    /               reduce using rule 55 (expr -> WHILE expr LOOP expr POOL .)
    *               reduce using rule 55 (expr -> WHILE expr LOOP expr POOL .)
    -               reduce using rule 55 (expr -> WHILE expr LOOP expr POOL .)
    +               reduce using rule 55 (expr -> WHILE expr LOOP expr POOL .)
    @               reduce using rule 55 (expr -> WHILE expr LOOP expr POOL .)
    .               reduce using rule 55 (expr -> WHILE expr LOOP expr POOL .)
    ;               reduce using rule 55 (expr -> WHILE expr LOOP expr POOL .)
    )               reduce using rule 55 (expr -> WHILE expr LOOP expr POOL .)
    OF              reduce using rule 55 (expr -> WHILE expr LOOP expr POOL .)
    LOOP            reduce using rule 55 (expr -> WHILE expr LOOP expr POOL .)
    THEN            reduce using rule 55 (expr -> WHILE expr LOOP expr POOL .)
    ,               reduce using rule 55 (expr -> WHILE expr LOOP expr POOL .)
    }               reduce using rule 55 (expr -> WHILE expr LOOP expr POOL .)
    POOL            reduce using rule 55 (expr -> WHILE expr LOOP expr POOL .)
    ELSE            reduce using rule 55 (expr -> WHILE expr LOOP expr POOL .)
    IN              reduce using rule 55 (expr -> WHILE expr LOOP expr POOL .)
    FI              reduce using rule 55 (expr -> WHILE expr LOOP expr POOL .)


state 166

    (52) expr -> WHILE expr LOOP error POOL .
    =               reduce using rule 52 (expr -> WHILE expr LOOP error POOL .)
    LE              reduce using rule 52 (expr -> WHILE expr LOOP error POOL .)
    <               reduce using rule 52 (expr -> WHILE expr LOOP error POOL .)
    /               reduce using rule 52 (expr -> WHILE expr LOOP error POOL .)
    *               reduce using rule 52 (expr -> WHILE expr LOOP error POOL .)
    -               reduce using rule 52 (expr -> WHILE expr LOOP error POOL .)
    +               reduce using rule 52 (expr -> WHILE expr LOOP error POOL .)
    @               reduce using rule 52 (expr -> WHILE expr LOOP error POOL .)
    .               reduce using rule 52 (expr -> WHILE expr LOOP error POOL .)
    ;               reduce using rule 52 (expr -> WHILE expr LOOP error POOL .)
    )               reduce using rule 52 (expr -> WHILE expr LOOP error POOL .)
    OF              reduce using rule 52 (expr -> WHILE expr LOOP error POOL .)
    LOOP            reduce using rule 52 (expr -> WHILE expr LOOP error POOL .)
    THEN            reduce using rule 52 (expr -> WHILE expr LOOP error POOL .)
    ,               reduce using rule 52 (expr -> WHILE expr LOOP error POOL .)
    }               reduce using rule 52 (expr -> WHILE expr LOOP error POOL .)
    POOL            reduce using rule 52 (expr -> WHILE expr LOOP error POOL .)
    ELSE            reduce using rule 52 (expr -> WHILE expr LOOP error POOL .)
    IN              reduce using rule 52 (expr -> WHILE expr LOOP error POOL .)
    FI              reduce using rule 52 (expr -> WHILE expr LOOP error POOL .)


state 167

    (54) expr -> WHILE error LOOP error POOL .
    =               reduce using rule 54 (expr -> WHILE error LOOP error POOL .)
    LE              reduce using rule 54 (expr -> WHILE error LOOP error POOL .)
    <               reduce using rule 54 (expr -> WHILE error LOOP error POOL .)
    /               reduce using rule 54 (expr -> WHILE error LOOP error POOL .)
    *               reduce using rule 54 (expr -> WHILE error LOOP error POOL .)
    -               reduce using rule 54 (expr -> WHILE error LOOP error POOL .)
    +               reduce using rule 54 (expr -> WHILE error LOOP error POOL .)
    @               reduce using rule 54 (expr -> WHILE error LOOP error POOL .)
    .               reduce using rule 54 (expr -> WHILE error LOOP error POOL .)
    ;               reduce using rule 54 (expr -> WHILE error LOOP error POOL .)
    )               reduce using rule 54 (expr -> WHILE error LOOP error POOL .)
    OF              reduce using rule 54 (expr -> WHILE error LOOP error POOL .)
    LOOP            reduce using rule 54 (expr -> WHILE error LOOP error POOL .)
    THEN            reduce using rule 54 (expr -> WHILE error LOOP error POOL .)
    ,               reduce using rule 54 (expr -> WHILE error LOOP error POOL .)
    }               reduce using rule 54 (expr -> WHILE error LOOP error POOL .)
    POOL            reduce using rule 54 (expr -> WHILE error LOOP error POOL .)
    ELSE            reduce using rule 54 (expr -> WHILE error LOOP error POOL .)
    IN              reduce using rule 54 (expr -> WHILE error LOOP error POOL .)
    FI              reduce using rule 54 (expr -> WHILE error LOOP error POOL .)


state 168

    (53) expr -> WHILE error LOOP expr POOL .
    =               reduce using rule 53 (expr -> WHILE error LOOP expr POOL .)
    LE              reduce using rule 53 (expr -> WHILE error LOOP expr POOL .)
    <               reduce using rule 53 (expr -> WHILE error LOOP expr POOL .)
    /               reduce using rule 53 (expr -> WHILE error LOOP expr POOL .)
    *               reduce using rule 53 (expr -> WHILE error LOOP expr POOL .)
    -               reduce using rule 53 (expr -> WHILE error LOOP expr POOL .)
    +               reduce using rule 53 (expr -> WHILE error LOOP expr POOL .)
    @               reduce using rule 53 (expr -> WHILE error LOOP expr POOL .)
    .               reduce using rule 53 (expr -> WHILE error LOOP expr POOL .)
    ;               reduce using rule 53 (expr -> WHILE error LOOP expr POOL .)
    )               reduce using rule 53 (expr -> WHILE error LOOP expr POOL .)
    OF              reduce using rule 53 (expr -> WHILE error LOOP expr POOL .)
    LOOP            reduce using rule 53 (expr -> WHILE error LOOP expr POOL .)
    THEN            reduce using rule 53 (expr -> WHILE error LOOP expr POOL .)
    ,               reduce using rule 53 (expr -> WHILE error LOOP expr POOL .)
    }               reduce using rule 53 (expr -> WHILE error LOOP expr POOL .)
    POOL            reduce using rule 53 (expr -> WHILE error LOOP expr POOL .)
    ELSE            reduce using rule 53 (expr -> WHILE error LOOP expr POOL .)
    IN              reduce using rule 53 (expr -> WHILE error LOOP expr POOL .)
    FI              reduce using rule 53 (expr -> WHILE error LOOP expr POOL .)


state 169

    (56) expr -> IF expr THEN expr ELSE . expr FI
    (23) expr -> . BOOL_CONST
    (24) expr -> . error INT_CONST
    (25) expr -> . STR_CONST
    (26) expr -> . INT_CONST
    (27) expr -> . OBJECTID
    (28) expr -> . ( expr )
    (29) expr -> . NOT error
    (30) expr -> . NOT expr
    (31) expr -> . expr = expr
    (32) expr -> . expr LE expr
    (33) expr -> . expr < expr
    (34) expr -> . ~ expr
    (35) expr -> . expr / expr
    (36) expr -> . expr * expr
    (37) expr -> . expr - expr
    (38) expr -> . expr + expr
    (39) expr -> . ISVOID error
    (40) expr -> . ISVOID expr
    (41) expr -> . error TYPEID
    (42) expr -> . NEW TYPEID
    (43) expr -> . CASE expr OF darrowlist ESAC
    (44) expr -> . CASE expr OF error ESAC
    (45) expr -> . CASE error OF darrowlist ESAC
    (46) expr -> . LET OBJECTID : TYPEID expr IN error
    (47) expr -> . LET OBJECTID : TYPEID error IN expr
    (48) expr -> . LET OBJECTID : TYPEID inicializaciones IN expr
    (49) expr -> . LET OBJECTID : TYPEID ASSIGN expr IN expr
    (50) expr -> . LET OBJECTID : TYPEID IN expr
    (51) expr -> . { exprs }
    (52) expr -> . WHILE expr LOOP error POOL
    (53) expr -> . WHILE error LOOP expr POOL
    (54) expr -> . WHILE error LOOP error POOL
    (55) expr -> . WHILE expr LOOP expr POOL
    (56) expr -> . IF expr THEN expr ELSE expr FI
    (57) expr -> . IF error THEN expr ELSE expr FI
    (58) expr -> . IF expr THEN error FI
    (59) expr -> . OBJECTID ( parametros )
    (60) expr -> . OBJECTID ( )
    (61) expr -> . expr @ TYPEID . OBJECTID ( parametros )
    (62) expr -> . expr . OBJECTID ( parametros )
    (63) expr -> . expr @ TYPEID . OBJECTID ( )
    (64) expr -> . expr . OBJECTID ( )
    (65) expr -> . OBJECTID ASSIGN error
    (66) expr -> . OBJECTID ASSIGN expr
    BOOL_CONST      shift and go to state 45
    error           shift and go to state 77
    STR_CONST       shift and go to state 47
    INT_CONST       shift and go to state 46
    OBJECTID        shift and go to state 42
    (               shift and go to state 48
    NOT             shift and go to state 49
    ~               shift and go to state 50
    ISVOID          shift and go to state 51
    NEW             shift and go to state 52
    CASE            shift and go to state 53
    LET             shift and go to state 54
    {               shift and go to state 55
    WHILE           shift and go to state 56
    IF              shift and go to state 57

    expr                           shift and go to state 187

state 170

    (58) expr -> IF expr THEN error FI .
    =               reduce using rule 58 (expr -> IF expr THEN error FI .)
    LE              reduce using rule 58 (expr -> IF expr THEN error FI .)
    <               reduce using rule 58 (expr -> IF expr THEN error FI .)
    /               reduce using rule 58 (expr -> IF expr THEN error FI .)
    *               reduce using rule 58 (expr -> IF expr THEN error FI .)
    -               reduce using rule 58 (expr -> IF expr THEN error FI .)
    +               reduce using rule 58 (expr -> IF expr THEN error FI .)
    @               reduce using rule 58 (expr -> IF expr THEN error FI .)
    .               reduce using rule 58 (expr -> IF expr THEN error FI .)
    ;               reduce using rule 58 (expr -> IF expr THEN error FI .)
    )               reduce using rule 58 (expr -> IF expr THEN error FI .)
    OF              reduce using rule 58 (expr -> IF expr THEN error FI .)
    LOOP            reduce using rule 58 (expr -> IF expr THEN error FI .)
    THEN            reduce using rule 58 (expr -> IF expr THEN error FI .)
    ,               reduce using rule 58 (expr -> IF expr THEN error FI .)
    }               reduce using rule 58 (expr -> IF expr THEN error FI .)
    POOL            reduce using rule 58 (expr -> IF expr THEN error FI .)
    ELSE            reduce using rule 58 (expr -> IF expr THEN error FI .)
    IN              reduce using rule 58 (expr -> IF expr THEN error FI .)
    FI              reduce using rule 58 (expr -> IF expr THEN error FI .)


state 171

    (57) expr -> IF error THEN expr ELSE . expr FI
    (23) expr -> . BOOL_CONST
    (24) expr -> . error INT_CONST
    (25) expr -> . STR_CONST
    (26) expr -> . INT_CONST
    (27) expr -> . OBJECTID
    (28) expr -> . ( expr )
    (29) expr -> . NOT error
    (30) expr -> . NOT expr
    (31) expr -> . expr = expr
    (32) expr -> . expr LE expr
    (33) expr -> . expr < expr
    (34) expr -> . ~ expr
    (35) expr -> . expr / expr
    (36) expr -> . expr * expr
    (37) expr -> . expr - expr
    (38) expr -> . expr + expr
    (39) expr -> . ISVOID error
    (40) expr -> . ISVOID expr
    (41) expr -> . error TYPEID
    (42) expr -> . NEW TYPEID
    (43) expr -> . CASE expr OF darrowlist ESAC
    (44) expr -> . CASE expr OF error ESAC
    (45) expr -> . CASE error OF darrowlist ESAC
    (46) expr -> . LET OBJECTID : TYPEID expr IN error
    (47) expr -> . LET OBJECTID : TYPEID error IN expr
    (48) expr -> . LET OBJECTID : TYPEID inicializaciones IN expr
    (49) expr -> . LET OBJECTID : TYPEID ASSIGN expr IN expr
    (50) expr -> . LET OBJECTID : TYPEID IN expr
    (51) expr -> . { exprs }
    (52) expr -> . WHILE expr LOOP error POOL
    (53) expr -> . WHILE error LOOP expr POOL
    (54) expr -> . WHILE error LOOP error POOL
    (55) expr -> . WHILE expr LOOP expr POOL
    (56) expr -> . IF expr THEN expr ELSE expr FI
    (57) expr -> . IF error THEN expr ELSE expr FI
    (58) expr -> . IF expr THEN error FI
    (59) expr -> . OBJECTID ( parametros )
    (60) expr -> . OBJECTID ( )
    (61) expr -> . expr @ TYPEID . OBJECTID ( parametros )
    (62) expr -> . expr . OBJECTID ( parametros )
    (63) expr -> . expr @ TYPEID . OBJECTID ( )
    (64) expr -> . expr . OBJECTID ( )
    (65) expr -> . OBJECTID ASSIGN error
    (66) expr -> . OBJECTID ASSIGN expr
    BOOL_CONST      shift and go to state 45
    error           shift and go to state 77
    STR_CONST       shift and go to state 47
    INT_CONST       shift and go to state 46
    OBJECTID        shift and go to state 42
    (               shift and go to state 48
    NOT             shift and go to state 49
    ~               shift and go to state 50
    ISVOID          shift and go to state 51
    NEW             shift and go to state 52
    CASE            shift and go to state 53
    LET             shift and go to state 54
    {               shift and go to state 55
    WHILE           shift and go to state 56
    IF              shift and go to state 57

    expr                           shift and go to state 188

state 172

    (15) caracteristica -> OBJECTID ( error ) : TYPEID { expr } .
    ;               reduce using rule 15 (caracteristica -> OBJECTID ( error ) : TYPEID { expr } .)


state 173

    (16) caracteristica -> OBJECTID ( formales ) : TYPEID { error } .
    ;               reduce using rule 16 (caracteristica -> OBJECTID ( formales ) : TYPEID { error } .)


state 174

    (17) caracteristica -> OBJECTID ( formales ) : TYPEID { expr } .
    ;               reduce using rule 17 (caracteristica -> OBJECTID ( formales ) : TYPEID { expr } .)


state 175

    (61) expr -> expr @ TYPEID . OBJECTID ( . parametros )
    (63) expr -> expr @ TYPEID . OBJECTID ( . )
    (67) parametros -> . parametros , expr
    (68) parametros -> . expr
    (23) expr -> . BOOL_CONST
    (24) expr -> . error INT_CONST
    (25) expr -> . STR_CONST
    (26) expr -> . INT_CONST
    (27) expr -> . OBJECTID
    (28) expr -> . ( expr )
    (29) expr -> . NOT error
    (30) expr -> . NOT expr
    (31) expr -> . expr = expr
    (32) expr -> . expr LE expr
    (33) expr -> . expr < expr
    (34) expr -> . ~ expr
    (35) expr -> . expr / expr
    (36) expr -> . expr * expr
    (37) expr -> . expr - expr
    (38) expr -> . expr + expr
    (39) expr -> . ISVOID error
    (40) expr -> . ISVOID expr
    (41) expr -> . error TYPEID
    (42) expr -> . NEW TYPEID
    (43) expr -> . CASE expr OF darrowlist ESAC
    (44) expr -> . CASE expr OF error ESAC
    (45) expr -> . CASE error OF darrowlist ESAC
    (46) expr -> . LET OBJECTID : TYPEID expr IN error
    (47) expr -> . LET OBJECTID : TYPEID error IN expr
    (48) expr -> . LET OBJECTID : TYPEID inicializaciones IN expr
    (49) expr -> . LET OBJECTID : TYPEID ASSIGN expr IN expr
    (50) expr -> . LET OBJECTID : TYPEID IN expr
    (51) expr -> . { exprs }
    (52) expr -> . WHILE expr LOOP error POOL
    (53) expr -> . WHILE error LOOP expr POOL
    (54) expr -> . WHILE error LOOP error POOL
    (55) expr -> . WHILE expr LOOP expr POOL
    (56) expr -> . IF expr THEN expr ELSE expr FI
    (57) expr -> . IF error THEN expr ELSE expr FI
    (58) expr -> . IF expr THEN error FI
    (59) expr -> . OBJECTID ( parametros )
    (60) expr -> . OBJECTID ( )
    (61) expr -> . expr @ TYPEID . OBJECTID ( parametros )
    (62) expr -> . expr . OBJECTID ( parametros )
    (63) expr -> . expr @ TYPEID . OBJECTID ( )
    (64) expr -> . expr . OBJECTID ( )
    (65) expr -> . OBJECTID ASSIGN error
    (66) expr -> . OBJECTID ASSIGN expr
    )               shift and go to state 190
    BOOL_CONST      shift and go to state 45
    error           shift and go to state 77
    STR_CONST       shift and go to state 47
    INT_CONST       shift and go to state 46
    OBJECTID        shift and go to state 42
    (               shift and go to state 48
    NOT             shift and go to state 49
    ~               shift and go to state 50
    ISVOID          shift and go to state 51
    NEW             shift and go to state 52
    CASE            shift and go to state 53
    LET             shift and go to state 54
    {               shift and go to state 55
    WHILE           shift and go to state 56
    IF              shift and go to state 57

    expr                           shift and go to state 99
    parametros                     shift and go to state 189

state 176

    (62) expr -> expr . OBJECTID ( parametros ) .
    =               reduce using rule 62 (expr -> expr . OBJECTID ( parametros ) .)
    LE              reduce using rule 62 (expr -> expr . OBJECTID ( parametros ) .)
    <               reduce using rule 62 (expr -> expr . OBJECTID ( parametros ) .)
    /               reduce using rule 62 (expr -> expr . OBJECTID ( parametros ) .)
    *               reduce using rule 62 (expr -> expr . OBJECTID ( parametros ) .)
    -               reduce using rule 62 (expr -> expr . OBJECTID ( parametros ) .)
    +               reduce using rule 62 (expr -> expr . OBJECTID ( parametros ) .)
    @               reduce using rule 62 (expr -> expr . OBJECTID ( parametros ) .)
    .               reduce using rule 62 (expr -> expr . OBJECTID ( parametros ) .)
    ;               reduce using rule 62 (expr -> expr . OBJECTID ( parametros ) .)
    )               reduce using rule 62 (expr -> expr . OBJECTID ( parametros ) .)
    OF              reduce using rule 62 (expr -> expr . OBJECTID ( parametros ) .)
    LOOP            reduce using rule 62 (expr -> expr . OBJECTID ( parametros ) .)
    THEN            reduce using rule 62 (expr -> expr . OBJECTID ( parametros ) .)
    ,               reduce using rule 62 (expr -> expr . OBJECTID ( parametros ) .)
    }               reduce using rule 62 (expr -> expr . OBJECTID ( parametros ) .)
    POOL            reduce using rule 62 (expr -> expr . OBJECTID ( parametros ) .)
    ELSE            reduce using rule 62 (expr -> expr . OBJECTID ( parametros ) .)
    IN              reduce using rule 62 (expr -> expr . OBJECTID ( parametros ) .)
    FI              reduce using rule 62 (expr -> expr . OBJECTID ( parametros ) .)


state 177

    (77) darrowlist -> darrowlist OBJECTID : . TYPEID DARROW expr ;
    TYPEID          shift and go to state 191


state 178

    (78) darrowlist -> OBJECTID : TYPEID . DARROW error ;
    (79) darrowlist -> OBJECTID : TYPEID . DARROW expr ;
    DARROW          shift and go to state 192


state 179

    (74) inicializacion -> OBJECTID : . TYPEID
    (75) inicializacion -> OBJECTID : . TYPEID ASSIGN error
    (76) inicializacion -> OBJECTID : . TYPEID ASSIGN expr
    TYPEID          shift and go to state 193


state 180

    (46) expr -> LET OBJECTID : TYPEID expr IN . error
    error           shift and go to state 194


state 181

    (50) expr -> LET OBJECTID : TYPEID IN expr .
    (31) expr -> expr . = expr
    (32) expr -> expr . LE expr
    (33) expr -> expr . < expr
    (35) expr -> expr . / expr
    (36) expr -> expr . * expr
    (37) expr -> expr . - expr
    (38) expr -> expr . + expr
    (61) expr -> expr . @ TYPEID . OBJECTID ( parametros )
    (62) expr -> expr . . OBJECTID ( parametros )
    (63) expr -> expr . @ TYPEID . OBJECTID ( )
    (64) expr -> expr . . OBJECTID ( )
  ! shift/reduce conflict for = resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for < resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for @ resolved as shift
  ! shift/reduce conflict for . resolved as shift
    ;               reduce using rule 50 (expr -> LET OBJECTID : TYPEID IN expr .)
    )               reduce using rule 50 (expr -> LET OBJECTID : TYPEID IN expr .)
    OF              reduce using rule 50 (expr -> LET OBJECTID : TYPEID IN expr .)
    LOOP            reduce using rule 50 (expr -> LET OBJECTID : TYPEID IN expr .)
    THEN            reduce using rule 50 (expr -> LET OBJECTID : TYPEID IN expr .)
    ,               reduce using rule 50 (expr -> LET OBJECTID : TYPEID IN expr .)
    }               reduce using rule 50 (expr -> LET OBJECTID : TYPEID IN expr .)
    POOL            reduce using rule 50 (expr -> LET OBJECTID : TYPEID IN expr .)
    ELSE            reduce using rule 50 (expr -> LET OBJECTID : TYPEID IN expr .)
    IN              reduce using rule 50 (expr -> LET OBJECTID : TYPEID IN expr .)
    FI              reduce using rule 50 (expr -> LET OBJECTID : TYPEID IN expr .)
    =               shift and go to state 67
    LE              shift and go to state 68
    <               shift and go to state 69
    /               shift and go to state 70
    *               shift and go to state 71
    -               shift and go to state 72
    +               shift and go to state 73
    @               shift and go to state 74
    .               shift and go to state 75


state 182

    (47) expr -> LET OBJECTID : TYPEID error IN . expr
    (23) expr -> . BOOL_CONST
    (24) expr -> . error INT_CONST
    (25) expr -> . STR_CONST
    (26) expr -> . INT_CONST
    (27) expr -> . OBJECTID
    (28) expr -> . ( expr )
    (29) expr -> . NOT error
    (30) expr -> . NOT expr
    (31) expr -> . expr = expr
    (32) expr -> . expr LE expr
    (33) expr -> . expr < expr
    (34) expr -> . ~ expr
    (35) expr -> . expr / expr
    (36) expr -> . expr * expr
    (37) expr -> . expr - expr
    (38) expr -> . expr + expr
    (39) expr -> . ISVOID error
    (40) expr -> . ISVOID expr
    (41) expr -> . error TYPEID
    (42) expr -> . NEW TYPEID
    (43) expr -> . CASE expr OF darrowlist ESAC
    (44) expr -> . CASE expr OF error ESAC
    (45) expr -> . CASE error OF darrowlist ESAC
    (46) expr -> . LET OBJECTID : TYPEID expr IN error
    (47) expr -> . LET OBJECTID : TYPEID error IN expr
    (48) expr -> . LET OBJECTID : TYPEID inicializaciones IN expr
    (49) expr -> . LET OBJECTID : TYPEID ASSIGN expr IN expr
    (50) expr -> . LET OBJECTID : TYPEID IN expr
    (51) expr -> . { exprs }
    (52) expr -> . WHILE expr LOOP error POOL
    (53) expr -> . WHILE error LOOP expr POOL
    (54) expr -> . WHILE error LOOP error POOL
    (55) expr -> . WHILE expr LOOP expr POOL
    (56) expr -> . IF expr THEN expr ELSE expr FI
    (57) expr -> . IF error THEN expr ELSE expr FI
    (58) expr -> . IF expr THEN error FI
    (59) expr -> . OBJECTID ( parametros )
    (60) expr -> . OBJECTID ( )
    (61) expr -> . expr @ TYPEID . OBJECTID ( parametros )
    (62) expr -> . expr . OBJECTID ( parametros )
    (63) expr -> . expr @ TYPEID . OBJECTID ( )
    (64) expr -> . expr . OBJECTID ( )
    (65) expr -> . OBJECTID ASSIGN error
    (66) expr -> . OBJECTID ASSIGN expr
    BOOL_CONST      shift and go to state 45
    error           shift and go to state 77
    STR_CONST       shift and go to state 47
    INT_CONST       shift and go to state 46
    OBJECTID        shift and go to state 42
    (               shift and go to state 48
    NOT             shift and go to state 49
    ~               shift and go to state 50
    ISVOID          shift and go to state 51
    NEW             shift and go to state 52
    CASE            shift and go to state 53
    LET             shift and go to state 54
    {               shift and go to state 55
    WHILE           shift and go to state 56
    IF              shift and go to state 57

    expr                           shift and go to state 195

state 183

    (48) expr -> LET OBJECTID : TYPEID inicializaciones IN . expr
    (23) expr -> . BOOL_CONST
    (24) expr -> . error INT_CONST
    (25) expr -> . STR_CONST
    (26) expr -> . INT_CONST
    (27) expr -> . OBJECTID
    (28) expr -> . ( expr )
    (29) expr -> . NOT error
    (30) expr -> . NOT expr
    (31) expr -> . expr = expr
    (32) expr -> . expr LE expr
    (33) expr -> . expr < expr
    (34) expr -> . ~ expr
    (35) expr -> . expr / expr
    (36) expr -> . expr * expr
    (37) expr -> . expr - expr
    (38) expr -> . expr + expr
    (39) expr -> . ISVOID error
    (40) expr -> . ISVOID expr
    (41) expr -> . error TYPEID
    (42) expr -> . NEW TYPEID
    (43) expr -> . CASE expr OF darrowlist ESAC
    (44) expr -> . CASE expr OF error ESAC
    (45) expr -> . CASE error OF darrowlist ESAC
    (46) expr -> . LET OBJECTID : TYPEID expr IN error
    (47) expr -> . LET OBJECTID : TYPEID error IN expr
    (48) expr -> . LET OBJECTID : TYPEID inicializaciones IN expr
    (49) expr -> . LET OBJECTID : TYPEID ASSIGN expr IN expr
    (50) expr -> . LET OBJECTID : TYPEID IN expr
    (51) expr -> . { exprs }
    (52) expr -> . WHILE expr LOOP error POOL
    (53) expr -> . WHILE error LOOP expr POOL
    (54) expr -> . WHILE error LOOP error POOL
    (55) expr -> . WHILE expr LOOP expr POOL
    (56) expr -> . IF expr THEN expr ELSE expr FI
    (57) expr -> . IF error THEN expr ELSE expr FI
    (58) expr -> . IF expr THEN error FI
    (59) expr -> . OBJECTID ( parametros )
    (60) expr -> . OBJECTID ( )
    (61) expr -> . expr @ TYPEID . OBJECTID ( parametros )
    (62) expr -> . expr . OBJECTID ( parametros )
    (63) expr -> . expr @ TYPEID . OBJECTID ( )
    (64) expr -> . expr . OBJECTID ( )
    (65) expr -> . OBJECTID ASSIGN error
    (66) expr -> . OBJECTID ASSIGN expr
    BOOL_CONST      shift and go to state 45
    error           shift and go to state 77
    STR_CONST       shift and go to state 47
    INT_CONST       shift and go to state 46
    OBJECTID        shift and go to state 42
    (               shift and go to state 48
    NOT             shift and go to state 49
    ~               shift and go to state 50
    ISVOID          shift and go to state 51
    NEW             shift and go to state 52
    CASE            shift and go to state 53
    LET             shift and go to state 54
    {               shift and go to state 55
    WHILE           shift and go to state 56
    IF              shift and go to state 57

    expr                           shift and go to state 196

state 184

    (72) inicializaciones -> inicializaciones , . inicializacion
    (74) inicializacion -> . OBJECTID : TYPEID
    (75) inicializacion -> . OBJECTID : TYPEID ASSIGN error
    (76) inicializacion -> . OBJECTID : TYPEID ASSIGN expr
    OBJECTID        shift and go to state 198

    inicializacion                 shift and go to state 197

state 185

    (49) expr -> LET OBJECTID : TYPEID ASSIGN expr . IN expr
    (31) expr -> expr . = expr
    (32) expr -> expr . LE expr
    (33) expr -> expr . < expr
    (35) expr -> expr . / expr
    (36) expr -> expr . * expr
    (37) expr -> expr . - expr
    (38) expr -> expr . + expr
    (61) expr -> expr . @ TYPEID . OBJECTID ( parametros )
    (62) expr -> expr . . OBJECTID ( parametros )
    (63) expr -> expr . @ TYPEID . OBJECTID ( )
    (64) expr -> expr . . OBJECTID ( )
    IN              shift and go to state 199
    =               shift and go to state 67
    LE              shift and go to state 68
    <               shift and go to state 69
    /               shift and go to state 70
    *               shift and go to state 71
    -               shift and go to state 72
    +               shift and go to state 73
    @               shift and go to state 74
    .               shift and go to state 75


state 186

    (73) inicializaciones -> inicializacion , .
    IN              reduce using rule 73 (inicializaciones -> inicializacion , .)
    ,               reduce using rule 73 (inicializaciones -> inicializacion , .)


state 187

    (56) expr -> IF expr THEN expr ELSE expr . FI
    (31) expr -> expr . = expr
    (32) expr -> expr . LE expr
    (33) expr -> expr . < expr
    (35) expr -> expr . / expr
    (36) expr -> expr . * expr
    (37) expr -> expr . - expr
    (38) expr -> expr . + expr
    (61) expr -> expr . @ TYPEID . OBJECTID ( parametros )
    (62) expr -> expr . . OBJECTID ( parametros )
    (63) expr -> expr . @ TYPEID . OBJECTID ( )
    (64) expr -> expr . . OBJECTID ( )
    FI              shift and go to state 200
    =               shift and go to state 67
    LE              shift and go to state 68
    <               shift and go to state 69
    /               shift and go to state 70
    *               shift and go to state 71
    -               shift and go to state 72
    +               shift and go to state 73
    @               shift and go to state 74
    .               shift and go to state 75


state 188

    (57) expr -> IF error THEN expr ELSE expr . FI
    (31) expr -> expr . = expr
    (32) expr -> expr . LE expr
    (33) expr -> expr . < expr
    (35) expr -> expr . / expr
    (36) expr -> expr . * expr
    (37) expr -> expr . - expr
    (38) expr -> expr . + expr
    (61) expr -> expr . @ TYPEID . OBJECTID ( parametros )
    (62) expr -> expr . . OBJECTID ( parametros )
    (63) expr -> expr . @ TYPEID . OBJECTID ( )
    (64) expr -> expr . . OBJECTID ( )
    FI              shift and go to state 201
    =               shift and go to state 67
    LE              shift and go to state 68
    <               shift and go to state 69
    /               shift and go to state 70
    *               shift and go to state 71
    -               shift and go to state 72
    +               shift and go to state 73
    @               shift and go to state 74
    .               shift and go to state 75


state 189

    (61) expr -> expr @ TYPEID . OBJECTID ( parametros . )
    (67) parametros -> parametros . , expr
    )               shift and go to state 202
    ,               shift and go to state 128


state 190

    (63) expr -> expr @ TYPEID . OBJECTID ( ) .
    =               reduce using rule 63 (expr -> expr @ TYPEID . OBJECTID ( ) .)
    LE              reduce using rule 63 (expr -> expr @ TYPEID . OBJECTID ( ) .)
    <               reduce using rule 63 (expr -> expr @ TYPEID . OBJECTID ( ) .)
    /               reduce using rule 63 (expr -> expr @ TYPEID . OBJECTID ( ) .)
    *               reduce using rule 63 (expr -> expr @ TYPEID . OBJECTID ( ) .)
    -               reduce using rule 63 (expr -> expr @ TYPEID . OBJECTID ( ) .)
    +               reduce using rule 63 (expr -> expr @ TYPEID . OBJECTID ( ) .)
    @               reduce using rule 63 (expr -> expr @ TYPEID . OBJECTID ( ) .)
    .               reduce using rule 63 (expr -> expr @ TYPEID . OBJECTID ( ) .)
    ;               reduce using rule 63 (expr -> expr @ TYPEID . OBJECTID ( ) .)
    )               reduce using rule 63 (expr -> expr @ TYPEID . OBJECTID ( ) .)
    OF              reduce using rule 63 (expr -> expr @ TYPEID . OBJECTID ( ) .)
    LOOP            reduce using rule 63 (expr -> expr @ TYPEID . OBJECTID ( ) .)
    THEN            reduce using rule 63 (expr -> expr @ TYPEID . OBJECTID ( ) .)
    ,               reduce using rule 63 (expr -> expr @ TYPEID . OBJECTID ( ) .)
    }               reduce using rule 63 (expr -> expr @ TYPEID . OBJECTID ( ) .)
    POOL            reduce using rule 63 (expr -> expr @ TYPEID . OBJECTID ( ) .)
    ELSE            reduce using rule 63 (expr -> expr @ TYPEID . OBJECTID ( ) .)
    IN              reduce using rule 63 (expr -> expr @ TYPEID . OBJECTID ( ) .)
    FI              reduce using rule 63 (expr -> expr @ TYPEID . OBJECTID ( ) .)


state 191

    (77) darrowlist -> darrowlist OBJECTID : TYPEID . DARROW expr ;
    DARROW          shift and go to state 203


state 192

    (78) darrowlist -> OBJECTID : TYPEID DARROW . error ;
    (79) darrowlist -> OBJECTID : TYPEID DARROW . expr ;
    (23) expr -> . BOOL_CONST
    (24) expr -> . error INT_CONST
    (25) expr -> . STR_CONST
    (26) expr -> . INT_CONST
    (27) expr -> . OBJECTID
    (28) expr -> . ( expr )
    (29) expr -> . NOT error
    (30) expr -> . NOT expr
    (31) expr -> . expr = expr
    (32) expr -> . expr LE expr
    (33) expr -> . expr < expr
    (34) expr -> . ~ expr
    (35) expr -> . expr / expr
    (36) expr -> . expr * expr
    (37) expr -> . expr - expr
    (38) expr -> . expr + expr
    (39) expr -> . ISVOID error
    (40) expr -> . ISVOID expr
    (41) expr -> . error TYPEID
    (42) expr -> . NEW TYPEID
    (43) expr -> . CASE expr OF darrowlist ESAC
    (44) expr -> . CASE expr OF error ESAC
    (45) expr -> . CASE error OF darrowlist ESAC
    (46) expr -> . LET OBJECTID : TYPEID expr IN error
    (47) expr -> . LET OBJECTID : TYPEID error IN expr
    (48) expr -> . LET OBJECTID : TYPEID inicializaciones IN expr
    (49) expr -> . LET OBJECTID : TYPEID ASSIGN expr IN expr
    (50) expr -> . LET OBJECTID : TYPEID IN expr
    (51) expr -> . { exprs }
    (52) expr -> . WHILE expr LOOP error POOL
    (53) expr -> . WHILE error LOOP expr POOL
    (54) expr -> . WHILE error LOOP error POOL
    (55) expr -> . WHILE expr LOOP expr POOL
    (56) expr -> . IF expr THEN expr ELSE expr FI
    (57) expr -> . IF error THEN expr ELSE expr FI
    (58) expr -> . IF expr THEN error FI
    (59) expr -> . OBJECTID ( parametros )
    (60) expr -> . OBJECTID ( )
    (61) expr -> . expr @ TYPEID . OBJECTID ( parametros )
    (62) expr -> . expr . OBJECTID ( parametros )
    (63) expr -> . expr @ TYPEID . OBJECTID ( )
    (64) expr -> . expr . OBJECTID ( )
    (65) expr -> . OBJECTID ASSIGN error
    (66) expr -> . OBJECTID ASSIGN expr
    error           shift and go to state 204
    BOOL_CONST      shift and go to state 45
    STR_CONST       shift and go to state 47
    INT_CONST       shift and go to state 46
    OBJECTID        shift and go to state 42
    (               shift and go to state 48
    NOT             shift and go to state 49
    ~               shift and go to state 50
    ISVOID          shift and go to state 51
    NEW             shift and go to state 52
    CASE            shift and go to state 53
    LET             shift and go to state 54
    {               shift and go to state 55
    WHILE           shift and go to state 56
    IF              shift and go to state 57

    expr                           shift and go to state 205

state 193

    (74) inicializacion -> OBJECTID : TYPEID .
    (75) inicializacion -> OBJECTID : TYPEID . ASSIGN error
    (76) inicializacion -> OBJECTID : TYPEID . ASSIGN expr
    ,               reduce using rule 74 (inicializacion -> OBJECTID : TYPEID .)
    IN              reduce using rule 74 (inicializacion -> OBJECTID : TYPEID .)
    ASSIGN          shift and go to state 206


state 194

    (46) expr -> LET OBJECTID : TYPEID expr IN error .
    =               reduce using rule 46 (expr -> LET OBJECTID : TYPEID expr IN error .)
    LE              reduce using rule 46 (expr -> LET OBJECTID : TYPEID expr IN error .)
    <               reduce using rule 46 (expr -> LET OBJECTID : TYPEID expr IN error .)
    /               reduce using rule 46 (expr -> LET OBJECTID : TYPEID expr IN error .)
    *               reduce using rule 46 (expr -> LET OBJECTID : TYPEID expr IN error .)
    -               reduce using rule 46 (expr -> LET OBJECTID : TYPEID expr IN error .)
    +               reduce using rule 46 (expr -> LET OBJECTID : TYPEID expr IN error .)
    @               reduce using rule 46 (expr -> LET OBJECTID : TYPEID expr IN error .)
    .               reduce using rule 46 (expr -> LET OBJECTID : TYPEID expr IN error .)
    ;               reduce using rule 46 (expr -> LET OBJECTID : TYPEID expr IN error .)
    )               reduce using rule 46 (expr -> LET OBJECTID : TYPEID expr IN error .)
    OF              reduce using rule 46 (expr -> LET OBJECTID : TYPEID expr IN error .)
    LOOP            reduce using rule 46 (expr -> LET OBJECTID : TYPEID expr IN error .)
    THEN            reduce using rule 46 (expr -> LET OBJECTID : TYPEID expr IN error .)
    ,               reduce using rule 46 (expr -> LET OBJECTID : TYPEID expr IN error .)
    }               reduce using rule 46 (expr -> LET OBJECTID : TYPEID expr IN error .)
    POOL            reduce using rule 46 (expr -> LET OBJECTID : TYPEID expr IN error .)
    ELSE            reduce using rule 46 (expr -> LET OBJECTID : TYPEID expr IN error .)
    IN              reduce using rule 46 (expr -> LET OBJECTID : TYPEID expr IN error .)
    FI              reduce using rule 46 (expr -> LET OBJECTID : TYPEID expr IN error .)


state 195

    (47) expr -> LET OBJECTID : TYPEID error IN expr .
    (31) expr -> expr . = expr
    (32) expr -> expr . LE expr
    (33) expr -> expr . < expr
    (35) expr -> expr . / expr
    (36) expr -> expr . * expr
    (37) expr -> expr . - expr
    (38) expr -> expr . + expr
    (61) expr -> expr . @ TYPEID . OBJECTID ( parametros )
    (62) expr -> expr . . OBJECTID ( parametros )
    (63) expr -> expr . @ TYPEID . OBJECTID ( )
    (64) expr -> expr . . OBJECTID ( )
  ! shift/reduce conflict for = resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for < resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for @ resolved as shift
  ! shift/reduce conflict for . resolved as shift
    ;               reduce using rule 47 (expr -> LET OBJECTID : TYPEID error IN expr .)
    )               reduce using rule 47 (expr -> LET OBJECTID : TYPEID error IN expr .)
    OF              reduce using rule 47 (expr -> LET OBJECTID : TYPEID error IN expr .)
    LOOP            reduce using rule 47 (expr -> LET OBJECTID : TYPEID error IN expr .)
    THEN            reduce using rule 47 (expr -> LET OBJECTID : TYPEID error IN expr .)
    ,               reduce using rule 47 (expr -> LET OBJECTID : TYPEID error IN expr .)
    }               reduce using rule 47 (expr -> LET OBJECTID : TYPEID error IN expr .)
    POOL            reduce using rule 47 (expr -> LET OBJECTID : TYPEID error IN expr .)
    ELSE            reduce using rule 47 (expr -> LET OBJECTID : TYPEID error IN expr .)
    IN              reduce using rule 47 (expr -> LET OBJECTID : TYPEID error IN expr .)
    FI              reduce using rule 47 (expr -> LET OBJECTID : TYPEID error IN expr .)
    =               shift and go to state 67
    LE              shift and go to state 68
    <               shift and go to state 69
    /               shift and go to state 70
    *               shift and go to state 71
    -               shift and go to state 72
    +               shift and go to state 73
    @               shift and go to state 74
    .               shift and go to state 75


state 196

    (48) expr -> LET OBJECTID : TYPEID inicializaciones IN expr .
    (31) expr -> expr . = expr
    (32) expr -> expr . LE expr
    (33) expr -> expr . < expr
    (35) expr -> expr . / expr
    (36) expr -> expr . * expr
    (37) expr -> expr . - expr
    (38) expr -> expr . + expr
    (61) expr -> expr . @ TYPEID . OBJECTID ( parametros )
    (62) expr -> expr . . OBJECTID ( parametros )
    (63) expr -> expr . @ TYPEID . OBJECTID ( )
    (64) expr -> expr . . OBJECTID ( )
  ! shift/reduce conflict for = resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for < resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for @ resolved as shift
  ! shift/reduce conflict for . resolved as shift
    ;               reduce using rule 48 (expr -> LET OBJECTID : TYPEID inicializaciones IN expr .)
    )               reduce using rule 48 (expr -> LET OBJECTID : TYPEID inicializaciones IN expr .)
    OF              reduce using rule 48 (expr -> LET OBJECTID : TYPEID inicializaciones IN expr .)
    LOOP            reduce using rule 48 (expr -> LET OBJECTID : TYPEID inicializaciones IN expr .)
    THEN            reduce using rule 48 (expr -> LET OBJECTID : TYPEID inicializaciones IN expr .)
    ,               reduce using rule 48 (expr -> LET OBJECTID : TYPEID inicializaciones IN expr .)
    }               reduce using rule 48 (expr -> LET OBJECTID : TYPEID inicializaciones IN expr .)
    POOL            reduce using rule 48 (expr -> LET OBJECTID : TYPEID inicializaciones IN expr .)
    ELSE            reduce using rule 48 (expr -> LET OBJECTID : TYPEID inicializaciones IN expr .)
    IN              reduce using rule 48 (expr -> LET OBJECTID : TYPEID inicializaciones IN expr .)
    FI              reduce using rule 48 (expr -> LET OBJECTID : TYPEID inicializaciones IN expr .)
    =               shift and go to state 67
    LE              shift and go to state 68
    <               shift and go to state 69
    /               shift and go to state 70
    *               shift and go to state 71
    -               shift and go to state 72
    +               shift and go to state 73
    @               shift and go to state 74
    .               shift and go to state 75


state 197

    (72) inicializaciones -> inicializaciones , inicializacion .
    IN              reduce using rule 72 (inicializaciones -> inicializaciones , inicializacion .)
    ,               reduce using rule 72 (inicializaciones -> inicializaciones , inicializacion .)


state 198

    (74) inicializacion -> OBJECTID . : TYPEID
    (75) inicializacion -> OBJECTID . : TYPEID ASSIGN error
    (76) inicializacion -> OBJECTID . : TYPEID ASSIGN expr
    :               shift and go to state 179


state 199

    (49) expr -> LET OBJECTID : TYPEID ASSIGN expr IN . expr
    (23) expr -> . BOOL_CONST
    (24) expr -> . error INT_CONST
    (25) expr -> . STR_CONST
    (26) expr -> . INT_CONST
    (27) expr -> . OBJECTID
    (28) expr -> . ( expr )
    (29) expr -> . NOT error
    (30) expr -> . NOT expr
    (31) expr -> . expr = expr
    (32) expr -> . expr LE expr
    (33) expr -> . expr < expr
    (34) expr -> . ~ expr
    (35) expr -> . expr / expr
    (36) expr -> . expr * expr
    (37) expr -> . expr - expr
    (38) expr -> . expr + expr
    (39) expr -> . ISVOID error
    (40) expr -> . ISVOID expr
    (41) expr -> . error TYPEID
    (42) expr -> . NEW TYPEID
    (43) expr -> . CASE expr OF darrowlist ESAC
    (44) expr -> . CASE expr OF error ESAC
    (45) expr -> . CASE error OF darrowlist ESAC
    (46) expr -> . LET OBJECTID : TYPEID expr IN error
    (47) expr -> . LET OBJECTID : TYPEID error IN expr
    (48) expr -> . LET OBJECTID : TYPEID inicializaciones IN expr
    (49) expr -> . LET OBJECTID : TYPEID ASSIGN expr IN expr
    (50) expr -> . LET OBJECTID : TYPEID IN expr
    (51) expr -> . { exprs }
    (52) expr -> . WHILE expr LOOP error POOL
    (53) expr -> . WHILE error LOOP expr POOL
    (54) expr -> . WHILE error LOOP error POOL
    (55) expr -> . WHILE expr LOOP expr POOL
    (56) expr -> . IF expr THEN expr ELSE expr FI
    (57) expr -> . IF error THEN expr ELSE expr FI
    (58) expr -> . IF expr THEN error FI
    (59) expr -> . OBJECTID ( parametros )
    (60) expr -> . OBJECTID ( )
    (61) expr -> . expr @ TYPEID . OBJECTID ( parametros )
    (62) expr -> . expr . OBJECTID ( parametros )
    (63) expr -> . expr @ TYPEID . OBJECTID ( )
    (64) expr -> . expr . OBJECTID ( )
    (65) expr -> . OBJECTID ASSIGN error
    (66) expr -> . OBJECTID ASSIGN expr
    BOOL_CONST      shift and go to state 45
    error           shift and go to state 77
    STR_CONST       shift and go to state 47
    INT_CONST       shift and go to state 46
    OBJECTID        shift and go to state 42
    (               shift and go to state 48
    NOT             shift and go to state 49
    ~               shift and go to state 50
    ISVOID          shift and go to state 51
    NEW             shift and go to state 52
    CASE            shift and go to state 53
    LET             shift and go to state 54
    {               shift and go to state 55
    WHILE           shift and go to state 56
    IF              shift and go to state 57

    expr                           shift and go to state 207

state 200

    (56) expr -> IF expr THEN expr ELSE expr FI .
    =               reduce using rule 56 (expr -> IF expr THEN expr ELSE expr FI .)
    LE              reduce using rule 56 (expr -> IF expr THEN expr ELSE expr FI .)
    <               reduce using rule 56 (expr -> IF expr THEN expr ELSE expr FI .)
    /               reduce using rule 56 (expr -> IF expr THEN expr ELSE expr FI .)
    *               reduce using rule 56 (expr -> IF expr THEN expr ELSE expr FI .)
    -               reduce using rule 56 (expr -> IF expr THEN expr ELSE expr FI .)
    +               reduce using rule 56 (expr -> IF expr THEN expr ELSE expr FI .)
    @               reduce using rule 56 (expr -> IF expr THEN expr ELSE expr FI .)
    .               reduce using rule 56 (expr -> IF expr THEN expr ELSE expr FI .)
    ;               reduce using rule 56 (expr -> IF expr THEN expr ELSE expr FI .)
    )               reduce using rule 56 (expr -> IF expr THEN expr ELSE expr FI .)
    OF              reduce using rule 56 (expr -> IF expr THEN expr ELSE expr FI .)
    LOOP            reduce using rule 56 (expr -> IF expr THEN expr ELSE expr FI .)
    THEN            reduce using rule 56 (expr -> IF expr THEN expr ELSE expr FI .)
    ,               reduce using rule 56 (expr -> IF expr THEN expr ELSE expr FI .)
    }               reduce using rule 56 (expr -> IF expr THEN expr ELSE expr FI .)
    POOL            reduce using rule 56 (expr -> IF expr THEN expr ELSE expr FI .)
    ELSE            reduce using rule 56 (expr -> IF expr THEN expr ELSE expr FI .)
    IN              reduce using rule 56 (expr -> IF expr THEN expr ELSE expr FI .)
    FI              reduce using rule 56 (expr -> IF expr THEN expr ELSE expr FI .)


state 201

    (57) expr -> IF error THEN expr ELSE expr FI .
    =               reduce using rule 57 (expr -> IF error THEN expr ELSE expr FI .)
    LE              reduce using rule 57 (expr -> IF error THEN expr ELSE expr FI .)
    <               reduce using rule 57 (expr -> IF error THEN expr ELSE expr FI .)
    /               reduce using rule 57 (expr -> IF error THEN expr ELSE expr FI .)
    *               reduce using rule 57 (expr -> IF error THEN expr ELSE expr FI .)
    -               reduce using rule 57 (expr -> IF error THEN expr ELSE expr FI .)
    +               reduce using rule 57 (expr -> IF error THEN expr ELSE expr FI .)
    @               reduce using rule 57 (expr -> IF error THEN expr ELSE expr FI .)
    .               reduce using rule 57 (expr -> IF error THEN expr ELSE expr FI .)
    ;               reduce using rule 57 (expr -> IF error THEN expr ELSE expr FI .)
    )               reduce using rule 57 (expr -> IF error THEN expr ELSE expr FI .)
    OF              reduce using rule 57 (expr -> IF error THEN expr ELSE expr FI .)
    LOOP            reduce using rule 57 (expr -> IF error THEN expr ELSE expr FI .)
    THEN            reduce using rule 57 (expr -> IF error THEN expr ELSE expr FI .)
    ,               reduce using rule 57 (expr -> IF error THEN expr ELSE expr FI .)
    }               reduce using rule 57 (expr -> IF error THEN expr ELSE expr FI .)
    POOL            reduce using rule 57 (expr -> IF error THEN expr ELSE expr FI .)
    ELSE            reduce using rule 57 (expr -> IF error THEN expr ELSE expr FI .)
    IN              reduce using rule 57 (expr -> IF error THEN expr ELSE expr FI .)
    FI              reduce using rule 57 (expr -> IF error THEN expr ELSE expr FI .)


state 202

    (61) expr -> expr @ TYPEID . OBJECTID ( parametros ) .
    =               reduce using rule 61 (expr -> expr @ TYPEID . OBJECTID ( parametros ) .)
    LE              reduce using rule 61 (expr -> expr @ TYPEID . OBJECTID ( parametros ) .)
    <               reduce using rule 61 (expr -> expr @ TYPEID . OBJECTID ( parametros ) .)
    /               reduce using rule 61 (expr -> expr @ TYPEID . OBJECTID ( parametros ) .)
    *               reduce using rule 61 (expr -> expr @ TYPEID . OBJECTID ( parametros ) .)
    -               reduce using rule 61 (expr -> expr @ TYPEID . OBJECTID ( parametros ) .)
    +               reduce using rule 61 (expr -> expr @ TYPEID . OBJECTID ( parametros ) .)
    @               reduce using rule 61 (expr -> expr @ TYPEID . OBJECTID ( parametros ) .)
    .               reduce using rule 61 (expr -> expr @ TYPEID . OBJECTID ( parametros ) .)
    ;               reduce using rule 61 (expr -> expr @ TYPEID . OBJECTID ( parametros ) .)
    )               reduce using rule 61 (expr -> expr @ TYPEID . OBJECTID ( parametros ) .)
    OF              reduce using rule 61 (expr -> expr @ TYPEID . OBJECTID ( parametros ) .)
    LOOP            reduce using rule 61 (expr -> expr @ TYPEID . OBJECTID ( parametros ) .)
    THEN            reduce using rule 61 (expr -> expr @ TYPEID . OBJECTID ( parametros ) .)
    ,               reduce using rule 61 (expr -> expr @ TYPEID . OBJECTID ( parametros ) .)
    }               reduce using rule 61 (expr -> expr @ TYPEID . OBJECTID ( parametros ) .)
    POOL            reduce using rule 61 (expr -> expr @ TYPEID . OBJECTID ( parametros ) .)
    ELSE            reduce using rule 61 (expr -> expr @ TYPEID . OBJECTID ( parametros ) .)
    IN              reduce using rule 61 (expr -> expr @ TYPEID . OBJECTID ( parametros ) .)
    FI              reduce using rule 61 (expr -> expr @ TYPEID . OBJECTID ( parametros ) .)


state 203

    (77) darrowlist -> darrowlist OBJECTID : TYPEID DARROW . expr ;
    (23) expr -> . BOOL_CONST
    (24) expr -> . error INT_CONST
    (25) expr -> . STR_CONST
    (26) expr -> . INT_CONST
    (27) expr -> . OBJECTID
    (28) expr -> . ( expr )
    (29) expr -> . NOT error
    (30) expr -> . NOT expr
    (31) expr -> . expr = expr
    (32) expr -> . expr LE expr
    (33) expr -> . expr < expr
    (34) expr -> . ~ expr
    (35) expr -> . expr / expr
    (36) expr -> . expr * expr
    (37) expr -> . expr - expr
    (38) expr -> . expr + expr
    (39) expr -> . ISVOID error
    (40) expr -> . ISVOID expr
    (41) expr -> . error TYPEID
    (42) expr -> . NEW TYPEID
    (43) expr -> . CASE expr OF darrowlist ESAC
    (44) expr -> . CASE expr OF error ESAC
    (45) expr -> . CASE error OF darrowlist ESAC
    (46) expr -> . LET OBJECTID : TYPEID expr IN error
    (47) expr -> . LET OBJECTID : TYPEID error IN expr
    (48) expr -> . LET OBJECTID : TYPEID inicializaciones IN expr
    (49) expr -> . LET OBJECTID : TYPEID ASSIGN expr IN expr
    (50) expr -> . LET OBJECTID : TYPEID IN expr
    (51) expr -> . { exprs }
    (52) expr -> . WHILE expr LOOP error POOL
    (53) expr -> . WHILE error LOOP expr POOL
    (54) expr -> . WHILE error LOOP error POOL
    (55) expr -> . WHILE expr LOOP expr POOL
    (56) expr -> . IF expr THEN expr ELSE expr FI
    (57) expr -> . IF error THEN expr ELSE expr FI
    (58) expr -> . IF expr THEN error FI
    (59) expr -> . OBJECTID ( parametros )
    (60) expr -> . OBJECTID ( )
    (61) expr -> . expr @ TYPEID . OBJECTID ( parametros )
    (62) expr -> . expr . OBJECTID ( parametros )
    (63) expr -> . expr @ TYPEID . OBJECTID ( )
    (64) expr -> . expr . OBJECTID ( )
    (65) expr -> . OBJECTID ASSIGN error
    (66) expr -> . OBJECTID ASSIGN expr
    BOOL_CONST      shift and go to state 45
    error           shift and go to state 77
    STR_CONST       shift and go to state 47
    INT_CONST       shift and go to state 46
    OBJECTID        shift and go to state 42
    (               shift and go to state 48
    NOT             shift and go to state 49
    ~               shift and go to state 50
    ISVOID          shift and go to state 51
    NEW             shift and go to state 52
    CASE            shift and go to state 53
    LET             shift and go to state 54
    {               shift and go to state 55
    WHILE           shift and go to state 56
    IF              shift and go to state 57

    expr                           shift and go to state 208

state 204

    (78) darrowlist -> OBJECTID : TYPEID DARROW error . ;
    (24) expr -> error . INT_CONST
    (41) expr -> error . TYPEID
    ;               shift and go to state 209
    INT_CONST       shift and go to state 66
    TYPEID          shift and go to state 65


state 205

    (79) darrowlist -> OBJECTID : TYPEID DARROW expr . ;
    (31) expr -> expr . = expr
    (32) expr -> expr . LE expr
    (33) expr -> expr . < expr
    (35) expr -> expr . / expr
    (36) expr -> expr . * expr
    (37) expr -> expr . - expr
    (38) expr -> expr . + expr
    (61) expr -> expr . @ TYPEID . OBJECTID ( parametros )
    (62) expr -> expr . . OBJECTID ( parametros )
    (63) expr -> expr . @ TYPEID . OBJECTID ( )
    (64) expr -> expr . . OBJECTID ( )
    ;               shift and go to state 210
    =               shift and go to state 67
    LE              shift and go to state 68
    <               shift and go to state 69
    /               shift and go to state 70
    *               shift and go to state 71
    -               shift and go to state 72
    +               shift and go to state 73
    @               shift and go to state 74
    .               shift and go to state 75


state 206

    (75) inicializacion -> OBJECTID : TYPEID ASSIGN . error
    (76) inicializacion -> OBJECTID : TYPEID ASSIGN . expr
    (23) expr -> . BOOL_CONST
    (24) expr -> . error INT_CONST
    (25) expr -> . STR_CONST
    (26) expr -> . INT_CONST
    (27) expr -> . OBJECTID
    (28) expr -> . ( expr )
    (29) expr -> . NOT error
    (30) expr -> . NOT expr
    (31) expr -> . expr = expr
    (32) expr -> . expr LE expr
    (33) expr -> . expr < expr
    (34) expr -> . ~ expr
    (35) expr -> . expr / expr
    (36) expr -> . expr * expr
    (37) expr -> . expr - expr
    (38) expr -> . expr + expr
    (39) expr -> . ISVOID error
    (40) expr -> . ISVOID expr
    (41) expr -> . error TYPEID
    (42) expr -> . NEW TYPEID
    (43) expr -> . CASE expr OF darrowlist ESAC
    (44) expr -> . CASE expr OF error ESAC
    (45) expr -> . CASE error OF darrowlist ESAC
    (46) expr -> . LET OBJECTID : TYPEID expr IN error
    (47) expr -> . LET OBJECTID : TYPEID error IN expr
    (48) expr -> . LET OBJECTID : TYPEID inicializaciones IN expr
    (49) expr -> . LET OBJECTID : TYPEID ASSIGN expr IN expr
    (50) expr -> . LET OBJECTID : TYPEID IN expr
    (51) expr -> . { exprs }
    (52) expr -> . WHILE expr LOOP error POOL
    (53) expr -> . WHILE error LOOP expr POOL
    (54) expr -> . WHILE error LOOP error POOL
    (55) expr -> . WHILE expr LOOP expr POOL
    (56) expr -> . IF expr THEN expr ELSE expr FI
    (57) expr -> . IF error THEN expr ELSE expr FI
    (58) expr -> . IF expr THEN error FI
    (59) expr -> . OBJECTID ( parametros )
    (60) expr -> . OBJECTID ( )
    (61) expr -> . expr @ TYPEID . OBJECTID ( parametros )
    (62) expr -> . expr . OBJECTID ( parametros )
    (63) expr -> . expr @ TYPEID . OBJECTID ( )
    (64) expr -> . expr . OBJECTID ( )
    (65) expr -> . OBJECTID ASSIGN error
    (66) expr -> . OBJECTID ASSIGN expr
    error           shift and go to state 211
    BOOL_CONST      shift and go to state 45
    STR_CONST       shift and go to state 47
    INT_CONST       shift and go to state 46
    OBJECTID        shift and go to state 42
    (               shift and go to state 48
    NOT             shift and go to state 49
    ~               shift and go to state 50
    ISVOID          shift and go to state 51
    NEW             shift and go to state 52
    CASE            shift and go to state 53
    LET             shift and go to state 54
    {               shift and go to state 55
    WHILE           shift and go to state 56
    IF              shift and go to state 57

    expr                           shift and go to state 212

state 207

    (49) expr -> LET OBJECTID : TYPEID ASSIGN expr IN expr .
    (31) expr -> expr . = expr
    (32) expr -> expr . LE expr
    (33) expr -> expr . < expr
    (35) expr -> expr . / expr
    (36) expr -> expr . * expr
    (37) expr -> expr . - expr
    (38) expr -> expr . + expr
    (61) expr -> expr . @ TYPEID . OBJECTID ( parametros )
    (62) expr -> expr . . OBJECTID ( parametros )
    (63) expr -> expr . @ TYPEID . OBJECTID ( )
    (64) expr -> expr . . OBJECTID ( )
  ! shift/reduce conflict for = resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for < resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for @ resolved as shift
  ! shift/reduce conflict for . resolved as shift
    ;               reduce using rule 49 (expr -> LET OBJECTID : TYPEID ASSIGN expr IN expr .)
    )               reduce using rule 49 (expr -> LET OBJECTID : TYPEID ASSIGN expr IN expr .)
    OF              reduce using rule 49 (expr -> LET OBJECTID : TYPEID ASSIGN expr IN expr .)
    LOOP            reduce using rule 49 (expr -> LET OBJECTID : TYPEID ASSIGN expr IN expr .)
    THEN            reduce using rule 49 (expr -> LET OBJECTID : TYPEID ASSIGN expr IN expr .)
    ,               reduce using rule 49 (expr -> LET OBJECTID : TYPEID ASSIGN expr IN expr .)
    }               reduce using rule 49 (expr -> LET OBJECTID : TYPEID ASSIGN expr IN expr .)
    POOL            reduce using rule 49 (expr -> LET OBJECTID : TYPEID ASSIGN expr IN expr .)
    ELSE            reduce using rule 49 (expr -> LET OBJECTID : TYPEID ASSIGN expr IN expr .)
    IN              reduce using rule 49 (expr -> LET OBJECTID : TYPEID ASSIGN expr IN expr .)
    FI              reduce using rule 49 (expr -> LET OBJECTID : TYPEID ASSIGN expr IN expr .)
    =               shift and go to state 67
    LE              shift and go to state 68
    <               shift and go to state 69
    /               shift and go to state 70
    *               shift and go to state 71
    -               shift and go to state 72
    +               shift and go to state 73
    @               shift and go to state 74
    .               shift and go to state 75


state 208

    (77) darrowlist -> darrowlist OBJECTID : TYPEID DARROW expr . ;
    (31) expr -> expr . = expr
    (32) expr -> expr . LE expr
    (33) expr -> expr . < expr
    (35) expr -> expr . / expr
    (36) expr -> expr . * expr
    (37) expr -> expr . - expr
    (38) expr -> expr . + expr
    (61) expr -> expr . @ TYPEID . OBJECTID ( parametros )
    (62) expr -> expr . . OBJECTID ( parametros )
    (63) expr -> expr . @ TYPEID . OBJECTID ( )
    (64) expr -> expr . . OBJECTID ( )
    ;               shift and go to state 213
    =               shift and go to state 67
    LE              shift and go to state 68
    <               shift and go to state 69
    /               shift and go to state 70
    *               shift and go to state 71
    -               shift and go to state 72
    +               shift and go to state 73
    @               shift and go to state 74
    .               shift and go to state 75


state 209

    (78) darrowlist -> OBJECTID : TYPEID DARROW error ; .
    ESAC            reduce using rule 78 (darrowlist -> OBJECTID : TYPEID DARROW error ; .)
    OBJECTID        reduce using rule 78 (darrowlist -> OBJECTID : TYPEID DARROW error ; .)


state 210

    (79) darrowlist -> OBJECTID : TYPEID DARROW expr ; .
    ESAC            reduce using rule 79 (darrowlist -> OBJECTID : TYPEID DARROW expr ; .)
    OBJECTID        reduce using rule 79 (darrowlist -> OBJECTID : TYPEID DARROW expr ; .)


state 211

    (75) inicializacion -> OBJECTID : TYPEID ASSIGN error .
    (24) expr -> error . INT_CONST
    (41) expr -> error . TYPEID
    ,               reduce using rule 75 (inicializacion -> OBJECTID : TYPEID ASSIGN error .)
    IN              reduce using rule 75 (inicializacion -> OBJECTID : TYPEID ASSIGN error .)
    INT_CONST       shift and go to state 66
    TYPEID          shift and go to state 65


state 212

    (76) inicializacion -> OBJECTID : TYPEID ASSIGN expr .
    (31) expr -> expr . = expr
    (32) expr -> expr . LE expr
    (33) expr -> expr . < expr
    (35) expr -> expr . / expr
    (36) expr -> expr . * expr
    (37) expr -> expr . - expr
    (38) expr -> expr . + expr
    (61) expr -> expr . @ TYPEID . OBJECTID ( parametros )
    (62) expr -> expr . . OBJECTID ( parametros )
    (63) expr -> expr . @ TYPEID . OBJECTID ( )
    (64) expr -> expr . . OBJECTID ( )
    ,               reduce using rule 76 (inicializacion -> OBJECTID : TYPEID ASSIGN expr .)
    IN              reduce using rule 76 (inicializacion -> OBJECTID : TYPEID ASSIGN expr .)
    =               shift and go to state 67
    LE              shift and go to state 68
    <               shift and go to state 69
    /               shift and go to state 70
    *               shift and go to state 71
    -               shift and go to state 72
    +               shift and go to state 73
    @               shift and go to state 74
    .               shift and go to state 75


state 213

    (77) darrowlist -> darrowlist OBJECTID : TYPEID DARROW expr ; .
    ESAC            reduce using rule 77 (darrowlist -> darrowlist OBJECTID : TYPEID DARROW expr ; .)
    OBJECTID        reduce using rule 77 (darrowlist -> darrowlist OBJECTID : TYPEID DARROW expr ; .)


Conflicts:

shift/reduce conflict for = in state 101 resolved as shift
shift/reduce conflict for LE in state 101 resolved as shift
shift/reduce conflict for < in state 101 resolved as shift
shift/reduce conflict for / in state 101 resolved as shift
shift/reduce conflict for * in state 101 resolved as shift
shift/reduce conflict for - in state 101 resolved as shift
shift/reduce conflict for + in state 101 resolved as shift
shift/reduce conflict for @ in state 101 resolved as shift
shift/reduce conflict for . in state 101 resolved as shift
shift/reduce conflict for = in state 181 resolved as shift
shift/reduce conflict for LE in state 181 resolved as shift
shift/reduce conflict for < in state 181 resolved as shift
shift/reduce conflict for / in state 181 resolved as shift
shift/reduce conflict for * in state 181 resolved as shift
shift/reduce conflict for - in state 181 resolved as shift
shift/reduce conflict for + in state 181 resolved as shift
shift/reduce conflict for @ in state 181 resolved as shift
shift/reduce conflict for . in state 181 resolved as shift
shift/reduce conflict for = in state 195 resolved as shift
shift/reduce conflict for LE in state 195 resolved as shift
shift/reduce conflict for < in state 195 resolved as shift
shift/reduce conflict for / in state 195 resolved as shift
shift/reduce conflict for * in state 195 resolved as shift
shift/reduce conflict for - in state 195 resolved as shift
shift/reduce conflict for + in state 195 resolved as shift
shift/reduce conflict for @ in state 195 resolved as shift
shift/reduce conflict for . in state 195 resolved as shift
shift/reduce conflict for = in state 196 resolved as shift
shift/reduce conflict for LE in state 196 resolved as shift
shift/reduce conflict for < in state 196 resolved as shift
shift/reduce conflict for / in state 196 resolved as shift
shift/reduce conflict for * in state 196 resolved as shift
shift/reduce conflict for - in state 196 resolved as shift
shift/reduce conflict for + in state 196 resolved as shift
shift/reduce conflict for @ in state 196 resolved as shift
shift/reduce conflict for . in state 196 resolved as shift
shift/reduce conflict for = in state 207 resolved as shift
shift/reduce conflict for LE in state 207 resolved as shift
shift/reduce conflict for < in state 207 resolved as shift
shift/reduce conflict for / in state 207 resolved as shift
shift/reduce conflict for * in state 207 resolved as shift
shift/reduce conflict for - in state 207 resolved as shift
shift/reduce conflict for + in state 207 resolved as shift
shift/reduce conflict for @ in state 207 resolved as shift
shift/reduce conflict for . in state 207 resolved as shift